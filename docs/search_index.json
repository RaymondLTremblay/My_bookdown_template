[["index.html", "Ciencia de Datos con R Capítulo1 Ciencia de Datos con R", " Ciencia de Datos con R 2024-11-07 Capítulo1 Ciencia de Datos con R Instructor: Raymond L. Tremblay, PhD Oficina: NL 104 Teléfono: (787) 850-0000 (dept de biología) Coreo electrónico: raymond.tremblay_at_upr_dot_edu 1.0.1 Horario de clase Presentación de temas y discusión: Lunes y miercoles 4:30-5:50pm (80 mins) (NOTE: Necesita traer su laptop!) Hora de consulta con Estudiantes: Lunes y miercoles de 1:00 a 4:00pm (NL 104). 1.0.2 Libros sugeridos Garrett Grolemund, Hadley Wickham. R for Data Science En Ingles. Garrett Grolemund, Hadley Wickham. R para Ciencia de Datos En Español. Tremblay y Hernández-Serrano, 2018. • Artículos revisados por pares serán asignados para fomentar el método de utilizar estas herramientas en ciencias. 1.0.3 Programados R- free statistical programming language RStudio MSExcel, Numbers o Google Sheet 1.0.4 Prerequisitos Ninguno 1.0.5 Descripción del curso Estudio de diferentes técnicas estadísticas con aplicación a la Biología. Se enfatizará en la estadística descriptiva, análisis de regresiones y correlaciones, pruebas de hipótesis paramétricas y no paramétricas y análisis de frecuencias y varianza. Se hará énfasis en los supuestos de las pruebas, para seleccionar cual método estadístico es adecuado para el diseño experimental y la distribución de los datos. Además, se utilizarán las computadoras como mecanismos para facilitar y agilizar el cómputo y análisis estadístico. 1.0.6 Objetivos del curso Tema general del curso - Desarrollar destrezas de organizar y evaluar datos para contestar preguntas cuantitativas con R, RStudio, RMarkdown y Quarto y otros programados 1.0.7 Puntuación: Este curso sera evaluado con los siguiente items: Item Valor Ejercicios práctico (10-15 total) 80% Participación en clase 10% Asistencia a clase 10% NOTE: Escala de Notas: A (100 to 90) B (89 to 80) C (79 to 70) D (69 to 60) F (&lt; 60) 1.0.8 Examenes: Habrá dos examen parciales y un examen final comprensivo. Estos exámenes serán de selecciones múltiples, pareo, respuesta corta, y análisis de conceptos. El examen final será comprensivo (incluye todos los temas del semestre). En este examen final se hará énfasis en la comprensión y aplicaciones de los supuestos de las pruebas y la capacidad de seleccionar la prueba correcta basado en el diseño experimental y los supuestos. 1.0.9 Es obligatorio tener la camera prendida durante todo el exámen. No es permitido usar el celular, Ud. tendrá que demostrar que el celular este detrás de uds antes de comenzar el examen 1.0.10 Conferencias En la clase las notas serán basado primeramente en la participación y algunas pruebas cortas. Su participación es esencial para el aprendizaje (y para un ambiente positivo). Aprender NO es un proceso pasivo: los estudiantes deben participar haciendo preguntas y discutir el material con su conocimiento anterior (Su bagaje de conocimiento). 1.0.11 Ejercicios Los ejercicios están enfocado en la aplicación de conceptos y métodos discutido en la clase y solución de problemas. Se hará un esfuerza de usar datos reales para demostrar como trabajar con los análisis, tablas, y gráficos en R, RStudio y RMarkdown. Típicamente, tendrán solamente una semana para hacer los ejercicios y entregarlos en formato .html. 1.0.12 Faltar a clase y examen: Los trabajos cortos y pruebas cortas NO se reponen. Si falta a la clase es su responsabilidad hablar con los otros estudiantes para saber lo que se discutió en la clase. Los examen se reponen solamente por una escusa valida. 1.0.13 Derechos de Estudiantes con Impedimentos La UPR-Humacao cumple con las leyes ADA (Americans with Disabilities Act) y 51 (Servicios Educativos Integrales para Personas con Impedimentos) para garantizar igualdad en el acceso a la educación y servicios. Estudiantes con impedimentos: informe al (la) profesor(a) de cada curso sobre sus necesidades especiales y/o de acomodo razonable para el curso, en la tarjeta de información de la primera semana y visite la Oficina de Servicios para la Población con Impedimentos (SERPI) a la brevedad posible. Se mantendrá la confidencialidad. 1.0.14 Integridad académica La Universidad de Puerto Rico promueve los más altos estándares de integridad académica y científica. El Artículo 6.2 del Reglamento General de Estudiantes de la Universidad de Puerto Rico (Certificación Núm. 13, 2009-2010, de la Junta de Síndicos) establece que “la deshonestidad académica incluye, pero no se limita a: acciones fraudulentas, la obtención de notas o grados académicos valiéndose de falsas o fraudulentas simulaciones, copiar total o parcialmente la labor académica de otra persona, plagiar total o parcialmente el trabajo de otra persona, copiar total o parcialmente las respuestas de otra persona a las preguntas de un examen, haciendo o consiguiendo que otro tome en su nombre cualquier prueba o examen oral o escrito, así como la ayuda o facilitación para que otra persona incurra en la referida conducta”. Cualquiera de estas acciones estará sujeta a sanciones disciplinarias en conformidad con el procedimiento disciplinario establecido en el Reglamento General de Estudiantes de la UPR vigente. 1.0.15 Comentario sobre grabar videos y/o audio de las clases Los estudiantes no PUEDEN grabar la clase por forma de video o audio sin el permiso del profesor. Algunos estudiantes con necesidades especiales pueden hablar con el profesor para pedir el permiso. La solicitud y aprobación del permiso tiene que ser por escrito (por ejemplo por email). 1.0.16 Espacio libre de acoso sexual La Universidad de Puerto Rico prohíbe el descrimen por razón de sexo y género en todas sus modalidades, incluyendo el hostigamiento sexual. Según la Política Institucional contra el hostigamiento sexual, en la Universidad de Puerto Rico, Cert. Núm. 130 (2014-2015) de la Junta de Gobierno, si un(a) estudiante está siendo o fue afectado por conductas relacionadas a hostigamiento sexual, puede acudir ante la Oficina del Procurador Estudiantil, el Decanato de Estudiantes o el Coordinador de Cumplimiento con Título IX para una orientación o presentar una querella. 1.0.17 Protocolo de la Clase Los teléfonos mobiles serán apagado durante la clase. Si necesita una calculadora traerla al salón. El teléfono no debería esta visible durante la clase al menos que pide permiso al instructor. Recuerda que que se usara computadoras portátiles en cada sesión. "],["flujo-de-trabajo.html", "Capítulo2 Flujo de trabajo 2.1 Temas: 2.2 Creación de un proyecto: 2.3 Información sobre el archivo 2.4 Ejemplos de Gráficos", " Capítulo2 Flujo de trabajo El tema proviene de los siguientes sitios. English: https://r4ds.had.co.nz/workflow-projects.html Español: https://es.r4ds.hadley.nz/04-workflow-basics.html Fecha de la ultima revisión ## [1] &quot;2024-11-07&quot; 2.1 Temas: Reduciendo Errores getwd() setwd() Su Proyecto Selecionar el tab Session →→ Set Working Directory →→ To Project Directory *** 2.2 Creación de un proyecto: crear un proyecto para cada curso. crear un proyecto para cada investigación. No se te olvida de añadir tu archivos de datos en el proyecto. Describe claramente todos tus análisis y donde conseguiste la información. Describe tu interpretación de los análisis o gráficos. Correr los “scripts” uno a la vez para asegurar que funcione. knit el archivo .rmd para asegurar que no falte nada. no mezclar proyectos de investigación en un mismo proyecto. #install.packages(&quot;tidyverse&quot;) library(tidyverse) # ggplot2, dplyr, tidyr, readr, purrr, tibble, stringr, forcats # install.packages(&quot;datos&quot;) library(datos) 2.2.1 Un set de sobre carros en el archivo (paquete) datos millas ## # A tibble: 234 × 11 ## fabricante modelo cilindrada anio cilindros transmision traccion ciudad ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; ## 1 audi a4 1.8 1999 4 auto(l5) d 18 ## 2 audi a4 1.8 1999 4 manual(m5) d 21 ## 3 audi a4 2 2008 4 manual(m6) d 20 ## 4 audi a4 2 2008 4 auto(av) d 21 ## 5 audi a4 2.8 1999 6 auto(l5) d 16 ## 6 audi a4 2.8 1999 6 manual(m5) d 18 ## 7 audi a4 3.1 2008 6 auto(av) d 18 ## 8 audi a4 quattro 1.8 1999 4 manual(m5) 4 18 ## 9 audi a4 quattro 1.8 1999 4 auto(l5) 4 16 ## 10 audi a4 quattro 2 2008 4 manual(m6) 4 20 ## # ℹ 224 more rows ## # ℹ 3 more variables: autopista &lt;int&gt;, combustible &lt;chr&gt;, clase &lt;chr&gt; 2.2.2 Mi primer gráfico ggplot(data = millas) + geom_point(mapping = aes(x = cilindrada, y = autopista)) 2.2.3 Las funciones head y tail ggplot(data=millas) millas ## # A tibble: 234 × 11 ## fabricante modelo cilindrada anio cilindros transmision traccion ciudad ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; ## 1 audi a4 1.8 1999 4 auto(l5) d 18 ## 2 audi a4 1.8 1999 4 manual(m5) d 21 ## 3 audi a4 2 2008 4 manual(m6) d 20 ## 4 audi a4 2 2008 4 auto(av) d 21 ## 5 audi a4 2.8 1999 6 auto(l5) d 16 ## 6 audi a4 2.8 1999 6 manual(m5) d 18 ## 7 audi a4 3.1 2008 6 auto(av) d 18 ## 8 audi a4 quattro 1.8 1999 4 manual(m5) 4 18 ## 9 audi a4 quattro 1.8 1999 4 auto(l5) 4 16 ## 10 audi a4 quattro 2 2008 4 manual(m6) 4 20 ## # ℹ 224 more rows ## # ℹ 3 more variables: autopista &lt;int&gt;, combustible &lt;chr&gt;, clase &lt;chr&gt; head(millas, n=3) # las primeras 6 filas ## # A tibble: 3 × 11 ## fabricante modelo cilindrada anio cilindros transmision traccion ciudad ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; ## 1 audi a4 1.8 1999 4 auto(l5) d 18 ## 2 audi a4 1.8 1999 4 manual(m5) d 21 ## 3 audi a4 2 2008 4 manual(m6) d 20 ## # ℹ 3 more variables: autopista &lt;int&gt;, combustible &lt;chr&gt;, clase &lt;chr&gt; tail(millas, n=10) # las ultimas 10 filas ## # A tibble: 10 × 11 ## fabricante modelo cilindrada anio cilindros transmision traccion ciudad ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; ## 1 volkswagen new beetle 2 1999 4 auto(l4) d 19 ## 2 volkswagen new beetle 2.5 2008 5 manual(m5) d 20 ## 3 volkswagen new beetle 2.5 2008 5 auto(s6) d 20 ## 4 volkswagen passat 1.8 1999 4 manual(m5) d 21 ## 5 volkswagen passat 1.8 1999 4 auto(l5) d 18 ## 6 volkswagen passat 2 2008 4 auto(s6) d 19 ## 7 volkswagen passat 2 2008 4 manual(m6) d 21 ## 8 volkswagen passat 2.8 1999 6 auto(l5) d 16 ## 9 volkswagen passat 2.8 1999 6 manual(m5) d 18 ## 10 volkswagen passat 3.6 2008 6 auto(s6) d 17 ## # ℹ 3 more variables: autopista &lt;int&gt;, combustible &lt;chr&gt;, clase &lt;chr&gt; 2.3 Información sobre el archivo Usa el signo de interogación ? antes del nombre de la función o archivo ?millas ?head 2.3.1 Las dimensiones del archivo dim(millas) # dimension of data frame ## [1] 234 11 2.3.2 Construcción de mi primer gráfico el nombre del archivo es primero nombre de las variables (nombre de las columnas) si quiere tener un color para cada grupo ggplot(data = millas) + geom_point(mapping = aes(x = cilindrada, y = autopista, colour=fabricante)) 2.3.3 La función shape para cambiar la forma de los puntos La función shape es para cambiar el estilo de los puntos ggplot(data = millas) + geom_point(mapping = aes(x = cilindrada, y = autopista), shape=23, color = &quot;369787&quot;, fill=&quot;yellow&quot;) 2.3.4 Salvar un grafico en otro formato Como salvar la figura en formato recuperable para subir en otros documentos o compartir ggplot(data = millas) + geom_point(mapping = aes(x = cilindrada, y = autopista), color = &quot;blue&quot;) ggsave(&quot;cilindro_milla.jpg&quot;) #. png, .tiff millas ## # A tibble: 234 × 11 ## fabricante modelo cilindrada anio cilindros transmision traccion ciudad ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; ## 1 audi a4 1.8 1999 4 auto(l5) d 18 ## 2 audi a4 1.8 1999 4 manual(m5) d 21 ## 3 audi a4 2 2008 4 manual(m6) d 20 ## 4 audi a4 2 2008 4 auto(av) d 21 ## 5 audi a4 2.8 1999 6 auto(l5) d 16 ## 6 audi a4 2.8 1999 6 manual(m5) d 18 ## 7 audi a4 3.1 2008 6 auto(av) d 18 ## 8 audi a4 quattro 1.8 1999 4 manual(m5) 4 18 ## 9 audi a4 quattro 1.8 1999 4 auto(l5) 4 16 ## 10 audi a4 quattro 2 2008 4 manual(m6) 4 20 ## # ℹ 224 more rows ## # ℹ 3 more variables: autopista &lt;int&gt;, combustible &lt;chr&gt;, clase &lt;chr&gt; Ejercicio para someter: baja el paquete “ggversa” activar el paquete “ggversa” mirar las variables del archivo en este paquete que se llama “Anolis” haga un gráfico que incluye lo siguiente en el eje de x = el SVL. que es el tamaño del lagarto del hocico a la cloaca y en la variable de “TAIL” en el eje de y. selecciona la variable “SEX_AGE” para color selecciona la función correcta para que cada “SEX_AGE” tenga su proprio gráfico salva el gráfico en .png o .jpg subir el gráfico aquí library(ggversa) head(Anolis) ## # A tibble: 6 × 15 ## STUDY Survey_Site LOCATION TIME DATE SEASON SPECIES SEX_AGE HEIGHT ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;tim&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 Mark/recap North Tower El Verde 10:46 3/13… dry Anolis… Female 0 ## 2 Mark/recap Woods walkway t… El Verde 10:15 2/20… dry Anolis… Juvenil 0 ## 3 Mark/recap Woods walkway t… El Verde 11:15 2/21… dry Anolis… Male 0 ## 4 Mark/recap North Tower El Verde 11:06 3/16… dry Anolis… Juvenil 0.3 ## 5 Mark/recap North Tower El Verde 12:31 3/11… dry Anolis… Male 0.3 ## 6 Mark/recap North Tower El Verde 01:00 3/9/… dry Anolis… Female 0.4 ## # ℹ 6 more variables: DISTANCE_FROM_CENTERLINE &lt;dbl&gt;, PERCH_SUBSTRATE &lt;chr&gt;, ## # PERCH_DIAMETER &lt;int&gt;, WEIGHT &lt;dbl&gt;, SVL &lt;dbl&gt;, TAIL &lt;dbl&gt; 2.3.5 Extracción de valores de un conjunto de datos Aqui usamos el conjunto de datos de diamantes que se encuentra en el paquete ggplot2 2.3.5.1 Los primeros datos de un archivo head(diamantes) ## # A tibble: 6 × 10 ## precio quilate corte color claridad profundidad tabla x y z ## &lt;int&gt; &lt;dbl&gt; &lt;ord&gt; &lt;ord&gt; &lt;ord&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 326 0.23 Ideal E SI2 61.5 55 3.95 3.98 2.43 ## 2 326 0.21 Premium E SI1 59.8 61 3.89 3.84 2.31 ## 3 327 0.23 Bueno E VS1 56.9 65 4.05 4.07 2.31 ## 4 334 0.29 Premium I VS2 62.4 58 4.2 4.23 2.63 ## 5 335 0.31 Bueno J SI2 63.3 58 4.34 4.35 2.75 ## 6 336 0.24 Muy bueno J VVS2 62.8 57 3.94 3.96 2.48 2.3.5.2 La cantidad de fila nrow(diamantes) ## [1] 53940 2.3.5.3 La cantidad de columnas (variables) ncol(diamantes) ## [1] 10 2.3.5.4 La dimensiones de un archivo dim(diamantes) ## [1] 53940 10 2.3.5.5 El valor máximo de una variable max(diamantes$precio) ## [1] 18823 2.3.5.6 El valor mínimo de una variable min(diamantes$precio) ## [1] 326 2.3.5.7 Los valores discretos de una variable unique(diamantes$corte) ## [1] Ideal Premium Bueno Muy bueno Regular ## Levels: Regular &lt; Bueno &lt; Muy bueno &lt; Premium &lt; Ideal diamantes$corte diamantes$precio 2.4 Ejemplos de Gráficos library(readr) Vuelos_SJU_2018_Ene &lt;- read_csv(&quot;Datos/Vuelos_SJU_2018_Ene.csv&quot;) head(Vuelos_SJU_2018_Ene) ## # A tibble: 6 × 14 ## FL_DATE OP_UNIQUE_CARRIER ORIGIN ORIGIN_CITY_NAME ORIGIN_STATE_ABR DEST ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 2/1/18 NK SJU San Juan, PR PR MCO ## 2 2/1/18 AA MIA Miami, FL FL SJU ## 3 2/1/18 AA SJU San Juan, PR PR DFW ## 4 2/1/18 AA SJU San Juan, PR PR MIA ## 5 2/1/18 AA SJU San Juan, PR PR ORD ## 6 2/1/18 AA MIA Miami, FL FL SJU ## # ℹ 8 more variables: DEST_CITY_NAME &lt;chr&gt;, DEST_STATE_ABR &lt;chr&gt;, ## # DEP_TIME &lt;dbl&gt;, DEP_DELAY &lt;dbl&gt;, CRS_ARR_TIME &lt;dbl&gt;, ARR_TIME &lt;dbl&gt;, ## # ARR_DELAY &lt;dbl&gt;, CANCELLED &lt;dbl&gt; "],["visualización-de-datos.html", "Capítulo3 Visualización de datos 3.1 Temas: 3.2 Leer datos de un archivo 3.3 Vea el siguiente gráfico", " Capítulo3 Visualización de datos Fecha de la ultima revisión ## [1] &quot;2024-11-07&quot; El tema proviene de los siguientes sitios. English: https://r4ds.had.co.nz/data-visualisation.html Español: https://es.r4ds.hadley.nz/03-visualize.html 3.1 Temas: Introducción paquete “tidyverse” datos de “mgp” ggplot2 El concepto de la gramática de gráficos 3.1.1 Los paquetes library(tidyverse) library(ggversa) library(datos) 3.1.2 Facet_wrap ggplot(data = Anolis) + geom_point(mapping = aes(x = SVL, y = TAIL, color=SEX_AGE))+ facet_wrap(~SEX_AGE, ncol=1) 3.1.3 Regresión lineal # izquierda ggplot(data = millas) + geom_point(mapping = aes(x = cilindrada, y = autopista)) # derecha LOESS ggplot(data = millas) + geom_smooth(method=lm,mapping = aes(x = cilindrada, y = autopista))+ # y = mx+b geom_point( mapping = aes(x = cilindrada, y = autopista)) 3.1.4 Regresión Loess Vea este enlace para información sobre la regresión LOESS &lt;https://en.wikipedia.org/wiki/Local_regression&gt; names(millas) ## [1] &quot;fabricante&quot; &quot;modelo&quot; &quot;cilindrada&quot; &quot;anio&quot; &quot;cilindros&quot; ## [6] &quot;transmision&quot; &quot;traccion&quot; &quot;ciudad&quot; &quot;autopista&quot; &quot;combustible&quot; ## [11] &quot;clase&quot; ggplot(data = millas) + geom_smooth(mapping = aes(x = cilindrada, y = autopista, linetype = clase, colour=clase)) 3.1.5 Regresión LOESS de un grupo ggplot(data = millas, mapping = aes(x = cilindrada, y = autopista)) + geom_point(mapping = aes(color = clase)) + geom_smooth(data = filter(millas, clase == &quot;suv&quot;), se =TRUE) 3.1.6 Regresión LOESS: dos alternativas ggplot(data = millas, mapping = aes(x = cilindrada, y = autopista)) + geom_point() + geom_smooth() ggplot() + geom_point(data = millas, mapping = aes(x = cilindrada, y = autopista)) + geom_smooth(data = millas, mapping = aes(x = cilindrada, y = autopista)) 3.1.7 Regresión Lineal \\[y=b+mx\\] ggplot(data = millas, mapping = aes(x = cilindrada, y = autopista)) + geom_point(mapping = aes(color = clase)) + geom_smooth(method=lm) 3.1.8 geom_bar() ggplot(data = diamantes) + geom_bar(mapping = aes(x = corte)) 3.1.9 Puntos con intervalo mínimo y máximo ggplot(data = diamantes) + stat_summary( mapping = aes(x = corte, y = profundidad), fun.min = min, fun.max = max, fun = median ) 3.1.10 geom_boxplot ggplot(data = millas, mapping = aes(x = clase, y = autopista)) + geom_boxplot() ggplot(data = millas, mapping = aes(x = clase, y = autopista)) + geom_boxplot() + coord_flip() 3.1.11 geom_bar y circular bar &lt;- ggplot(data = diamantes) + geom_bar( mapping = aes(x = corte, fill = corte), show.legend = FALSE, width = 1 ) + theme(aspect.ratio = 1) + labs(x = NULL, y = NULL) 3.1.11.1 geom_bar bar 3.1.11.2 geom_bar &amp; flip coordinates bar + coord_flip() 3.1.11.3 geom_bar &amp; circular distribution bar + coord_polar() 3.2 Leer datos de un archivo Ejercicios: Hacer los ejercicios en la sección 3.2.4 del libro en español Aestética Ejercicios: Hacer los ejercicios en la sección 3.3.1 del libro en español Problemas comunes Separar en facetas Ejercicios: Hacer los ejercicios en la sección 3.5.1 del libro en español Objetos geométricos *** Ejercicios: Hacer los ejercicios en la sección 3.6.1 del libro en español Transformación estadísticas Ejercicios: Hacer los ejercicios en la sección 3.7.1 del libro en español Ajuste de posición Ejercicios: Hacer los ejercicios en la sección 3.8.1 del libro en español Sistema de coordenadas Ejercicios: Hacer los ejercicios en la sección 3.9.1 del libro en español Ejercicio para entregar ( 6 puntos) Activa el paquete “ggversa” Activa el paquete “tidyverse” Utiliza los datos “PartosInfantes”. Leen la información sobre el archivo Son tres graficas que tendrán que someter Hacer un gráfico de puntos entre el número de muertes de infante y la cantidad de madres que mueren en el parto. (1 punto) Añadir al gráfico anterior un modelo lineal (linear model). Y Demostrando todos los datos con un color por region geografica, o sea añadir un color a los puntos por Grupo “region geográfica”. AM=America, EU= Union Europea, AF= Africa, O=Oceania, AS=Asia, Medio Oriente, (2 puntos) Enseña el modelo de regresion lineal solamente para AFRICA y ASIA (en la misma gráfica) (3 puntos) Someter las tres gráficas en formato .jpeg o .png en el portal. library(ggplot2) library(tidyverse) library(ggversa) head(PartosInfantes) ## NMI NMP GSPC Grupo Pais ## 1 8723 400 605.1878 AM Argentina ## 2 60 5 1720.1595 AM Bahamas ## 3 42 1 1146.0417 AM Barbados ## 4 121 2 278.5792 AM Belize ## 5 7756 540 208.7842 AM Bolivia ## 6 45682 1400 947.4277 AM Brazil #unique(PartosInfantes$Pais) Hacer un grafico de puntos entre el numero de muertes por infante y la cantidad la cantidad de madres que mueren en el parto Añadir al grafico anterior un modelo lineal (linear model) Añadir un color a los puntos por grupo “region”. AM=America, EU= Union Europea, AF= Africa, O=Oceania, AS=Asia, Medio Oriente, Demostrando todos los datos con un color por region geografica, enseña el modelo de regresion lineal solamente para AFRICA 3.2.1 Ejercicios Buscar el error en el código. ¿Qué no va bien en este código? ¿Por qué hay puntos que no son azules en el siguiente codigo? ggplot(data = millas) + geom_point(mapping = aes(x = cilindrada, y = autopista, color = &quot;blue&quot;)) Por que la gráfica no se produce en el siguiente código ggplot(data = millas) + geom_point(mapping = aes(x = cilindrada, y = autopista)) 3.3 Vea el siguiente gráfico ggplot(data = millas) + geom_point(mapping = aes(x = cilindrada, y = autopista)) + facet_grid(traccion ~ cilindros) ¿Por qué hay facetas que son vacias? Explica que hace “.”? en estas funciones ggplot(data = millas) + geom_point(mapping = aes(x = cilindrada, y = autopista)) + facet_grid(traccion ~ .) ggplot(data = millas) + geom_point(mapping = aes(x = cilindrada, y = autopista)) + facet_grid(. ~ cilindros) Qué hace nrow en este código ggplot(data = millas) + geom_point(mapping = aes(x = cilindrada, y = autopista)) + facet_wrap(~ clase, nrow = 2) "],["calculadora-sofisticada.html", "Capítulo4 Calculadora sofisticada 4.1 Temas:", " Capítulo4 Calculadora sofisticada Fecha de la ultima revisión ## [1] &quot;2024-11-07&quot; Activar los siguientes packetes library(tidyverse) library(datos) El tema proviene de los siguientes sitios. English: https://r4ds.had.co.nz/workflow-basics.html Español: https://es.r4ds.hadley.nz/04-workflow-basics.html 4.1 Temas: Conocimiento básicos de programación La importancia de los nombres Usando funciones 4.1.1 Sumar 2+2 ## [1] 4 4.1.2 Exactamente como una calculadora (23+3+3)^2+2 ## [1] 843 4.1.3 Trigonometria sin(pi/3) ## [1] 0.8660254 4.1.4 Log natural y a base 10 log(100) ## [1] 4.60517 log10(100) ## [1] 2 4.1.5 Asignaciones de variables x&lt;- 4 x ## [1] 4 y=3 y ## [1] 3 x/y ## [1] 1.333333 4.1.6 Variables la función “seq” para secuencia edad_nd=seq(101, 110) edad_nd ## [1] 101 102 103 104 105 106 107 108 109 110 variables asignada edad_uprh=c(11:20) edad_uprh ## [1] 11 12 13 14 15 16 17 18 19 20 4.1.7 Unir variables en un data frame edad=data.frame(edad_nd, edad_uprh) edad ## edad_nd edad_uprh ## 1 101 11 ## 2 102 12 ## 3 103 13 ## 4 104 14 ## 5 105 15 ## 6 106 16 ## 7 107 17 ## 8 108 18 ## 9 109 19 ## 10 110 20 edad$diff=edad$edad_nd-edad$edad_uprh edad ## edad_nd edad_uprh diff ## 1 101 11 90 ## 2 102 12 90 ## 3 103 13 90 ## 4 104 14 90 ## 5 105 15 90 ## 6 106 16 90 ## 7 107 17 90 ## 8 108 18 90 ## 9 109 19 90 ## 10 110 20 90 edad$tres=edad$edad_uprh^3 edad ## edad_nd edad_uprh diff tres ## 1 101 11 90 1331 ## 2 102 12 90 1728 ## 3 103 13 90 2197 ## 4 104 14 90 2744 ## 5 105 15 90 3375 ## 6 106 16 90 4096 ## 7 107 17 90 4913 ## 8 108 18 90 5832 ## 9 109 19 90 6859 ## 10 110 20 90 8000 4.1.8 Errores cuando a variables no tienen la misma cantidad de entradas edad_nd_1=base::seq(101, 111) edad_nd_1 ## [1] 101 102 103 104 105 106 107 108 109 110 111 variables asignada edad_uprh_1=c(11:20, NA) edad_uprh_1 ## [1] 11 12 13 14 15 16 17 18 19 20 NA 4.1.9 Unir variables en un data frame edad_1=data.frame(edad_nd_1, edad_uprh_1) edad_1 ## edad_nd_1 edad_uprh_1 ## 1 101 11 ## 2 102 12 ## 3 103 13 ## 4 104 14 ## 5 105 15 ## 6 106 16 ## 7 107 17 ## 8 108 18 ## 9 109 19 ## 10 110 20 ## 11 111 NA 4.1.10 Cuantos valores hay en una variable length(edad_uprh) ## [1] 10 length(edad$tres) ## [1] 10 length(edad) ## [1] 4 4.1.11 Seleccionar solamente parte de los datos de un archivo Primero visualizar los datos library(datos) millas ## # A tibble: 234 × 11 ## fabricante modelo cilindrada anio cilindros transmision traccion ciudad ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; ## 1 audi a4 1.8 1999 4 auto(l5) d 18 ## 2 audi a4 1.8 1999 4 manual(m5) d 21 ## 3 audi a4 2 2008 4 manual(m6) d 20 ## 4 audi a4 2 2008 4 auto(av) d 21 ## 5 audi a4 2.8 1999 6 auto(l5) d 16 ## 6 audi a4 2.8 1999 6 manual(m5) d 18 ## 7 audi a4 3.1 2008 6 auto(av) d 18 ## 8 audi a4 quattro 1.8 1999 4 manual(m5) 4 18 ## 9 audi a4 quattro 1.8 1999 4 auto(l5) 4 16 ## 10 audi a4 quattro 2 2008 4 manual(m6) 4 20 ## # ℹ 224 more rows ## # ℹ 3 more variables: autopista &lt;int&gt;, combustible &lt;chr&gt;, clase &lt;chr&gt; 4.1.11.1 Seleccionar los carros que tienen cilindros igual a 8 (solamente) La función de Pipe. %&gt;% o |&gt; library(tidyverse) millas ## # A tibble: 234 × 11 ## fabricante modelo cilindrada anio cilindros transmision traccion ciudad ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; ## 1 audi a4 1.8 1999 4 auto(l5) d 18 ## 2 audi a4 1.8 1999 4 manual(m5) d 21 ## 3 audi a4 2 2008 4 manual(m6) d 20 ## 4 audi a4 2 2008 4 auto(av) d 21 ## 5 audi a4 2.8 1999 6 auto(l5) d 16 ## 6 audi a4 2.8 1999 6 manual(m5) d 18 ## 7 audi a4 3.1 2008 6 auto(av) d 18 ## 8 audi a4 quattro 1.8 1999 4 manual(m5) 4 18 ## 9 audi a4 quattro 1.8 1999 4 auto(l5) 4 16 ## 10 audi a4 quattro 2 2008 4 manual(m6) 4 20 ## # ℹ 224 more rows ## # ℹ 3 more variables: autopista &lt;int&gt;, combustible &lt;chr&gt;, clase &lt;chr&gt; names(millas) ## [1] &quot;fabricante&quot; &quot;modelo&quot; &quot;cilindrada&quot; &quot;anio&quot; &quot;cilindros&quot; ## [6] &quot;transmision&quot; &quot;traccion&quot; &quot;ciudad&quot; &quot;autopista&quot; &quot;combustible&quot; ## [11] &quot;clase&quot; millas |&gt; dplyr::select(cilindros) |&gt; dplyr::filter(cilindros == 8) ## # A tibble: 70 × 1 ## cilindros ## &lt;int&gt; ## 1 8 ## 2 8 ## 3 8 ## 4 8 ## 5 8 ## 6 8 ## 7 8 ## 8 8 ## 9 8 ## 10 8 ## # ℹ 60 more rows 4.1.11.2 Selecionar los diamantes mayor de 3 quilate diamantes |&gt; dplyr::select(quilate) |&gt; filter(quilate &gt; 3) ## # A tibble: 32 × 1 ## quilate ## &lt;dbl&gt; ## 1 3.01 ## 2 3.11 ## 3 3.01 ## 4 3.05 ## 5 3.02 ## 6 3.01 ## 7 3.65 ## 8 3.24 ## 9 3.22 ## 10 3.5 ## # ℹ 22 more rows 4.1.11.3 Selecionar los diamantes con igual o mayor de 4000 precio ## # A tibble: 6 × 1 ## precio ## &lt;int&gt; ## 1 4000 ## 2 4001 ## 3 4001 ## 4 4001 ## 5 4001 ## 6 4002 4.1.11.4 Contabiliza cuantos diamantes tienen un valor de $4000 o más nrow(dia_4000) ## [1] 19380 "],["transformación-estructura-de-un-archivo-y-selecionar-datos.html", "Capítulo5 Transformación: Estructura de un archivo y selecionar datos 5.1 Evaluar el archivo el vuelo 5.2 Temas: Reconocer y aplicar las diferentes funciones 5.3 Funciones 5.4 Agrupar por múltiples variables", " Capítulo5 Transformación: Estructura de un archivo y selecionar datos Fecha de la ultima revisión ## [1] &quot;2024-11-07&quot; El tema proviene de los siguientes sitios. English: https://r4ds.had.co.nz/transform.html Español: https://es.r4ds.hadley.nz/05-transform.html library(tidyverse) library(datos) head(vuelos) ## # A tibble: 6 × 19 ## anio mes dia horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2 ## 2 2013 1 1 533 529 4 ## 3 2013 1 1 542 540 2 ## 4 2013 1 1 544 545 -1 ## 5 2013 1 1 554 600 -6 ## 6 2013 1 1 554 558 -4 ## # ℹ 13 more variables: horario_llegada &lt;int&gt;, llegada_programada &lt;int&gt;, ## # atraso_llegada &lt;dbl&gt;, aerolinea &lt;chr&gt;, vuelo &lt;int&gt;, codigo_cola &lt;chr&gt;, ## # origen &lt;chr&gt;, destino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, distancia &lt;dbl&gt;, ## # hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt; 5.1 Evaluar el archivo el vuelo Mirar el archivo y entender la información antes de hacer cualquier analisis/ Cual son las variables Cuales son. los tipos de datos int valores enteros, dbl números reales, significa dobles chr caracteres o vectores dttm fecha y tiempo, minutos date fecha S3: POSIXct Fecha y tiempo, minutos lgl valores logicos “cierto” (TRUE) y “falso” (FALSE) fctr factores categoricos. Evalua en este archivo los tipos de variables que se encuentra. vuelos ## # A tibble: 336,776 × 19 ## anio mes dia horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2 ## 2 2013 1 1 533 529 4 ## 3 2013 1 1 542 540 2 ## 4 2013 1 1 544 545 -1 ## 5 2013 1 1 554 600 -6 ## 6 2013 1 1 554 558 -4 ## 7 2013 1 1 555 600 -5 ## 8 2013 1 1 557 600 -3 ## 9 2013 1 1 557 600 -3 ## 10 2013 1 1 558 600 -2 ## # ℹ 336,766 more rows ## # ℹ 13 more variables: horario_llegada &lt;int&gt;, llegada_programada &lt;int&gt;, ## # atraso_llegada &lt;dbl&gt;, aerolinea &lt;chr&gt;, vuelo &lt;int&gt;, codigo_cola &lt;chr&gt;, ## # origen &lt;chr&gt;, destino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, distancia &lt;dbl&gt;, ## # hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt; 5.1.1 Cual son todos los destinos de vuelos? cual función usará unique(vuelos$destino) ## [1] &quot;IAH&quot; &quot;MIA&quot; &quot;BQN&quot; &quot;ATL&quot; &quot;ORD&quot; &quot;FLL&quot; &quot;IAD&quot; &quot;MCO&quot; &quot;PBI&quot; &quot;TPA&quot; &quot;LAX&quot; &quot;SFO&quot; ## [13] &quot;DFW&quot; &quot;BOS&quot; &quot;LAS&quot; &quot;MSP&quot; &quot;DTW&quot; &quot;RSW&quot; &quot;SJU&quot; &quot;PHX&quot; &quot;BWI&quot; &quot;CLT&quot; &quot;BUF&quot; &quot;DEN&quot; ## [25] &quot;SNA&quot; &quot;MSY&quot; &quot;SLC&quot; &quot;XNA&quot; &quot;MKE&quot; &quot;SEA&quot; &quot;ROC&quot; &quot;SYR&quot; &quot;SRQ&quot; &quot;RDU&quot; &quot;CMH&quot; &quot;JAX&quot; ## [37] &quot;CHS&quot; &quot;MEM&quot; &quot;PIT&quot; &quot;SAN&quot; &quot;DCA&quot; &quot;CLE&quot; &quot;STL&quot; &quot;MYR&quot; &quot;JAC&quot; &quot;MDW&quot; &quot;HNL&quot; &quot;BNA&quot; ## [49] &quot;AUS&quot; &quot;BTV&quot; &quot;PHL&quot; &quot;STT&quot; &quot;EGE&quot; &quot;AVL&quot; &quot;PWM&quot; &quot;IND&quot; &quot;SAV&quot; &quot;CAK&quot; &quot;HOU&quot; &quot;LGB&quot; ## [61] &quot;DAY&quot; &quot;ALB&quot; &quot;BDL&quot; &quot;MHT&quot; &quot;MSN&quot; &quot;GSO&quot; &quot;CVG&quot; &quot;BUR&quot; &quot;RIC&quot; &quot;GSP&quot; &quot;GRR&quot; &quot;MCI&quot; ## [73] &quot;ORF&quot; &quot;SAT&quot; &quot;SDF&quot; &quot;PDX&quot; &quot;SJC&quot; &quot;OMA&quot; &quot;CRW&quot; &quot;OAK&quot; &quot;SMF&quot; &quot;TUL&quot; &quot;TYS&quot; &quot;OKC&quot; ## [85] &quot;PVD&quot; &quot;DSM&quot; &quot;PSE&quot; &quot;BHM&quot; &quot;CAE&quot; &quot;HDN&quot; &quot;BZN&quot; &quot;MTJ&quot; &quot;EYW&quot; &quot;PSP&quot; &quot;ACK&quot; &quot;BGR&quot; ## [97] &quot;ABQ&quot; &quot;ILM&quot; &quot;MVY&quot; &quot;SBN&quot; &quot;LEX&quot; &quot;CHO&quot; &quot;TVC&quot; &quot;ANC&quot; &quot;LGA&quot; 5.1.2 Seleciona los vuelos donde el destino es San Juan vuelos %&gt;% filter(destino==&quot;SJU&quot;) ## # A tibble: 5,819 × 19 ## anio mes dia horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 615 615 0 ## 2 2013 1 1 628 630 -2 ## 3 2013 1 1 701 700 1 ## 4 2013 1 1 711 715 -4 ## 5 2013 1 1 820 820 0 ## 6 2013 1 1 820 820 0 ## 7 2013 1 1 840 845 -5 ## 8 2013 1 1 926 929 -3 ## 9 2013 1 1 1202 1159 3 ## 10 2013 1 1 1245 1249 -4 ## # ℹ 5,809 more rows ## # ℹ 13 more variables: horario_llegada &lt;int&gt;, llegada_programada &lt;int&gt;, ## # atraso_llegada &lt;dbl&gt;, aerolinea &lt;chr&gt;, vuelo &lt;int&gt;, codigo_cola &lt;chr&gt;, ## # origen &lt;chr&gt;, destino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, distancia &lt;dbl&gt;, ## # hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt; 5.1.3 Selecciona los vuelos donde el destino es San Juan el dia de navidad vuelos %&gt;% filter(destino==&quot;SJU&quot;) %&gt;% filter(mes==12, dia==25) %&gt;% filter(aerolinea %in% c(&quot;AA&quot;, &quot;UA&quot;)) #pipe Command shift M ## # A tibble: 6 × 19 ## anio mes dia horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 12 25 736 739 -3 ## 2 2013 12 25 759 805 -6 ## 3 2013 12 25 1202 1206 -4 ## 4 2013 12 25 1634 1630 4 ## 5 2013 12 25 1908 1900 8 ## 6 2013 12 25 2015 2017 -2 ## # ℹ 13 more variables: horario_llegada &lt;int&gt;, llegada_programada &lt;int&gt;, ## # atraso_llegada &lt;dbl&gt;, aerolinea &lt;chr&gt;, vuelo &lt;int&gt;, codigo_cola &lt;chr&gt;, ## # origen &lt;chr&gt;, destino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, distancia &lt;dbl&gt;, ## # hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt; 5.1.4 Selecciona los vuelos que salen de San Juan en el dia de ti cumpleaños y contabiliza cuanto hubo df_dia_cumpl=vuelos %&gt;% filter(destino ==&quot;SJU&quot;) %&gt;% filter(mes== 8, dia== 1) |&gt; nrow() df_dia_cumpl ## [1] 19 5.1.4.1 Organizar los datos en orden de más grande a más pequeño Selecciona los mes, dia, destino, atraso_salida, atraso_llegada Selecciona solamente el mes de noviembre Selecciona solamente los vuelos a destino de a San Juan oraganiza los datos en orden de más atraso_salido de mayor a menor names(vuelos) ## [1] &quot;anio&quot; &quot;mes&quot; &quot;dia&quot; ## [4] &quot;horario_salida&quot; &quot;salida_programada&quot; &quot;atraso_salida&quot; ## [7] &quot;horario_llegada&quot; &quot;llegada_programada&quot; &quot;atraso_llegada&quot; ## [10] &quot;aerolinea&quot; &quot;vuelo&quot; &quot;codigo_cola&quot; ## [13] &quot;origen&quot; &quot;destino&quot; &quot;tiempo_vuelo&quot; ## [16] &quot;distancia&quot; &quot;hora&quot; &quot;minuto&quot; ## [19] &quot;fecha_hora&quot; vuelos %&gt;% dplyr::select(mes, dia, destino, atraso_salida, atraso_llegada) %&gt;% filter(mes==11) %&gt;% filter(destino ==&quot;SJU&quot;) %&gt;% arrange(desc(atraso_salida)) ## # A tibble: 429 × 5 ## mes dia destino atraso_salida atraso_llegada ## &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 11 7 SJU 231 190 ## 2 11 28 SJU 223 235 ## 3 11 23 SJU 187 154 ## 4 11 24 SJU 181 188 ## 5 11 23 SJU 157 165 ## 6 11 12 SJU 145 127 ## 7 11 10 SJU 94 88 ## 8 11 24 SJU 90 112 ## 9 11 30 SJU 68 59 ## 10 11 21 SJU 66 42 ## # ℹ 419 more rows 5.2 Temas: Reconocer y aplicar las diferentes funciones Tipos de variables: int: valores enteros dbl: números reales chr: caracteres dttm: fecha y tiempo lgl: valores logicos fctr: factores date: fecha Funciones de dplyr: filter() : seleccionar filas arrange(): ordenar filas select(): seleccionar columnas summarize(): resumir conjuntos de datos group_by(): agrupar por variables library(datos) library(tidyverse) por_dia &lt;- vuelos %&gt;% # pipe group_by(dia) %&gt;% # group by day summarise(atraso_promedio = mean(atraso_salida, na.rm = TRUE)) por_dia ## # A tibble: 31 × 2 ## dia atraso_promedio ## &lt;int&gt; &lt;dbl&gt; ## 1 1 14.2 ## 2 2 14.1 ## 3 3 10.8 ## 4 4 5.79 ## 5 5 7.82 ## 6 6 6.99 ## 7 7 14.3 ## 8 8 21.8 ## 9 9 14.6 ## 10 10 18.3 ## # ℹ 21 more rows ## The median of the data set by day of the month por_dia_2 &lt;- vuelos %&gt;% group_by( dia) %&gt;% summarise(atraso_promedio = mean(atraso_salida, na.rm = TRUE), atraso_mediana = median(atraso_salida, na.rm=TRUE)) por_dia_2 ## # A tibble: 31 × 3 ## dia atraso_promedio atraso_mediana ## &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1 14.2 -2 ## 2 2 14.1 -1 ## 3 3 10.8 -2 ## 4 4 5.79 -3 ## 5 5 7.82 -3 ## 6 6 6.99 -2 ## 7 7 14.3 -1 ## 8 8 21.8 -1 ## 9 9 14.6 -1 ## 10 10 18.3 -1 ## # ℹ 21 more rows 5.3 Funciones summarise = resumir conjuntos de datos mean, # promedio median, # mediana mode, # moda operaciones boolean # El valor más común en un conjunto de datos # Crear una función: no existe en los paquetes de R getmode &lt;- function(v) { uniqv &lt;- unique(v) uniqv[which.max(tabulate(match(v, uniqv)))] } por_dia_3=vuelos |&gt; dplyr::select(dia, mes, atraso_salida) |&gt; group_by(dia) %&gt;% summarise(atraso_promedio = mean(atraso_salida, na.rm = TRUE), atraso_max=max(atraso_salida, na.rm=TRUE), atraso_mode = getmode(atraso_salida)) por_dia_3 ## # A tibble: 31 × 4 ## dia atraso_promedio atraso_max atraso_mode ## &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1 14.2 853 -5 ## 2 2 14.1 696 -4 ## 3 3 10.8 878 -4 ## 4 4 5.79 545 -5 ## 5 5 7.82 896 -5 ## 6 6 6.99 589 -4 ## 7 7 14.3 653 -5 ## 8 8 21.8 520 NA ## 9 9 14.6 1301 -4 ## 10 10 18.3 1126 -5 ## # ℹ 21 more rows Añadir el promedio, mediana y moda al mismo data frame ## The mode of the value library(DescTools) por_dia_4 &lt;- vuelos %&gt;% group_by(dia) %&gt;% summarise(atraso_promedio = mean(atraso_salida, na.rm = TRUE), atraso_median = median(atraso_salida, na.rm=TRUE), atraso_mode = getmode(atraso_salida)) por_dia_4 ## # A tibble: 31 × 4 ## dia atraso_promedio atraso_median atraso_mode ## &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1 14.2 -2 -5 ## 2 2 14.1 -1 -4 ## 3 3 10.8 -2 -4 ## 4 4 5.79 -3 -5 ## 5 5 7.82 -3 -5 ## 6 6 6.99 -2 -4 ## 7 7 14.3 -1 -5 ## 8 8 21.8 -1 NA ## 9 9 14.6 -1 -4 ## 10 10 18.3 -1 -5 ## # ℹ 21 more rows 5.4 Agrupar por múltiples variables Aquí se agrupar por día y mes vuelos %&gt;% dplyr::select(anio, mes, dia, atraso_llegada, destino) %&gt;% filter(destino ==&quot;SJU&quot;) %&gt;% filter(mes == 12 &amp; dia ==25) %&gt;% # filter(mes == 12) %&gt;% group_by(dia, mes) %&gt;% summarise(atraso = mean(atraso_llegada, na.rm = TRUE)) ## # A tibble: 1 × 3 ## # Groups: dia [1] ## dia mes atraso ## &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 25 12 3.57 "],["transformación-operaciones-boolenas-y-lógicas.html", "Capítulo6 Transformación: Operaciones boolenas y lógicas 6.1 Agrupar por múltiples variables 6.2 Operaciones lógicas boolean: 6.3 Ejercicios 6.4 6.5 2 Ejercicios:", " Capítulo6 Transformación: Operaciones boolenas y lógicas Fecha de la ultima revisión ## [1] &quot;2024-11-07&quot; El tema proviene de los siguientes sitios. English: https://r4ds.had.co.nz/transform.html Español: https://es.r4ds.hadley.nz/05-transform.html library(tidyverse) library(datos) head(vuelos) ## # A tibble: 6 × 19 ## anio mes dia horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2 ## 2 2013 1 1 533 529 4 ## 3 2013 1 1 542 540 2 ## 4 2013 1 1 544 545 -1 ## 5 2013 1 1 554 600 -6 ## 6 2013 1 1 554 558 -4 ## # ℹ 13 more variables: horario_llegada &lt;int&gt;, llegada_programada &lt;int&gt;, ## # atraso_llegada &lt;dbl&gt;, aerolinea &lt;chr&gt;, vuelo &lt;int&gt;, codigo_cola &lt;chr&gt;, ## # origen &lt;chr&gt;, destino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, distancia &lt;dbl&gt;, ## # hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt; Tema de este modulo: Filtrar filas con filter() Seleccionar columnas con select() Agrupar con group_by() Resumir con summarise() Ordenar con arrange() funciones Booleanas y lógicas 6.1 Agrupar por múltiples variables Aquí se agrupa por día y mes 6.2 Operaciones lógicas boolean: &amp; “ampersand” == “conjunción” “|” or= “o” !, no incluye, excluir…. %in%, filtrar para múltiples valores ==, es igual a… “exactamente” “&lt;” menor que “&gt;” mayor que “&lt;=” es menor o igual “&gt;=” es mayor o igual Bollean, que incluye múltiples opciones %in% vuelos %&gt;% dplyr::select(anio, mes, dia, atraso_llegada, destino) %&gt;% filter(destino ==&quot;SJU&quot;) %&gt;% filter(mes == 12 &amp; dia ==25) %&gt;% # filter(mes == 12) %&gt;% group_by(dia, mes) %&gt;% summarise(atraso = mean(atraso_llegada, na.rm = TRUE)) ## # A tibble: 1 × 3 ## # Groups: dia [1] ## dia mes atraso ## &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 25 12 3.57 vuelos %&gt;% dplyr::select(anio, mes, dia, atraso_salida) %&gt;% group_by(mes) %&gt;% filter(mes %in% c(1:6)) %&gt;% # mes entre 1 y 6 summarise(atraso = mean(atraso_salida, na.rm = TRUE)) ## # A tibble: 6 × 2 ## mes atraso ## &lt;int&gt; &lt;dbl&gt; ## 1 1 10.0 ## 2 2 10.8 ## 3 3 13.2 ## 4 4 13.9 ## 5 5 13.0 ## 6 6 20.8 6.2.1 Otra alternativa para filtrar 6.2.1.1 “|” vuelos %&gt;% dplyr::select(anio, mes, dia, atraso_salida) %&gt;% filter(mes == 1 | mes == 12) |&gt; # mes 1 o 12 summarise(atraso = mean(atraso_salida, na.rm = TRUE)) ## # A tibble: 1 × 1 ## atraso ## &lt;dbl&gt; ## 1 13.3 6.2.1.2 &amp; el “y” names(vuelos) ## [1] &quot;anio&quot; &quot;mes&quot; &quot;dia&quot; ## [4] &quot;horario_salida&quot; &quot;salida_programada&quot; &quot;atraso_salida&quot; ## [7] &quot;horario_llegada&quot; &quot;llegada_programada&quot; &quot;atraso_llegada&quot; ## [10] &quot;aerolinea&quot; &quot;vuelo&quot; &quot;codigo_cola&quot; ## [13] &quot;origen&quot; &quot;destino&quot; &quot;tiempo_vuelo&quot; ## [16] &quot;distancia&quot; &quot;hora&quot; &quot;minuto&quot; ## [19] &quot;fecha_hora&quot; vuelos %&gt;% dplyr::select(anio, mes, dia, atraso_salida, aerolinea) %&gt;% filter(mes == 12 &amp; dia == 25 &amp; aerolinea==&quot;AA&quot;) ## # A tibble: 78 × 5 ## anio mes dia atraso_salida aerolinea ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 2013 12 25 2 AA ## 2 2013 12 25 -4 AA ## 3 2013 12 25 1 AA ## 4 2013 12 25 0 AA ## 5 2013 12 25 -3 AA ## 6 2013 12 25 -2 AA ## 7 2013 12 25 26 AA ## 8 2013 12 25 -7 AA ## 9 2013 12 25 -6 AA ## 10 2013 12 25 21 AA ## # ℹ 68 more rows 6.3 Ejercicios Como se seleccionaría los meses de diciembre pero desde la del 25 o más 6.4 !, excluye algo, En este caso estamos excluyendo los días del 1 al 10 library(datos) library(tidyverse) vuelos %&gt;% dplyr::select(anio, mes, dia, atraso_salida, aerolinea) %&gt;% filter(mes == 11 &amp; !aerolinea %in% c(&quot;AA&quot;, &quot;DL&quot;)) %&gt;% group_by(aerolinea) %&gt;% summarise(atraso = mean(atraso_salida, na.rm = TRUE)) ## # A tibble: 14 × 2 ## aerolinea atraso ## &lt;chr&gt; &lt;dbl&gt; ## 1 9E 7.56 ## 2 AS 3.08 ## 3 B6 3.52 ## 4 EV 9.83 ## 5 F9 13.5 ## 6 FL 16.9 ## 7 HA -5.44 ## 8 MQ 3.28 ## 9 OO 0.8 ## 10 UA 6.37 ## 11 US 0.576 ## 12 VX 7.80 ## 13 WN 11.0 ## 14 YV 10.5 Ejercicios: Hacer los ejercicios en la sección 5.2.4 del libro en español 5.2.4 Ejercicios Encuentra todos los vuelos que: Tuvieron un retraso de llegada de dos o más horas Volaron a Houston (IAH o HOU) Cual son estos aeropuertos, Hou == Houston, IAH == George Bush, Texas Seleciona solamente los vuelos que fueron operados por United, American o Delta Selecciona solamente los vuelos que partieron en invierno del hemisferio sur (julio, agosto y septiembre) Selecciona solamente los vuelos que llegaron más de dos horas tarde, pero no salieron tarde Selecciona solamente los vuelos que se retrasaron por lo menos una hora, pero repusieron más de 30 minutos en vuelo Selecciona solamente los vuelos que partieron entre la medianoche y las 6a.m. (incluyente) Otra función de dplyr que es útil para usar filtros es between(). ¿Qué hace? ¿Puedes usarla para simplificar el código necesario para responder a los desafíos anteriores? Determinar cual “aerolinea” tiene más vuelos 6.4.1 La función arrange() arrange() vuelos %&gt;% dplyr::select(horario_salida) %&gt;% arrange() |&gt; head(n=10) ## # A tibble: 10 × 1 ## horario_salida ## &lt;int&gt; ## 1 517 ## 2 533 ## 3 542 ## 4 544 ## 5 554 ## 6 554 ## 7 555 ## 8 557 ## 9 557 ## 10 558 vuelos %&gt;% arrange(desc(horario_salida)) |&gt; head(n=10) ## # A tibble: 10 × 19 ## anio mes dia horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 10 30 2400 2359 1 ## 2 2013 11 27 2400 2359 1 ## 3 2013 12 5 2400 2359 1 ## 4 2013 12 9 2400 2359 1 ## 5 2013 12 9 2400 2250 70 ## 6 2013 12 13 2400 2359 1 ## 7 2013 12 19 2400 2359 1 ## 8 2013 12 29 2400 1700 420 ## 9 2013 2 7 2400 2359 1 ## 10 2013 2 7 2400 2359 1 ## # ℹ 13 more variables: horario_llegada &lt;int&gt;, llegada_programada &lt;int&gt;, ## # atraso_llegada &lt;dbl&gt;, aerolinea &lt;chr&gt;, vuelo &lt;int&gt;, codigo_cola &lt;chr&gt;, ## # origen &lt;chr&gt;, destino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, distancia &lt;dbl&gt;, ## # hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt; 5.3.1 Ejercicios Ordena vuelos para encontrar los vuelos más retrasados en salida. Encuentra los vuelos que salieron más temprano. Ordena vuelos para encontrar los vuelos más rápidos (que viajaron a mayor velocidad). ¿Cuáles vuelos viajaron más lejos? ¿Cuál viajó más cerca? Otra función desc() 6.5 2 Ejercicios: Hacer los ejercicios en la sección 5.3.1 del libro en español "],["transformación-valores-faltantes.html", "Capítulo7 Transformación: Valores Faltantes 7.1 Valores faltantes 7.2 Contabilizar los NA 7.3 Seleccionar solamente los vuelos donde el “horario de salida” es desconocido 7.4 Otras funciones: NA", " Capítulo7 Transformación: Valores Faltantes ## [1] &quot;2024-11-07&quot; Fecha de la ultima revisión library(tidyverse) library(datos) 7.1 Valores faltantes NA: Not Available 7.1.1 ¿Qué pasa con los valores faltantes y resultados de analisis sin sentido? 2^2 ## [1] 4 1^2 ## [1] 1 1^0 ## [1] 1 NA^0 ## [1] 1 #NA==1 NA|TRUE ## [1] TRUE NA|FALSE ## [1] NA FALSE &amp; NA ## [1] FALSE TRUE &amp; NA ## [1] NA FALSE * NA ## [1] NA TRUE * NA ## [1] NA NA * 0 ## [1] NA NA * 1 ## [1] NA 12 * 3 ## [1] 36 NA - 3 ## [1] NA 7.2 Contabilizar los NA ¿Cuántos vuelos tienen datos faltantes en horario_salida? ¿Qué otras variables tienen valores faltantes? ¿Qué representan estas filas? vuelos %&gt;% dplyr::select(horario_salida) %&gt;% is.na() %&gt;% table() ## . ## FALSE TRUE ## 328521 8255 7.3 Seleccionar solamente los vuelos donde el “horario de salida” es desconocido vuelos %&gt;% dplyr::select(anio, mes, dia, horario_salida, aerolinea) |&gt; filter(is.na(horario_salida)) ## # A tibble: 8,255 × 5 ## anio mes dia horario_salida aerolinea ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; ## 1 2013 1 1 NA EV ## 2 2013 1 1 NA AA ## 3 2013 1 1 NA AA ## 4 2013 1 1 NA B6 ## 5 2013 1 2 NA EV ## 6 2013 1 2 NA EV ## 7 2013 1 2 NA EV ## 8 2013 1 2 NA EV ## 9 2013 1 2 NA EV ## 10 2013 1 2 NA AA ## # ℹ 8,245 more rows 7.4 Otras funciones: NA na.rm=TRUE !is.na() = is not NA, pq al frente tiene “!” no_cancelados &lt;- vuelos %&gt;% filter(!is.na(atraso_salida), !is.na(atraso_llegada)) no_cancelados ## # A tibble: 327,346 × 19 ## anio mes dia horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2 ## 2 2013 1 1 533 529 4 ## 3 2013 1 1 542 540 2 ## 4 2013 1 1 544 545 -1 ## 5 2013 1 1 554 600 -6 ## 6 2013 1 1 554 558 -4 ## 7 2013 1 1 555 600 -5 ## 8 2013 1 1 557 600 -3 ## 9 2013 1 1 557 600 -3 ## 10 2013 1 1 558 600 -2 ## # ℹ 327,336 more rows ## # ℹ 13 more variables: horario_llegada &lt;int&gt;, llegada_programada &lt;int&gt;, ## # atraso_llegada &lt;dbl&gt;, aerolinea &lt;chr&gt;, vuelo &lt;int&gt;, codigo_cola &lt;chr&gt;, ## # origen &lt;chr&gt;, destino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, distancia &lt;dbl&gt;, ## # hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt; no_cancelados %&gt;% group_by(anio, mes, dia) %&gt;% summarise(mean = mean(atraso_salida)) ## # A tibble: 365 × 4 ## # Groups: anio, mes [12] ## anio mes dia mean ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 11.4 ## 2 2013 1 2 13.7 ## 3 2013 1 3 10.9 ## 4 2013 1 4 8.97 ## 5 2013 1 5 5.73 ## 6 2013 1 6 7.15 ## 7 2013 1 7 5.42 ## 8 2013 1 8 2.56 ## 9 2013 1 9 2.30 ## 10 2013 1 10 2.84 ## # ℹ 355 more rows vuelos %&gt;% group_by(anio, mes, dia) %&gt;% summarise(mean = mean(atraso_salida, na.rm=TRUE)) ## # A tibble: 365 × 4 ## # Groups: anio, mes [12] ## anio mes dia mean ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 11.5 ## 2 2013 1 2 13.9 ## 3 2013 1 3 11.0 ## 4 2013 1 4 8.95 ## 5 2013 1 5 5.73 ## 6 2013 1 6 7.15 ## 7 2013 1 7 5.42 ## 8 2013 1 8 2.55 ## 9 2013 1 9 2.28 ## 10 2013 1 10 2.84 ## # ℹ 355 more rows #, # max=max(atraso_salida,na.rm = TRUE), # n=n()) Reemplazar los NA por “0” en el archivo de datos datos_NA=c(1:8, NA, 10:20) datos_NA=as.data.frame(datos_NA) datos_NA %&gt;% # Cual es el problema de replace_na(datos_NA, 0) para los analisis? mutate(Prom_cum=cummean(replace_na(datos_NA, 0))) %&gt;% mutate(Var_cum=cumstats::cumvar(replace_na(datos_NA, 0))) ## datos_NA Prom_cum Var_cum ## 1 1 1.000000 NA ## 2 2 1.500000 0.500000 ## 3 3 2.000000 1.000000 ## 4 4 2.500000 1.666667 ## 5 5 3.000000 2.500000 ## 6 6 3.500000 3.500000 ## 7 7 4.000000 4.666667 ## 8 8 4.500000 6.000000 ## 9 NA 4.000000 7.500000 ## 10 10 4.600000 10.266667 ## 11 11 5.181818 12.963636 ## 12 12 5.750000 15.659091 ## 13 13 6.307692 18.397436 ## 14 14 6.857143 21.208791 ## 15 15 7.400000 24.114286 ## 16 16 7.937500 27.129167 ## 17 17 8.470588 30.264706 ## 18 18 9.000000 33.529412 ## 19 19 9.526316 36.929825 ## 20 20 10.050000 40.471053 Remover las filas que tienen NA con la función drop_na() datos_NA %&gt;% drop_na() |&gt; mutate(Prom_cum=cummean(datos_NA)) %&gt;% mutate(Var_cum=cumstats::cumvar(datos_NA)) ## datos_NA Prom_cum Var_cum ## 1 1 1.000000 NA ## 2 2 1.500000 0.500000 ## 3 3 2.000000 1.000000 ## 4 4 2.500000 1.666667 ## 5 5 3.000000 2.500000 ## 6 6 3.500000 3.500000 ## 7 7 4.000000 4.666667 ## 8 8 4.500000 6.000000 ## 9 10 5.111111 8.611111 ## 10 11 5.700000 11.122222 ## 11 12 6.272727 13.618182 ## 12 13 6.833333 16.151515 ## 13 14 7.384615 18.756410 ## 14 15 7.928571 21.456044 ## 15 16 8.466667 24.266667 ## 16 17 9.000000 27.200000 ## 17 18 9.529412 30.264706 ## 18 19 10.055556 33.467320 ## 19 20 10.578947 36.812865 "],["transformación-selecionar-variables.html", "Capítulo8 Transformación: Selecionar variables 8.1 Funciones en este módulo 8.2 rename() 8.3 Reoganizar el orden de las columnas, usando select() y everything() en la misma función", " Capítulo8 Transformación: Selecionar variables Fecha de la ultima revisión ## [1] &quot;2024-11-07&quot; 8.1 Funciones en este módulo starts_with() # selecciona variables que empiezan con una palabra o letra ends_with() # selecciona variables que terminan con una palabra o letra rename() # cambiar el nombre de una variable contains() # selecciona variables que contienen una palabra o letra everything() # selecciona todas las variables if_else() # reemplaza valores en una columna basado en una condición Es una función para seleccionar basado en una caracteristicas del nombre de la columna library(datos) names(vuelos) ## [1] &quot;anio&quot; &quot;mes&quot; &quot;dia&quot; ## [4] &quot;horario_salida&quot; &quot;salida_programada&quot; &quot;atraso_salida&quot; ## [7] &quot;horario_llegada&quot; &quot;llegada_programada&quot; &quot;atraso_llegada&quot; ## [10] &quot;aerolinea&quot; &quot;vuelo&quot; &quot;codigo_cola&quot; ## [13] &quot;origen&quot; &quot;destino&quot; &quot;tiempo_vuelo&quot; ## [16] &quot;distancia&quot; &quot;hora&quot; &quot;minuto&quot; ## [19] &quot;fecha_hora&quot; library(tidyverse) vuelos %&gt;% dplyr::select(horario_salida) ## # A tibble: 336,776 × 1 ## horario_salida ## &lt;int&gt; ## 1 517 ## 2 533 ## 3 542 ## 4 544 ## 5 554 ## 6 554 ## 7 555 ## 8 557 ## 9 557 ## 10 558 ## # ℹ 336,766 more rows vuelos %&gt;% dplyr::select(starts_with(&quot;horario&quot;)) ## # A tibble: 336,776 × 2 ## horario_salida horario_llegada ## &lt;int&gt; &lt;int&gt; ## 1 517 830 ## 2 533 850 ## 3 542 923 ## 4 544 1004 ## 5 554 812 ## 6 554 740 ## 7 555 913 ## 8 557 709 ## 9 557 838 ## 10 558 753 ## # ℹ 336,766 more rows vuelos %&gt;% dplyr::select(ends_with(&quot;salida&quot;)) ## # A tibble: 336,776 × 2 ## horario_salida atraso_salida ## &lt;int&gt; &lt;dbl&gt; ## 1 517 2 ## 2 533 4 ## 3 542 2 ## 4 544 -1 ## 5 554 -6 ## 6 554 -4 ## 7 555 -5 ## 8 557 -3 ## 9 557 -3 ## 10 558 -2 ## # ℹ 336,766 more rows vuelos %&gt;% dplyr::select(contains(&quot;salida&quot;)) ## # A tibble: 336,776 × 3 ## horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 517 515 2 ## 2 533 529 4 ## 3 542 540 2 ## 4 544 545 -1 ## 5 554 600 -6 ## 6 554 558 -4 ## 7 555 600 -5 ## 8 557 600 -3 ## 9 557 600 -3 ## 10 558 600 -2 ## # ℹ 336,766 more rows 8.2 rename() Cambiar el nombre de la columna vuelos %&gt;% rename(aeropuerto_origen=origen) %&gt;% rename(areopuerto_distino=destino) # nombre nuevo= nombre original ## # A tibble: 336,776 × 19 ## anio mes dia horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2 ## 2 2013 1 1 533 529 4 ## 3 2013 1 1 542 540 2 ## 4 2013 1 1 544 545 -1 ## 5 2013 1 1 554 600 -6 ## 6 2013 1 1 554 558 -4 ## 7 2013 1 1 555 600 -5 ## 8 2013 1 1 557 600 -3 ## 9 2013 1 1 557 600 -3 ## 10 2013 1 1 558 600 -2 ## # ℹ 336,766 more rows ## # ℹ 13 more variables: horario_llegada &lt;int&gt;, llegada_programada &lt;int&gt;, ## # atraso_llegada &lt;dbl&gt;, aerolinea &lt;chr&gt;, vuelo &lt;int&gt;, codigo_cola &lt;chr&gt;, ## # aeropuerto_origen &lt;chr&gt;, areopuerto_distino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, ## # distancia &lt;dbl&gt;, hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt; 8.3 Reoganizar el orden de las columnas, usando select() y everything() en la misma función head(vuelos) ## # A tibble: 6 × 19 ## anio mes dia horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2 ## 2 2013 1 1 533 529 4 ## 3 2013 1 1 542 540 2 ## 4 2013 1 1 544 545 -1 ## 5 2013 1 1 554 600 -6 ## 6 2013 1 1 554 558 -4 ## # ℹ 13 more variables: horario_llegada &lt;int&gt;, llegada_programada &lt;int&gt;, ## # atraso_llegada &lt;dbl&gt;, aerolinea &lt;chr&gt;, vuelo &lt;int&gt;, codigo_cola &lt;chr&gt;, ## # origen &lt;chr&gt;, destino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, distancia &lt;dbl&gt;, ## # hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt; vuelos %&gt;% dplyr::select(distancia, aerolinea, everything()) ## # A tibble: 336,776 × 19 ## distancia aerolinea anio mes dia horario_salida salida_programada ## &lt;dbl&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; ## 1 1400 UA 2013 1 1 517 515 ## 2 1416 UA 2013 1 1 533 529 ## 3 1089 AA 2013 1 1 542 540 ## 4 1576 B6 2013 1 1 544 545 ## 5 762 DL 2013 1 1 554 600 ## 6 719 UA 2013 1 1 554 558 ## 7 1065 B6 2013 1 1 555 600 ## 8 229 EV 2013 1 1 557 600 ## 9 944 B6 2013 1 1 557 600 ## 10 733 AA 2013 1 1 558 600 ## # ℹ 336,766 more rows ## # ℹ 12 more variables: atraso_salida &lt;dbl&gt;, horario_llegada &lt;int&gt;, ## # llegada_programada &lt;int&gt;, atraso_llegada &lt;dbl&gt;, vuelo &lt;int&gt;, ## # codigo_cola &lt;chr&gt;, origen &lt;chr&gt;, destino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, ## # hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt; Seleccionar de un conjunto de variables en orden que aparece en el data.frame vuelos |&gt; dplyr::select(anio:horario_salida) ## # A tibble: 336,776 × 4 ## anio mes dia horario_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; ## 1 2013 1 1 517 ## 2 2013 1 1 533 ## 3 2013 1 1 542 ## 4 2013 1 1 544 ## 5 2013 1 1 554 ## 6 2013 1 1 554 ## 7 2013 1 1 555 ## 8 2013 1 1 557 ## 9 2013 1 1 557 ## 10 2013 1 1 558 ## # ℹ 336,766 more rows Ejercicios: Hacer los ejercicios en la sección 5.4.1 del libro en español "],["transformación-mutate-transmute-lag-lead-cumsum-cummean-cumvar.html", "Capítulo9 Transformación: Mutate, transmute, lag, lead, cumsum, cummean, cumvar 9.1 Funciones en este módulo 9.2 Crear un data frame más pequeño con las variables de interes 9.3 Crear nuevas variables 9.4 transmute() 9.5 lag() 9.6 Usa “Lag” con “IncCasosSaludNuevo” en COVID-19 PR 9.7 lead(), 9.8 cumsum 9.9 cummean() and cumvar() 9.10 Uso de varianza cumulativa en investigación: 9.11 Que pasa con las funciones cummean, cumsum y cumvar si hay NA en el archivo de datos?", " Capítulo9 Transformación: Mutate, transmute, lag, lead, cumsum, cummean, cumvar 9.1 Funciones en este módulo - mutate() # crea nuevas variables - transmute() # crea nuevas variables y elimina las antiguas - lag() # calcula la diferencia entre valores en la misma columna - lead() # calcula el siguiente valor en un vector - cumsum() # suma cumulativa - cummean() # promedio cumulativo - cumvar() # varianza cumulativa library(tidyverse) library(datos) names(vuelos) ## [1] &quot;anio&quot; &quot;mes&quot; &quot;dia&quot; ## [4] &quot;horario_salida&quot; &quot;salida_programada&quot; &quot;atraso_salida&quot; ## [7] &quot;horario_llegada&quot; &quot;llegada_programada&quot; &quot;atraso_llegada&quot; ## [10] &quot;aerolinea&quot; &quot;vuelo&quot; &quot;codigo_cola&quot; ## [13] &quot;origen&quot; &quot;destino&quot; &quot;tiempo_vuelo&quot; ## [16] &quot;distancia&quot; &quot;hora&quot; &quot;minuto&quot; ## [19] &quot;fecha_hora&quot; # |&gt; es igual %&gt;% new_df=vuelos |&gt; dplyr::select(distancia, tiempo_vuelo, atraso_salida, atraso_llegada) |&gt; mutate( ganancia = atraso_salida - atraso_llegada, velocidad = distancia / tiempo_vuelo * 60) new_df ## # A tibble: 336,776 × 6 ## distancia tiempo_vuelo atraso_salida atraso_llegada ganancia velocidad ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1400 227 2 11 -9 370. ## 2 1416 227 4 20 -16 374. ## 3 1089 160 2 33 -31 408. ## 4 1576 183 -1 -18 17 517. ## 5 762 116 -6 -25 19 394. ## 6 719 150 -4 12 -16 288. ## 7 1065 158 -5 19 -24 404. ## 8 229 53 -3 -14 11 259. ## 9 944 140 -3 -8 5 405. ## 10 733 138 -2 8 -10 319. ## # ℹ 336,766 more rows 9.2 Crear un data frame más pequeño con las variables de interes library(tidyverse) library(nycflights13) head(flights) ## # A tibble: 6 × 19 ## year month day dep_time sched_dep_time dep_delay arr_time sched_arr_time ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; ## 1 2013 1 1 517 515 2 830 819 ## 2 2013 1 1 533 529 4 850 830 ## 3 2013 1 1 542 540 2 923 850 ## 4 2013 1 1 544 545 -1 1004 1022 ## 5 2013 1 1 554 600 -6 812 837 ## 6 2013 1 1 554 558 -4 740 728 ## # ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;, ## # tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;, ## # hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt; names(vuelos) ## [1] &quot;anio&quot; &quot;mes&quot; &quot;dia&quot; ## [4] &quot;horario_salida&quot; &quot;salida_programada&quot; &quot;atraso_salida&quot; ## [7] &quot;horario_llegada&quot; &quot;llegada_programada&quot; &quot;atraso_llegada&quot; ## [10] &quot;aerolinea&quot; &quot;vuelo&quot; &quot;codigo_cola&quot; ## [13] &quot;origen&quot; &quot;destino&quot; &quot;tiempo_vuelo&quot; ## [16] &quot;distancia&quot; &quot;hora&quot; &quot;minuto&quot; ## [19] &quot;fecha_hora&quot; vuelos_sml &lt;- dplyr::select(vuelos, anio:dia, starts_with(&quot;atraso&quot;), distancia, tiempo_vuelo ) head(vuelos_sml) ## # A tibble: 6 × 7 ## anio mes dia atraso_salida atraso_llegada distancia tiempo_vuelo ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 2013 1 1 2 11 1400 227 ## 2 2013 1 1 4 20 1416 227 ## 3 2013 1 1 2 33 1089 160 ## 4 2013 1 1 -1 -18 1576 183 ## 5 2013 1 1 -6 -25 762 116 ## 6 2013 1 1 -4 12 719 150 9.3 Crear nuevas variables mutate(vuelos_sml, ganado = atraso_salida - atraso_llegada, velocidad = distancia / tiempo_vuelo * 60 ) ## # A tibble: 336,776 × 9 ## anio mes dia atraso_salida atraso_llegada distancia tiempo_vuelo ganado ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 2013 1 1 2 11 1400 227 -9 ## 2 2013 1 1 4 20 1416 227 -16 ## 3 2013 1 1 2 33 1089 160 -31 ## 4 2013 1 1 -1 -18 1576 183 17 ## 5 2013 1 1 -6 -25 762 116 19 ## 6 2013 1 1 -4 12 719 150 -16 ## 7 2013 1 1 -5 19 1065 158 -24 ## 8 2013 1 1 -3 -14 229 53 11 ## 9 2013 1 1 -3 -8 944 140 5 ## 10 2013 1 1 -2 8 733 138 -10 ## # ℹ 336,766 more rows ## # ℹ 1 more variable: velocidad &lt;dbl&gt; 9.4 transmute() Para guardar solamente la nueva variable usa transmutate flights |&gt; transmute( gain = dep_delay - arr_delay, hours = air_time / 60, gain_per_hour = gain / hours ) ## # A tibble: 336,776 × 3 ## gain hours gain_per_hour ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 -9 3.78 -2.38 ## 2 -16 3.78 -4.23 ## 3 -31 2.67 -11.6 ## 4 17 3.05 5.57 ## 5 19 1.93 9.83 ## 6 -16 2.5 -6.4 ## 7 -24 2.63 -9.11 ## 8 11 0.883 12.5 ## 9 5 2.33 2.14 ## 10 -10 2.3 -4.35 ## # ℹ 336,766 more rows 9.5 lag() Para calcular diferencias entre variables en la misma columna set.seed(12345) # que los datos sean al azar, siempre sean los mismo, se usa el &quot;set.seed()&quot; para enseñanza. #rnorm() DATOS CON DISTRIBUCION NORMAL data=rpois(14, 10) df=as_tibble(data) df ## # A tibble: 14 × 1 ## value ## &lt;int&gt; ## 1 11 ## 2 12 ## 3 9 ## 4 8 ## 5 11 ## 6 4 ## 7 11 ## 8 7 ## 9 8 ## 10 11 ## 11 9 ## 12 10 ## 13 9 ## 14 11 df %&gt;% dplyr::select(value) %&gt;% mutate(lag1=lag(value)) %&gt;% mutate(lag3=lag(value, 3)) %&gt;% mutate(lag7=lag(value,5)) ## # A tibble: 14 × 4 ## value lag1 lag3 lag7 ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; ## 1 11 NA NA NA ## 2 12 11 NA NA ## 3 9 12 NA NA ## 4 8 9 11 NA ## 5 11 8 12 NA ## 6 4 11 9 11 ## 7 11 4 8 12 ## 8 7 11 11 9 ## 9 8 7 4 8 ## 10 11 8 11 11 ## 11 9 11 7 4 ## 12 10 9 8 11 ## 13 9 10 11 7 ## 14 11 9 9 8 ## Calcular la diferencia usando lag df%&gt;% dplyr::select(value) %&gt;% mutate(lag1=lag(value)) %&gt;% mutate(Changes=value-lag(value, 1)) # El cambio en los valores entre celdas ## # A tibble: 14 × 3 ## value lag1 Changes ## &lt;int&gt; &lt;int&gt; &lt;int&gt; ## 1 11 NA NA ## 2 12 11 1 ## 3 9 12 -3 ## 4 8 9 -1 ## 5 11 8 3 ## 6 4 11 -7 ## 7 11 4 7 ## 8 7 11 -4 ## 9 8 7 1 ## 10 11 8 3 ## 11 9 11 -2 ## 12 10 9 1 ## 13 9 10 -1 ## 14 11 9 2 9.6 Usa “Lag” con “IncCasosSaludNuevo” en COVID-19 PR Evalúa la diferencia en números de casos entre 7 días de las semana en números de casos nuevos de COVID, “IncCasosSaludNuevo” library(readr) library(dplyr) #names(url_COVID_PR) url_COVID_PR &lt;- read_csv(&quot;Datos/url_COVID_PR.csv&quot;) #head(url_COVID_PR) #names(url_COVID_PR) df2=url_COVID_PR %&gt;% dplyr::select(IncCasosSaludNuevo) %&gt;% mutate(Cambios_Casos=IncCasosSaludNuevo-lag(IncCasosSaludNuevo,7)) df2 ## # A tibble: 587 × 2 ## IncCasosSaludNuevo Cambios_Casos ## &lt;dbl&gt; &lt;dbl&gt; ## 1 2 NA ## 2 3 NA ## 3 3 NA ## 4 0 NA ## 5 9 NA ## 6 7 NA ## 7 6 NA ## 8 5 3 ## 9 14 11 ## 10 12 9 ## # ℹ 577 more rows df2 %&gt;% dplyr::select(IncCasosSaludNuevo, Cambios_Casos) %&gt;% colMeans(na.rm=TRUE) ## IncCasosSaludNuevo Cambios_Casos ## 257.8310580 0.4507772 #df2 %&gt;% # select() # slice(na.rm=TRUE) # lets you index rows by their (integer) locations. It allows you to select, remove, and duplicate rows. It is accompanied by a number of helpers for common use cases 9.7 lead(), is the “next” (lead()) values in a vector/column set.seed(12345) data=rpois(15, 10) df=as.tibble(data) df ## # A tibble: 15 × 1 ## value ## &lt;int&gt; ## 1 11 ## 2 12 ## 3 9 ## 4 8 ## 5 11 ## 6 4 ## 7 11 ## 8 7 ## 9 8 ## 10 11 ## 11 9 ## 12 10 ## 13 9 ## 14 11 ## 15 13 df %&gt;% dplyr::select(value) %&gt;% mutate(lead1=lead(value)) %&gt;% mutate(lead3=lead(value, 3)) ## # A tibble: 15 × 3 ## value lead1 lead3 ## &lt;int&gt; &lt;int&gt; &lt;int&gt; ## 1 11 12 8 ## 2 12 9 11 ## 3 9 8 4 ## 4 8 11 11 ## 5 11 4 7 ## 6 4 11 8 ## 7 11 7 11 ## 8 7 8 9 ## 9 8 11 10 ## 10 11 9 9 ## 11 9 10 11 ## 12 10 9 13 ## 13 9 11 NA ## 14 11 13 NA ## 15 13 NA NA # Calculate the change in value from one (1) time period and four (4) time periods df%&gt;% dplyr::select(value) %&gt;% mutate(lead1=value-lead(value)) %&gt;% mutate(lead7=value-lead(value, 7)) ## # A tibble: 15 × 3 ## value lead1 lead7 ## &lt;int&gt; &lt;int&gt; &lt;int&gt; ## 1 11 -1 4 ## 2 12 3 4 ## 3 9 1 -2 ## 4 8 -3 -1 ## 5 11 7 1 ## 6 4 -7 -5 ## 7 11 4 0 ## 8 7 -1 -6 ## 9 8 -3 NA ## 10 11 2 NA ## 11 9 -1 NA ## 12 10 1 NA ## 13 9 -2 NA ## 14 11 -2 NA ## 15 13 NA NA 9.8 cumsum Suma cumulativa: los valores se suman a los largo del vector o columna set.seed(12345) # set.seed() es para que los datos NO sean al azar y se puede replicar los resultados, tipicamente esto se usa para enseñanzar. x &lt;- sample(1:15, 10, replace=TRUE) # sample es para seleccionar valores al azar de un vector x ## [1] 14 3 10 12 8 10 13 11 8 2 df=as.tibble(x) df ## # A tibble: 10 × 1 ## value ## &lt;int&gt; ## 1 14 ## 2 3 ## 3 10 ## 4 12 ## 5 8 ## 6 10 ## 7 13 ## 8 11 ## 9 8 ## 10 2 df %&gt;% dplyr::select(value) %&gt;% mutate(suma=cumsum(value)) ## # A tibble: 10 × 2 ## value suma ## &lt;int&gt; &lt;int&gt; ## 1 14 14 ## 2 3 17 ## 3 10 27 ## 4 12 39 ## 5 8 47 ## 6 10 57 ## 7 13 70 ## 8 11 81 ## 9 8 89 ## 10 2 91 url_COVID_PR &lt;- read_csv(&quot;Datos/url_COVID_PR.csv&quot;) head(url_COVID_PR) ## # A tibble: 6 × 18 ## ...1 Fecha Muertes IncrementoMuertes CasosPCR_Salud IncCasosPCR_Salud ## &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1 3/12/20 0 0 NA NA ## 2 2 3/13/20 0 0 NA NA ## 3 3 3/14/20 0 0 NA NA ## 4 4 3/15/20 0 0 NA NA ## 5 5 3/16/20 0 0 NA NA ## 6 6 3/17/20 0 0 NA NA ## # ℹ 12 more variables: CasosSaludNuevo &lt;dbl&gt;, IncCasosSaludNuevo &lt;dbl&gt;, ## # HospitCOV19 &lt;dbl&gt;, CamasICU &lt;dbl&gt;, CamasICU_disp &lt;dbl&gt;, Ventiladores &lt;dbl&gt;, ## # MuertesSalud &lt;dbl&gt;, IncMueSalud &lt;dbl&gt;, VacDoses &lt;dbl&gt;, VacAdm &lt;dbl&gt;, ## # N1MoreDoses &lt;dbl&gt;, N2Doses &lt;dbl&gt; url_COVID_PR %&gt;% dplyr::select(IncCasosSaludNuevo, CasosSaludNuevo) %&gt;% mutate(suma=cumsum(IncCasosSaludNuevo)) ## # A tibble: 587 × 3 ## IncCasosSaludNuevo CasosSaludNuevo suma ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 2 2 2 ## 2 3 5 5 ## 3 3 8 8 ## 4 0 8 8 ## 5 9 17 17 ## 6 7 24 24 ## 7 6 30 30 ## 8 5 35 35 ## 9 14 49 49 ## 10 12 61 61 ## # ℹ 577 more rows 9.9 cummean() and cumvar() Para calcular el promedio cumulativo y la varianza las funciones son cummean() # del paquete cumstats cumvar() # del paquete cumstats Vea las otras funciones en el paquete cumstats: hay otra que podría usar en sus estudios? set.seed(678) x &lt;- rnorm(1000, 5, .001) head(x) ## [1] 4.999227 5.000933 5.000466 4.998915 4.997844 4.999281 df=as.tibble(x) head(df) ## # A tibble: 6 × 1 ## value ## &lt;dbl&gt; ## 1 5.00 ## 2 5.00 ## 3 5.00 ## 4 5.00 ## 5 5.00 ## 6 5.00 mean(df$value) ## [1] 4.999966 library(MASS) df3=df %&gt;% dplyr::select(value) %&gt;% mutate(Prom_cum=cummean(value)) %&gt;% mutate(Var_cum=cumstats::cumvar(value)) # activa el paquete cumstats library(cumstats) df3=df %&gt;% dplyr::select(value) %&gt;% mutate(Prom_cum=cummean(value)) %&gt;% mutate(Var_cum=cumvar(value)) df3 ## # A tibble: 1,000 × 3 ## value Prom_cum Var_cum ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 5.00 5.00 NA ## 2 5.00 5.00 0.00000146 ## 3 5.00 5.00 0.000000778 ## 4 5.00 5.00 0.000000937 ## 5 5.00 5.00 0.00000154 ## 6 5.00 5.00 0.00000124 ## 7 5.00 5.00 0.00000139 ## 8 5.00 5.00 0.00000129 ## 9 5.00 5.00 0.00000115 ## 10 5.00 5.00 0.00000113 ## # ℹ 990 more rows 9.10 Uso de varianza cumulativa en investigación: Un metodo para determinar si la cantidad de muestras recolectada es suficiente, es evaluar si la varianza cumulativa sigue cambiando cuando se añade nuevas recolección de datos. df3$order=c(1:1000) df3 ## # A tibble: 1,000 × 4 ## value Prom_cum Var_cum order ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; ## 1 5.00 5.00 NA 1 ## 2 5.00 5.00 0.00000146 2 ## 3 5.00 5.00 0.000000778 3 ## 4 5.00 5.00 0.000000937 4 ## 5 5.00 5.00 0.00000154 5 ## 6 5.00 5.00 0.00000124 6 ## 7 5.00 5.00 0.00000139 7 ## 8 5.00 5.00 0.00000129 8 ## 9 5.00 5.00 0.00000115 9 ## 10 5.00 5.00 0.00000113 10 ## # ℹ 990 more rows ggplot(df3, aes(order, Var_cum))+ geom_point()+ geom_smooth() 9.11 Que pasa con las funciones cummean, cumsum y cumvar si hay NA en el archivo de datos? 9.11.1 Replacar los NA con 0, usando la función replace_na() con un valor especifico replace_na(“variable”, 0) datos_NA=c(1:8, NA, 10:20) datos_NA=as.data.frame(datos_NA) datos_NA %&gt;% dplyr::select(datos_NA) %&gt;% mutate(Prom_cum=cummean(datos_NA)) %&gt;% mutate(Var_cum=cumstats::cumvar(datos_NA)) ## datos_NA Prom_cum Var_cum ## 1 1 1.0 NA ## 2 2 1.5 0.500000 ## 3 3 2.0 1.000000 ## 4 4 2.5 1.666667 ## 5 5 3.0 2.500000 ## 6 6 3.5 3.500000 ## 7 7 4.0 4.666667 ## 8 8 4.5 6.000000 ## 9 NA NA NA ## 10 10 NA NA ## 11 11 NA NA ## 12 12 NA NA ## 13 13 NA NA ## 14 14 NA NA ## 15 15 NA NA ## 16 16 NA NA ## 17 17 NA NA ## 18 18 NA NA ## 19 19 NA NA ## 20 20 NA NA # Solución para resolver los NA. Cual problema hay con usar NA? La función if_else() es una función de reemplazo de valores en una columna basado en una condición library(tidyverse) library(dplyr) some_data = tibble(day = 1:10) some_data ## # A tibble: 10 × 1 ## day ## &lt;int&gt; ## 1 1 ## 2 2 ## 3 3 ## 4 4 ## 5 5 ## 6 6 ## 7 7 ## 8 8 ## 9 9 ## 10 10 some_data |&gt; mutate(day_p = if_else(day %in% c(0:3), &quot;pre&quot;, &quot;normal&quot;)) ## # A tibble: 10 × 2 ## day day_p ## &lt;int&gt; &lt;chr&gt; ## 1 1 pre ## 2 2 pre ## 3 3 pre ## 4 4 normal ## 5 5 normal ## 6 6 normal ## 7 7 normal ## 8 8 normal ## 9 9 normal ## 10 10 normal plant_repr=tibble(num_flowers=c(0,0,0,0,1,2,0,1,2,0,2, 100, 1000)) plant_repr ## # A tibble: 13 × 1 ## num_flowers ## &lt;dbl&gt; ## 1 0 ## 2 0 ## 3 0 ## 4 0 ## 5 1 ## 6 2 ## 7 0 ## 8 1 ## 9 2 ## 10 0 ## 11 2 ## 12 100 ## 13 1000 plant_repr |&gt; mutate(flower_status = if_else(num_flowers == 0, &quot;not reproductive&quot;, &quot;reproductive&quot;)) ## # A tibble: 13 × 2 ## num_flowers flower_status ## &lt;dbl&gt; &lt;chr&gt; ## 1 0 not reproductive ## 2 0 not reproductive ## 3 0 not reproductive ## 4 0 not reproductive ## 5 1 reproductive ## 6 2 reproductive ## 7 0 not reproductive ## 8 1 reproductive ## 9 2 reproductive ## 10 0 not reproductive ## 11 2 reproductive ## 12 100 reproductive ## 13 1000 reproductive plant_repr |&gt; mutate(flower_status = if_else(num_flowers %in% c(0), &quot;not reproductive&quot;, &quot;reproductive&quot;)) ## # A tibble: 13 × 2 ## num_flowers flower_status ## &lt;dbl&gt; &lt;chr&gt; ## 1 0 not reproductive ## 2 0 not reproductive ## 3 0 not reproductive ## 4 0 not reproductive ## 5 1 reproductive ## 6 2 reproductive ## 7 0 not reproductive ## 8 1 reproductive ## 9 2 reproductive ## 10 0 not reproductive ## 11 2 reproductive ## 12 100 reproductive ## 13 1000 reproductive plant_repr |&gt; mutate(flower_status = if_else(num_flowers %in% c(0), &quot;not reproductive&quot;, if_else(num_flowers %in% c(1:2), &quot;reproductive&quot;, &quot;super reproductive&quot;))) ## # A tibble: 13 × 2 ## num_flowers flower_status ## &lt;dbl&gt; &lt;chr&gt; ## 1 0 not reproductive ## 2 0 not reproductive ## 3 0 not reproductive ## 4 0 not reproductive ## 5 1 reproductive ## 6 2 reproductive ## 7 0 not reproductive ## 8 1 reproductive ## 9 2 reproductive ## 10 0 not reproductive ## 11 2 reproductive ## 12 100 super reproductive ## 13 1000 super reproductive "],["transformación-rangos-y-más.html", "Capítulo10 Transformación: Rangos y más 10.1 Funciones en este modulo 10.2 Pruebas no paraméticas 10.3 min_rank() y # min_rank(desc()) 10.4 row_number() 10.5 dense_rank() 10.6 la función percent_rank() 10.7 la función percent_rank() sin NA 10.8 la función cume_dist() 10.9 Resúmenes con summarise() by group using group_by() 10.10 La aerolinea peor en atraso de salidas", " Capítulo10 Transformación: Rangos y más ## [1] &quot;2024-11-07&quot; 10.1 Funciones en este modulo min_rank() # asigna valores de rangos a los valores originales row_number() # asigna valores de rangos a los valores originales desc() # ordena los valores de mayor a menor rank() # asigna valores de rangos a los valores originales first() dense_rank() percent_rank() cume_dist() rollmean() library(tidyverse) library(datos) 10.2 Pruebas no paraméticas La pruebas no paramétricas no son basado en distribución normal y los indices como promedio, desviación estándar no se usan. 10.3 min_rank() y # min_rank(desc()) Asignar valores de rangos a los valores originales o de más grande a meas pequeño o vise versa. set.seed(45678) x &lt;- sample(1:50, 10) head(x) ## [1] 22 1 36 46 7 39 df=as.tibble(x) df ## # A tibble: 10 × 1 ## value ## &lt;int&gt; ## 1 22 ## 2 1 ## 3 36 ## 4 46 ## 5 7 ## 6 39 ## 7 34 ## 8 10 ## 9 24 ## 10 30 df %&gt;% dplyr::select(value) %&gt;% mutate(rango_minimo=min_rank(value)) %&gt;% mutate(rango_min_desc=min_rank(desc(value)) ) ## # A tibble: 10 × 3 ## value rango_minimo rango_min_desc ## &lt;int&gt; &lt;int&gt; &lt;int&gt; ## 1 22 4 7 ## 2 1 1 10 ## 3 36 8 3 ## 4 46 10 1 ## 5 7 2 9 ## 6 39 9 2 ## 7 34 7 4 ## 8 10 3 8 ## 9 24 5 6 ## 10 30 6 5 10.4 row_number() Qué hace la función row_number? set.seed(45678) y &lt;- c(10,21,22,NA,5,4) head(y) ## [1] 10 21 22 NA 5 4 df=as.tibble(y) df ## # A tibble: 6 × 1 ## value ## &lt;dbl&gt; ## 1 10 ## 2 21 ## 3 22 ## 4 NA ## 5 5 ## 6 4 df %&gt;% dplyr::select(value) %&gt;% mutate(row=row_number(value)) # equivalente a rank, ## # A tibble: 6 × 2 ## value row ## &lt;dbl&gt; &lt;int&gt; ## 1 10 3 ## 2 21 4 ## 3 22 5 ## 4 NA NA ## 5 5 2 ## 6 4 1 10.5 dense_rank() set.seed(45678) z &lt;- c(10,12,12,NA,51,4) df=as.tibble(z) df ## # A tibble: 6 × 1 ## value ## &lt;dbl&gt; ## 1 10 ## 2 12 ## 3 12 ## 4 NA ## 5 51 ## 6 4 df %&gt;% dplyr::select(value) %&gt;% mutate(dense=dense_rank(value)) # equivalente a rank, NOTA que los NA no son asignado un valor ## # A tibble: 6 × 2 ## value dense ## &lt;dbl&gt; &lt;int&gt; ## 1 10 2 ## 2 12 3 ## 3 12 3 ## 4 NA NA ## 5 51 4 ## 6 4 1 10.6 la función percent_rank() set.seed(45678) w &lt;- c(1,2,2,NA,5,4) w ## [1] 1 2 2 NA 5 4 df=as.tibble(w) df ## # A tibble: 6 × 1 ## value ## &lt;dbl&gt; ## 1 1 ## 2 2 ## 3 2 ## 4 NA ## 5 5 ## 6 4 df %&gt;% dplyr::select(value) %&gt;% mutate(porcentaje_rank=percent_rank(value)) # equivalente a rank, Un número entre a 0 y 1 calculado haciendo una re-escala de los valores usando min_rank to [0, 1]. NOTA que el valor más pequeño es reasignado un valor de 0 y el más grande un valor de 1. ## # A tibble: 6 × 2 ## value porcentaje_rank ## &lt;dbl&gt; &lt;dbl&gt; ## 1 1 0 ## 2 2 0.25 ## 3 2 0.25 ## 4 NA NA ## 5 5 1 ## 6 4 0.75 10.7 la función percent_rank() sin NA set.seed(45678) x2 &lt;- sample(1:50, 7) df2=as.tibble(x2) df2 ## # A tibble: 7 × 1 ## value ## &lt;int&gt; ## 1 22 ## 2 1 ## 3 36 ## 4 46 ## 5 7 ## 6 39 ## 7 34 df2 %&gt;% dplyr::select(value) %&gt;% mutate(porc2=percent_rank(value)) ## # A tibble: 7 × 2 ## value porc2 ## &lt;int&gt; &lt;dbl&gt; ## 1 22 0.333 ## 2 1 0 ## 3 36 0.667 ## 4 46 1 ## 5 7 0.167 ## 6 39 0.833 ## 7 34 0.5 10.8 la función cume_dist() Es la suma cumulativa de los rangos set.seed(45678) x &lt;- c(1,2,3,NA,5,4, 10, 8) x ## [1] 1 2 3 NA 5 4 10 8 df=as.tibble(x) df ## # A tibble: 8 × 1 ## value ## &lt;dbl&gt; ## 1 1 ## 2 2 ## 3 3 ## 4 NA ## 5 5 ## 6 4 ## 7 10 ## 8 8 df %&gt;% dplyr::select(value) %&gt;% mutate(rangos_cumulativo=cume_dist(value)) ## # A tibble: 8 × 2 ## value rangos_cumulativo ## &lt;dbl&gt; &lt;dbl&gt; ## 1 1 0.143 ## 2 2 0.286 ## 3 3 0.429 ## 4 NA NA ## 5 5 0.714 ## 6 4 0.571 ## 7 10 1 ## 8 8 0.857 Ejercicios: Hacer los ejercicios en la sección 5.5.2 del libro en español Encuentra los 10 vuelos más retrasados utilizando una función de ordenamiento. ¿Cómo quieres manejar los empates? Lee atentamente la documentación de min_rank(). names(vuelos) ## [1] &quot;anio&quot; &quot;mes&quot; &quot;dia&quot; ## [4] &quot;horario_salida&quot; &quot;salida_programada&quot; &quot;atraso_salida&quot; ## [7] &quot;horario_llegada&quot; &quot;llegada_programada&quot; &quot;atraso_llegada&quot; ## [10] &quot;aerolinea&quot; &quot;vuelo&quot; &quot;codigo_cola&quot; ## [13] &quot;origen&quot; &quot;destino&quot; &quot;tiempo_vuelo&quot; ## [16] &quot;distancia&quot; &quot;hora&quot; &quot;minuto&quot; ## [19] &quot;fecha_hora&quot; vuelos%&gt;% dplyr::select(atraso_salida, aerolinea)%&gt;% arrange(desc(atraso_salida))%&gt;% mutate(mas_atrados=min_rank(desc(atraso_salida))) %&gt;% head(n=10) ## # A tibble: 10 × 3 ## atraso_salida aerolinea mas_atrados ## &lt;dbl&gt; &lt;chr&gt; &lt;int&gt; ## 1 1301 HA 1 ## 2 1137 MQ 2 ## 3 1126 MQ 3 ## 4 1014 AA 4 ## 5 1005 MQ 5 ## 6 960 DL 6 ## 7 911 DL 7 ## 8 899 DL 8 ## 9 898 DL 9 ## 10 896 AA 10 names(vuelos) ## [1] &quot;anio&quot; &quot;mes&quot; &quot;dia&quot; ## [4] &quot;horario_salida&quot; &quot;salida_programada&quot; &quot;atraso_salida&quot; ## [7] &quot;horario_llegada&quot; &quot;llegada_programada&quot; &quot;atraso_llegada&quot; ## [10] &quot;aerolinea&quot; &quot;vuelo&quot; &quot;codigo_cola&quot; ## [13] &quot;origen&quot; &quot;destino&quot; &quot;tiempo_vuelo&quot; ## [16] &quot;distancia&quot; &quot;hora&quot; &quot;minuto&quot; ## [19] &quot;fecha_hora&quot; vuelos %&gt;% arrange(atraso_salida) %&gt;% mutate(rango_minimo=min_rank(atraso_salida)) %&gt;% head(n=10) ## # A tibble: 10 × 20 ## anio mes dia horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 12 7 2040 2123 -43 ## 2 2013 2 3 2022 2055 -33 ## 3 2013 11 10 1408 1440 -32 ## 4 2013 1 11 1900 1930 -30 ## 5 2013 1 29 1703 1730 -27 ## 6 2013 8 9 729 755 -26 ## 7 2013 10 23 1907 1932 -25 ## 8 2013 3 30 2030 2055 -25 ## 9 2013 3 2 1431 1455 -24 ## 10 2013 5 5 934 958 -24 ## # ℹ 14 more variables: horario_llegada &lt;int&gt;, llegada_programada &lt;int&gt;, ## # atraso_llegada &lt;dbl&gt;, aerolinea &lt;chr&gt;, vuelo &lt;int&gt;, codigo_cola &lt;chr&gt;, ## # origen &lt;chr&gt;, destino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, distancia &lt;dbl&gt;, ## # hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt;, rango_minimo &lt;int&gt; 10.9 Resúmenes con summarise() by group using group_by() library(datos) library(nycflights13) summarise(flights, delay = mean(dep_delay, na.rm = TRUE)) ## # A tibble: 1 × 1 ## delay ## &lt;dbl&gt; ## 1 12.6 flights %&gt;% summarise(delay = mean(dep_delay, na.rm = TRUE)) ## # A tibble: 1 × 1 ## delay ## &lt;dbl&gt; ## 1 12.6 by_day &lt;- group_by(flights, year, month, day) summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) ## # A tibble: 365 × 4 ## # Groups: year, month [12] ## year month day delay ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 11.5 ## 2 2013 1 2 13.9 ## 3 2013 1 3 11.0 ## 4 2013 1 4 8.95 ## 5 2013 1 5 5.73 ## 6 2013 1 6 7.15 ## 7 2013 1 7 5.42 ## 8 2013 1 8 2.55 ## 9 2013 1 9 2.28 ## 10 2013 1 10 2.84 ## # ℹ 355 more rows flights %&gt;% group_by(year, month, day) %&gt;% summarise(delay = mean(dep_delay, na.rm = TRUE)) ## # A tibble: 365 × 4 ## # Groups: year, month [12] ## year month day delay ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 11.5 ## 2 2013 1 2 13.9 ## 3 2013 1 3 11.0 ## 4 2013 1 4 8.95 ## 5 2013 1 5 5.73 ## 6 2013 1 6 7.15 ## 7 2013 1 7 5.42 ## 8 2013 1 8 2.55 ## 9 2013 1 9 2.28 ## 10 2013 1 10 2.84 ## # ℹ 355 more rows 10.10 La aerolinea peor en atraso de salidas flights %&gt;% group_by(carrier) %&gt;% summarise(delay = mean(dep_delay, na.rm = TRUE)) %&gt;% arrange(desc(delay)) ## # A tibble: 16 × 2 ## carrier delay ## &lt;chr&gt; &lt;dbl&gt; ## 1 F9 20.2 ## 2 EV 20.0 ## 3 YV 19.0 ## 4 FL 18.7 ## 5 WN 17.7 ## 6 9E 16.7 ## 7 B6 13.0 ## 8 VX 12.9 ## 9 OO 12.6 ## 10 UA 12.1 ## 11 MQ 10.6 ## 12 DL 9.26 ## 13 AA 8.59 ## 14 AS 5.80 ## 15 HA 4.90 ## 16 US 3.78 by_dest &lt;- group_by(flights, dest) by_dest ## # A tibble: 336,776 × 19 ## # Groups: dest [105] ## year month day dep_time sched_dep_time dep_delay arr_time sched_arr_time ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; ## 1 2013 1 1 517 515 2 830 819 ## 2 2013 1 1 533 529 4 850 830 ## 3 2013 1 1 542 540 2 923 850 ## 4 2013 1 1 544 545 -1 1004 1022 ## 5 2013 1 1 554 600 -6 812 837 ## 6 2013 1 1 554 558 -4 740 728 ## 7 2013 1 1 555 600 -5 913 854 ## 8 2013 1 1 557 600 -3 709 723 ## 9 2013 1 1 557 600 -3 838 846 ## 10 2013 1 1 558 600 -2 753 745 ## # ℹ 336,766 more rows ## # ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;, ## # tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;, ## # hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt; delay &lt;- summarise(by_dest, count = n(), dist = mean(distance, na.rm = TRUE), delay = mean(arr_delay, na.rm = TRUE)) delay ## # A tibble: 105 × 4 ## dest count dist delay ## &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 ABQ 254 1826 4.38 ## 2 ACK 265 199 4.85 ## 3 ALB 439 143 14.4 ## 4 ANC 8 3370 -2.5 ## 5 ATL 17215 757. 11.3 ## 6 AUS 2439 1514. 6.02 ## 7 AVL 275 584. 8.00 ## 8 BDL 443 116 7.05 ## 9 BGR 375 378 8.03 ## 10 BHM 297 866. 16.9 ## # ℹ 95 more rows #&gt; `summarise()` ungrouping output (override with `.groups` argument) delay &lt;- filter(delay, count &gt; 20, dest != &quot;HNL&quot;) # It looks like delays increase with distance up to ~750 miles # and then decrease. Maybe as flights get longer there&#39;s more # ability to make up delays in the air? ggplot(data = delay, aes(x = dist, y = delay)) + geom_point(aes(size = count), alpha = 1/3) + geom_smooth(se = FALSE) #&gt; `geom_smooth()` using method = &#39;loess&#39; and formula &#39;y ~ x&#39; names(delay) ## [1] &quot;dest&quot; &quot;count&quot; &quot;dist&quot; &quot;delay&quot; head(delay) ## # A tibble: 6 × 4 ## dest count dist delay ## &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 ABQ 254 1826 4.38 ## 2 ACK 265 199 4.85 ## 3 ALB 439 143 14.4 ## 4 ATL 17215 757. 11.3 ## 5 AUS 2439 1514. 6.02 ## 6 AVL 275 584. 8.00 ggplot(data = delay, aes(x = dist, y = delay, label=dest)) + geom_point() + geom_smooth(se = FALSE)+ geom_text(size=2,aes(label=dest), hjust=1, vjust=-1) Rolling average: https://stackoverflow.com/questions/743812/calculating-moving-average library(tidyverse) library(zoo) some_data = tibble(day = 1:10) some_data ## # A tibble: 10 × 1 ## day ## &lt;int&gt; ## 1 1 ## 2 2 ## 3 3 ## 4 4 ## 5 5 ## 6 6 ## 7 7 ## 8 8 ## 9 9 ## 10 10 # cma = centered moving average # tma = trailing moving average some_data %&gt;% mutate(cma = rollmean(day, k = 3, fill = NA)) %&gt;% mutate(tma = rollmean(day, k = 3, fill = NA, align = &quot;right&quot;)) %&gt;% mutate(lma = rollmean(day, k = 3, fill = NA, align = &quot;left&quot;)) %&gt;% mutate(cmax=rollmax(day, k=30, fill=NA)) ## # A tibble: 10 × 5 ## day cma tma lma cmax ## &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;lgl&gt; ## 1 1 NA NA 2 NA ## 2 2 2 NA 3 NA ## 3 3 3 2 4 NA ## 4 4 4 3 5 NA ## 5 5 5 4 6 NA ## 6 6 6 5 7 NA ## 7 7 7 6 8 NA ## 8 8 8 7 9 NA ## 9 9 9 8 NA NA ## 10 10 NA 9 NA NA some_data ## # A tibble: 10 × 1 ## day ## &lt;int&gt; ## 1 1 ## 2 2 ## 3 3 ## 4 4 ## 5 5 ## 6 6 ## 7 7 ## 8 8 ## 9 9 ## 10 10 "],["transformación-indices-parametricos-y-no-parametricos.html", "Capítulo11 Transformación: Indices parametricos y no parametricos 11.1 Funciones estadistica básicas:", " Capítulo11 Transformación: Indices parametricos y no parametricos ## [1] &quot;2024-11-07&quot; 11.1 Funciones estadistica básicas: Tarea de grupo. Preparar un .rmd con la explicaciones de como utilizar la función mencionado abajo. Debe incluir La definición de la función en palabra y matemática. un script sencillo (con pocos datos) (uno o más ejemplos) para explicar la función un script con los datos de “vuelos” o de “Covid-19 de PR”. a las 2:20pm cada grupo presentará su trabajo. Después de la clase cada grupo, mejorará su .rmd con los comentarios recibidos. Domingo se subirá el .rmd y el .html en MSTeam (cada estudiante lo subirá: tendra el nombre de cada estudiante en el trabajo) El profesor revisará los trabajos y subsiguiente se distribuirá los .rmd y html a los estudiantes. IQR() ## G1 mad() ## G2 first() ## G3 last() ## G3 quantile() ## G4 signif() ## G5 min() max() mean() sd() *** Ejercicios: Hacer los ejercicios en la sección 5.7.1 del libro en español "],["script.html", "Capítulo12 Script 12.1 Scripts:", " Capítulo12 Script Fecha de la ultima revisión ## [1] &quot;2024-11-07&quot; El tema proviene de los siguientes sitios. English: https://r4ds.had.co.nz/workflow-scripts.html Español: https://es.r4ds.hadley.nz/06-workflow-scripts.html Temas super importante: 12.1 Scripts: Ejecutando códigos Diagnostico de Rstudio Ejercicios: Hacer los ejercicios en la sección 6.3 del libro en español library(dplyr) library(datos) library(nycflights13) names(vuelos) ## [1] &quot;anio&quot; &quot;mes&quot; &quot;dia&quot; ## [4] &quot;horario_salida&quot; &quot;salida_programada&quot; &quot;atraso_salida&quot; ## [7] &quot;horario_llegada&quot; &quot;llegada_programada&quot; &quot;atraso_llegada&quot; ## [10] &quot;aerolinea&quot; &quot;vuelo&quot; &quot;codigo_cola&quot; ## [13] &quot;origen&quot; &quot;destino&quot; &quot;tiempo_vuelo&quot; ## [16] &quot;distancia&quot; &quot;hora&quot; &quot;minuto&quot; ## [19] &quot;fecha_hora&quot; no_cancelado &lt;- vuelos %&gt;% filter(!is.na(atraso_salida), !is.na(atraso_llegada)) head(no_cancelado) ## # A tibble: 6 × 19 ## anio mes dia horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2 ## 2 2013 1 1 533 529 4 ## 3 2013 1 1 542 540 2 ## 4 2013 1 1 544 545 -1 ## 5 2013 1 1 554 600 -6 ## 6 2013 1 1 554 558 -4 ## # ℹ 13 more variables: horario_llegada &lt;int&gt;, llegada_programada &lt;int&gt;, ## # atraso_llegada &lt;dbl&gt;, aerolinea &lt;chr&gt;, vuelo &lt;int&gt;, codigo_cola &lt;chr&gt;, ## # origen &lt;chr&gt;, destino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, distancia &lt;dbl&gt;, ## # hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt; no_cancelado %&gt;% group_by(anio, mes, dia) %&gt;% summarise(media = mean(atraso_salida)) ## # A tibble: 365 × 4 ## # Groups: anio, mes [12] ## anio mes dia media ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 11.4 ## 2 2013 1 2 13.7 ## 3 2013 1 3 10.9 ## 4 2013 1 4 8.97 ## 5 2013 1 5 5.73 ## 6 2013 1 6 7.15 ## 7 2013 1 7 5.42 ## 8 2013 1 8 2.56 ## 9 2013 1 9 2.30 ## 10 2013 1 10 2.84 ## # ℹ 355 more rows x &lt;- 10 "],["analisis-exploratorio.html", "Capítulo13 Analisis Exploratorio 13.1 Temas 13.2 Terminos importantes", " Capítulo13 Analisis Exploratorio Fecha de la ultima revisión ## [1] &quot;2024-11-07&quot; El tema proviene de los siguientes sitios. English: https://r4ds.had.co.nz/exploratory-data-analysis.html Español: https://es.r4ds.hadley.nz/07-eda.html 13.1 Temas Variación Valores faltantes Covariación Patrones y modelos Argumentos en ggplot2 13.2 Terminos importantes variable valor observación datos tabulados 13.2.1 Variación visualización de las distribuciones count() cut_width() valores típicos valores inusuales o atípicos Ejercicios: Hacer los ejercicios en la sección 7.3.4 del libro en español 13.2.2 Valores faltantes between() ifelse() Ejercicios: Hacer los ejercicios en la sección 7.4.1 del libro en español 13.2.3 Covariación geom_boxplot IQR() Ejercicios: Hacer los ejercicios en la sección 7.5.1.1 del libro en español 13.2.4 Dos variables categóricas geom_count() geom_tile() Ejercicios: Hacer los ejercicios en la sección 7.5.2.1 del libro en español 13.2.5 Dos variables continuas geom_point() geom_hex() geopm_boxplot() Ejercicios: Hacer los ejercicios en la sección 7.5.3.1 del libro en español 13.2.6 Patrones y modelos construir un modelo estádistico "],["pipes.html", "Capítulo14 Pipes 14.1 Temas: El paquete “magrittr” y sus funciones 14.2 %&gt;% pipes 14.3 Alternativas a los pipes 14.4 %$% 14.5 %&lt;&gt;% 14.6 %in% 14.7 %T&gt;%", " Capítulo14 Pipes Fecha de la ultima revisión ## [1] &quot;2024-11-07&quot; library(tidyverse) library(magrittr) # El paquete de Pipe, se activa usando tidyverse El tema proviene de los siguientes sitios. English: https://r4ds.had.co.nz/pipes.html Español: https://es.r4ds.hadley.nz/ 14.1 Temas: El paquete “magrittr” y sus funciones Los pipes que vamos a evaluar son los siguientes: %&gt;% “Pipe” %!&gt;% “Eager Pipe” %$% “Exposition pipe” %&lt;&gt;% “Assigment pipe” %T&gt;% “Tee Pipe” %in% “In Pipe” Función basica para calcular el precio básico de de diamantes por quilates head(diamonds, n=3) ## # A tibble: 3 × 10 ## carat cut color clarity depth table price x y z ## &lt;dbl&gt; &lt;ord&gt; &lt;ord&gt; &lt;ord&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 0.23 Ideal E SI2 61.5 55 326 3.95 3.98 2.43 ## 2 0.21 Premium E SI1 59.8 61 326 3.89 3.84 2.31 ## 3 0.23 Good E VS1 56.9 65 327 4.05 4.07 2.31 diamonds$Precio_q = diamonds$price/diamonds$carat # crear una nueva variable head(diamonds, n=3) ## # A tibble: 3 × 11 ## carat cut color clarity depth table price x y z Precio_q ## &lt;dbl&gt; &lt;ord&gt; &lt;ord&gt; &lt;ord&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 0.23 Ideal E SI2 61.5 55 326 3.95 3.98 2.43 1417. ## 2 0.21 Premium E SI1 59.8 61 326 3.89 3.84 2.31 1552. ## 3 0.23 Good E VS1 56.9 65 327 4.05 4.07 2.31 1422. diamonds2 &lt;- diamonds %&gt;% dplyr::mutate(price_per_carat = price / carat) Calcular el promedio de precio por la calidad de los diamantes usando pipes diamonds %&gt;% group_by(cut) %&gt;% summarize(Precio_color= mean(price)) ## # A tibble: 5 × 2 ## cut Precio_color ## &lt;ord&gt; &lt;dbl&gt; ## 1 Fair 4359. ## 2 Good 3929. ## 3 Very Good 3982. ## 4 Premium 4584. ## 5 Ideal 3458. Calcular el promedio de precio por color de los diamantes usando pipes 14.2 %&gt;% pipes Un ejemplo básico del pipe car_data &lt;- mtcars %&gt;% subset(hp &gt; 100) %&gt;% aggregate(. ~ cyl, data = ., FUN = . %&gt;% mean %&gt;% round(2)) %&gt;% transform(kpl = mpg %&gt;% multiply_by(0.4251)) %&gt;% print ## cyl mpg disp hp drat wt qsec vs am gear carb kpl ## 1 4 25.90 108.05 111.00 3.94 2.15 17.75 1.00 1.00 4.50 2.00 11.010090 ## 2 6 19.74 183.31 122.29 3.59 3.12 17.98 0.57 0.43 3.86 3.43 8.391474 ## 3 8 15.10 353.10 209.21 3.23 4.00 16.77 0.00 0.14 3.29 3.50 6.419010 Un ejemplo sin usar el pipe para calcular la misma información car_data &lt;- transform(aggregate(. ~ cyl, data = subset(mtcars, hp &gt; 100), FUN = function(x) round(mean(x), 2)), kpl = mpg*0.4251) car_data ## cyl mpg disp hp drat wt qsec vs am gear carb kpl ## 1 4 25.90 108.05 111.00 3.94 2.15 17.75 1.00 1.00 4.50 2.00 11.010090 ## 2 6 19.74 183.31 122.29 3.59 3.12 17.98 0.57 0.43 3.86 3.43 8.391474 ## 3 8 15.10 353.10 209.21 3.23 4.00 16.77 0.00 0.14 3.29 3.50 6.419010 car_data &lt;- mtcars %&gt;% subset(hp &gt; 100) %&gt;% group_by(cyl) %&gt;% summarise(across(everything(), list(mean))) %&gt;% transform(kpl = mpg_1 %&gt;% multiply_by(0.4251)) %&gt;% print ## cyl mpg_1 disp_1 hp_1 drat_1 wt_1 qsec_1 vs_1 am_1 ## 1 4 25.90000 108.0500 111.0000 3.940000 2.146500 17.75000 1.0000000 1.0000000 ## 2 6 19.74286 183.3143 122.2857 3.585714 3.117143 17.97714 0.5714286 0.4285714 ## 3 8 15.10000 353.1000 209.2143 3.229286 3.999214 16.77214 0.0000000 0.1428571 ## gear_1 carb_1 kpl ## 1 4.500000 2.000000 11.010090 ## 2 3.857143 3.428571 8.392689 ## 3 3.285714 3.500000 6.419010 14.3 Alternativas a los pipes Pasos intermedios Sobre escribir el original 14.4 %$% library(magrittr) #iris %&gt;% # subset(Sepal.Length &gt; mean(Sepal.Length)) |&gt; # cor(Sepal.Length, Sepal.Width) iris %&gt;% subset(Sepal.Length &gt; mean(Sepal.Length)) %$% cor(Sepal.Length, Sepal.Width) ## [1] 0.3361992 iris %&gt;% subset(Sepal.Length &gt; mean(Sepal.Length)) |&gt; summarize(corr= cor(Sepal.Length, Sepal.Width)) ## corr ## 1 0.3361992 14.4.1 Otro ejemplo de Pipe: %$% data.frame(z = rnorm(100)) %$% ts.plot(z) #data.frame(z = rnorm(100)) |&gt; # ts.plot(z) #Para hacerlo la misma grafico con Tidyverse z1=data.frame(z = rnorm(100)) library(data.table) z1=data.table(z1) z1$order= c(1:100) z1|&gt; ggplot(aes(order, z))+ geom_line() 14.5 %&lt;&gt;% Pipe an object forward into a function or call expression and update the lhs object with the resulting value. lhs %&lt;&gt;% rhs lhs : An object which serves both as the initial value and as target. rhs : a function call using the magrittr semantics. # Example 1 head(iris) ## Sepal.Length Sepal.Width Petal.Length Petal.Width Species ## 1 5.1 3.5 1.4 0.2 setosa ## 2 4.9 3.0 1.4 0.2 setosa ## 3 4.7 3.2 1.3 0.2 setosa ## 4 4.6 3.1 1.5 0.2 setosa ## 5 5.0 3.6 1.4 0.2 setosa ## 6 5.4 3.9 1.7 0.4 setosa head(iris$Sepal.Length %&lt;&gt;% sqrt) ## [1] 2.258318 2.213594 2.167948 2.144761 2.236068 2.323790 # Example 2 x &lt;- rnorm(100) head(x, n=10) ## [1] 1.361612477 -0.189292059 0.462969745 -0.007385678 2.689108440 ## [6] 1.459546809 -1.653300235 -0.203078277 0.618497216 0.597135379 x %&lt;&gt;% abs %&gt;% sort head(x, 20) ## [1] 0.007385678 0.029096523 0.030999873 0.035387591 0.040816992 0.054441440 ## [7] 0.069795203 0.081581732 0.087776321 0.110958305 0.119075263 0.120358116 ## [13] 0.120542457 0.131861167 0.133266112 0.145019780 0.145731942 0.150293091 ## [19] 0.155538095 0.164714712 14.6 %in% Filter for values specific values within a variable # Example 1 names(iris) ## [1] &quot;Sepal.Length&quot; &quot;Sepal.Width&quot; &quot;Petal.Length&quot; &quot;Petal.Width&quot; &quot;Species&quot; iris |&gt; filter(Species %in% c(&quot;setosa&quot;, &quot;virginica&quot;)) |&gt; head() ## Sepal.Length Sepal.Width Petal.Length Petal.Width Species ## 1 2.258318 3.5 1.4 0.2 setosa ## 2 2.213594 3.0 1.4 0.2 setosa ## 3 2.167948 3.2 1.3 0.2 setosa ## 4 2.144761 3.1 1.5 0.2 setosa ## 5 2.236068 3.6 1.4 0.2 setosa ## 6 2.323790 3.9 1.7 0.4 setosa 14.7 %T&gt;% The tee pipe, %T&gt;%, is useful when a series of operations have a function that does not return any value. https://stackoverflow.com/questions/61196304/magrittr-tee-pipe-t-equivalent rnorm(200) %&gt;% matrix(ncol = 2) %T&gt;% plot %&gt;% # plot usually does not return anything. colSums ## [1] 1.395464 5.606604 "],["tibbles.html", "Capítulo15 Tibbles 15.1 Temas: El paquete Tibble 15.2 Crear un tibble 15.3 Crear un tribble 15.4 tibble vs. data.frame 15.5 Diferencias entre un tibble y un data frame. 15.6 Selección de subconjuntos de datos", " Capítulo15 Tibbles Fecha de la ultima revisión ## [1] &quot;2024-11-07&quot; El tema proviene de los siguientes sitios. English: https://r4ds.had.co.nz/tibbles.html Español: https://es.r4ds.hadley.nz/10-tibble.html 15.1 Temas: El paquete Tibble as_tibble() 15.2 Crear un tibble tibble() Crear un tibble con la siguiente información. Una columna que tiene los valores del 1 al 8 que se llama “secuencia”, una segunda columna que tiene los siguientes valores 23,26, 24,26,27, 11,20,21 que se llama edad y una tercera columna con la siguiente información, Jose, Maria, Carol, Moncho, Liz, Maria, Jorge, Miguel, que ser llama Nombre library(tidyverse) library(datos) tibble( secuencia = c(1:8), edad = c(23,26, 24,26,27, 11,20,21), nombre = c(&quot;Jose&quot;, &quot;Maria&quot;, &quot;Carol&quot;, &quot;Moncho&quot;, &quot;Liz&quot;, &quot;Maria&quot;, &quot;Jorge&quot;, &quot;Miguel&quot;) ) ## # A tibble: 8 × 3 ## secuencia edad nombre ## &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 1 23 Jose ## 2 2 26 Maria ## 3 3 24 Carol ## 4 4 26 Moncho ## 5 5 27 Liz ## 6 6 11 Maria ## 7 7 20 Jorge ## 8 8 21 Miguel 15.3 Crear un tribble tribble() Haga un tribble con las primera 3 lineas del tibble anterior tribble( ~secuencia, ~edad, ~nombre, 1, 23, &quot;Jose&quot;, 2, 26, &quot;Maria&quot;, 3, 23, &quot;Carol&quot; ) ## # A tibble: 3 × 3 ## secuencia edad nombre ## &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 1 23 Jose ## 2 2 26 Maria ## 3 3 23 Carol 15.4 tibble vs. data.frame tb = tibble( a = lubridate::now() + runif(1e2) * 86400, b = lubridate::today() + runif(1e2) * 30, c = 1:1e2, d = runif(1e2), e = sample(letters, 1e2, replace = TRUE) ) tb ## # A tibble: 100 × 5 ## a b c d e ## &lt;dttm&gt; &lt;date&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 2024-11-07 14:26:53 2024-11-25 1 0.559 o ## 2 2024-11-07 20:56:07 2024-11-07 2 0.250 o ## 3 2024-11-07 15:49:44 2024-11-09 3 0.0653 d ## 4 2024-11-08 13:35:58 2024-11-08 4 0.573 v ## 5 2024-11-07 21:08:13 2024-11-29 5 0.651 k ## 6 2024-11-08 05:20:03 2024-11-18 6 0.581 p ## 7 2024-11-08 09:58:08 2024-12-01 7 0.0175 x ## 8 2024-11-08 08:58:07 2024-11-18 8 0.0133 f ## 9 2024-11-08 03:12:51 2024-11-21 9 0.661 c ## 10 2024-11-08 09:21:04 2024-11-30 10 0.380 y ## # ℹ 90 more rows tb %&gt;% print(n = 4, width = Inf) ## # A tibble: 100 × 5 ## a b c d e ## &lt;dttm&gt; &lt;date&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 2024-11-07 14:26:53 2024-11-25 1 0.559 o ## 2 2024-11-07 20:56:07 2024-11-07 2 0.250 o ## 3 2024-11-07 15:49:44 2024-11-09 3 0.0653 d ## 4 2024-11-08 13:35:58 2024-11-08 4 0.573 v ## # ℹ 96 more rows lubridate::now() ## [1] &quot;2024-11-07 13:39:11 AST&quot; lubridate::today() ## [1] &quot;2024-11-07&quot; To convert a data frame to a tibble use as.tibble To convert a tibble to a data frame use as.data.frame 15.5 Diferencias entre un tibble y un data frame. Tibbles tiene un buen método de impresión que muestra solo las primeras 10 filas y todas las columnas que caben en la pantalla. Tibbles no admite nombres de filas. Se eliminan al convertir a tibble o al crear subconjuntos: Operaciones aritmeticas en tibbles A diferencia de los data frame, los tibbles NO admiten operaciones aritméticas en todas las columnas. El resultado  fuerza silenciosamente a un data frame. tbl &lt;- tibble(a = 1:3, b = 4:6) result=tbl * 2 is_tibble(result) ## [1] FALSE result2=tbl |&gt; mutate(c=b*2) is.tibble(result2) ## [1] TRUE Los tibbles también son más estrictos con $. Tibbles nunca realiza coincidencias parciales y generará una advertencia y devolverá NULL si la columna no existe: df &lt;- data.frame(abc = 1) df$a ## [1] 1 #&gt; [1] 1 df2 &lt;- tibble(abc = 1) df2$a # nota el error ## NULL Para extraer una columna de un tibble, use [[. Esto es más seguro que $ porque nunca realiza coincidencias parciales: 15.6 Selección de subconjuntos de datos head(vuelos$salida_programada, n=20) ## [1] 515 529 540 545 600 558 600 600 600 600 600 600 600 600 600 559 600 600 600 ## [20] 600 vuelos[[&quot;salida_programada&quot;]] |&gt; head(n=20) ## [1] 515 529 540 545 600 558 600 600 600 600 600 600 600 600 600 559 600 600 600 ## [20] 600 #Alternativas usar esta función dentro de pipe vuelos %&gt;% .$salida_programada |&gt; head(n=20) ## [1] 515 529 540 545 600 558 600 600 600 600 600 600 600 600 600 559 600 600 600 ## [20] 600 vuelos %&gt;% .[[&quot;salida_programada&quot;]] |&gt; head(n=20) ## [1] 515 529 540 545 600 558 600 600 600 600 600 600 600 600 600 559 600 600 600 ## [20] 600 vuelos %&gt;% .[[&quot;atraso_salida&quot;]] |&gt; head(n=20) ## [1] 2 4 2 -1 -6 -4 -5 -3 -3 -2 -2 -2 -2 -2 -1 0 -1 0 0 1 Ejercicios: Hacer los ejercicios en la sección 10.5 del libro en español "],["importar-datos.html", "Capítulo16 Importar datos 16.1 Datos importado de la web. 16.2 Ejercicio 16.3 Datos importando de su computadora 16.4 Comparar con base R 16.5 Segmentar un vector 16.6 Números 16.7 Caderna de texto 16.8 Factores 16.9 Fechas, fechas-horas, horas 16.10 Segmentar un archivo 16.11 Escribir un Archivo 16.12 Otro tipos de datos y paquetes", " Capítulo16 Importar datos Fecha de la ultima revisión ## [1] &quot;2024-11-07&quot; 16.1 Datos importado de la web. 16.1.1 Usar datos que provienen de una base de datos del web. Aquí un website que recopila la cantidad de personas vacunados en los EEUU. library(tidyverse) library(data.table) Seleccionar solamente los datos de Puerto Rico 16.1.2 COVID world Otro website de datos de COVID, estos representa los datos de todos los paises del mundo Para encontrar datos de PR vea el siguiente enlace: Este sitio del gobierno de Puerto Rico almacen datos muchos diferentes tipos que estan relacionado a la isla. https://datos.estadisticas.pr/dataset?res_format=CSV Nota que para leer los datos de un archivo CSV, se usa la función “fread()” del paquete “data.table”. Cuando entre a la pagina, selecciona uno de los archivos, por ejemplo Facultad -Conservatorio de Musica Presione el boton “Explore” y selecciona “Preview” Arriba de la pagina vera el enlace de https://……… para poner en un script. Copie y pegue en el script. Otra alternativa es bajar los datos en formato .csv o Excel y subirlo a su proyecto en RStudio. 16.2 Ejercicio Selecciona solamente los datos de los bebes que nacieron primer mes del año, pero agrupado por el día de la semana y contabilizado COVID_PR Calcula la cantidad de muertes por día en PR, y el máximo de muerto en un día por COVID 16.3 Datos importando de su computadora 16.3.1 Temas: Funciones para importar datos con el paquete readr read_csv() # sepeardo por coma read_csv2() # separado por punto y coma read_tsv() # separado por tab read_delim() # separado por delimitador read_fwf() read_width() read_positions() read_table() library(tidyverse) library(readr) Newborn_Karn_Penrose &lt;- read_csv(&quot;Datos/Newborn_Karn_Penrose.csv&quot;) #library(readxl) #Newborn_Karn_Penrose1 &lt;- read_excel(&quot;~/Google Drive/GitHub_Google_Drive/GitHub/Vintage_DATA/DATA/Human_Birth_Weight/Newborn_Karn_Penrose.xlsx&quot;, sheet = 3) head(Newborn_Karn_Penrose) ## # A tibble: 6 × 4 ## Mother_age Count_Non_survivors Count_Total_Birth Birth_weight ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 16 0 1 9.5 ## 2 16 0 2 9 ## 3 16 0 1 8.5 ## 4 16 0 3 8 ## 5 16 0 7 7.5 ## 6 16 0 2 7 Hacer una columna de la proporción de los niños que no sobrevivieron. Newborn_Karn_Penrose %&gt;% select(Count_Non_survivors, Count_Total_Birth) %&gt;% arrange(Count_Total_Birth, Count_Non_survivors) %&gt;% mutate(Perc_sobrevivieron = Count_Non_survivors/Count_Total_Birth) Newborn_Karn_Penrose %&gt;% mutate(Percent_Decease = Count_Non_survivors/Count_Total_Birth) ## # A tibble: 261 × 5 ## Mother_age Count_Non_survivors Count_Total_Birth Birth_weight Percent_Decease ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 16 0 1 9.5 0 ## 2 16 0 2 9 0 ## 3 16 0 1 8.5 0 ## 4 16 0 3 8 0 ## 5 16 0 7 7.5 0 ## 6 16 0 2 7 0 ## 7 16 0 4 6.5 0 ## 8 16 0 2 6 0 ## 9 16 0 2 5.5 0 ## 10 16 0 1 5 0 ## # ℹ 251 more rows Newborn_Karn_Penrose %&gt;% select(Count_Non_survivors, Count_Total_Birth, Birth_weight) %&gt;% arrange(Count_Total_Birth, Count_Non_survivors) %&gt;% mutate(porc_sobrevivieron = Count_Non_survivors / Count_Total_Birth)%&gt;% ggplot(aes(x= Birth_weight, y=porc_sobrevivieron))+ geom_point()+ geom_smooth() Newborn_Karn_Penrose %&gt;% mutate(Percent_Decease = Count_Non_survivors/Count_Total_Birth) %&gt;% ggplot(aes(Birth_weight, Percent_Decease)) + geom_point() + geom_smooth() Newborn_Karn_Penrose %&gt;% mutate(Percent_Decease = Count_Non_survivors/Count_Total_Birth) %&gt;% ggplot(aes(Birth_weight, Percent_Decease)) + geom_point() + geom_smooth()+ facet_wrap(~Mother_age) Newborn_Karn_Penrose %&gt;% mutate(Percent_Decease = Count_Non_survivors/Count_Total_Birth) %&gt;% ggplot(aes(Birth_weight, Percent_Decease, color=Mother_age)) + geom_point(aes(color=factor(Mother_age))) + geom_smooth(se=FALSE, aes(color=factor(Mother_age))) 16.4 Comparar con base R Ejercicios: Hacer los ejercicios en la sección 11.2.2 del libro en español 16.5 Segmentar un vector str(parse_logical()) x= c(&quot;TRUE&quot;, &quot;FALSE&quot;, &quot;NA&quot;) x ## [1] &quot;TRUE&quot; &quot;FALSE&quot; &quot;NA&quot; str(parse_logical(x)) ## logi [1:3] TRUE FALSE NA y= c(&quot;Carlos&quot;, &quot;Kelvin&quot;) y ## [1] &quot;Carlos&quot; &quot;Kelvin&quot; str(parse_logical(y)) ## logi [1:2] NA NA ## - attr(*, &quot;problems&quot;)= tibble [2 × 4] (S3: tbl_df/tbl/data.frame) ## ..$ row : int [1:2] 1 2 ## ..$ col : int [1:2] NA NA ## ..$ expected: chr [1:2] &quot;1/0/T/F/TRUE/FALSE&quot; &quot;1/0/T/F/TRUE/FALSE&quot; ## ..$ actual : chr [1:2] &quot;Carlos&quot; &quot;Kelvin&quot; str(parse_logical(c(&quot;TRUE&quot;, &quot;FALSE&quot;, &quot;NA&quot;))) ## logi [1:3] TRUE FALSE NA z=c(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;) z ## [1] &quot;1&quot; &quot;2&quot; &quot;3&quot; mean(z) ## [1] NA z1=str(parse_integer(z)) ## int [1:3] 1 2 3 str(parse_integer(c(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;))) ## int [1:3] 1 2 3 str(parse_date(c(&quot;2010-01-01&quot;, &quot;1979-10-14&quot;))) ## Date[1:2], format: &quot;2010-01-01&quot; &quot;1979-10-14&quot; m=c(&quot;$4000&quot;, &quot;$500&quot; ) parse_number(m) ## [1] 4000 500 parse_number(&quot;$100&quot;) ## [1] 100 #&gt; [1] 100 parse_number(&quot;20%&quot;) ## [1] 20 #&gt; [1] 20 parse_number(&quot;It cost $123.45&quot;) ## [1] 123.45 #&gt; [1] 123.45 str(parse_integer()) str(parse_date()) 16.6 Números parse_double() parse_number() parse_number(locale=locale(grouping_mark = “.”)) 16.7 Caderna de texto parse_character() charToRaw() charToRaw(&quot;Ramn&quot;) ## [1] 52 61 6d 6e x1 &lt;- &quot;El Ni\\xf1o was particularly bad this year&quot; x2 &lt;- &quot;\\x82\\xb1\\x82\\xf1\\x82\\xc9\\x82\\xbf\\x82\\xcd&quot; x3 &lt;- &quot;The boy was particularly bad this year&quot; library(readr) parse_character(x1, locale = locale(encoding = &quot;Latin1&quot;)) ## [1] &quot;El Niño was particularly bad this year&quot; #&gt; [1] &quot;El Niño was particularly bad this year&quot; parse_character(x2, locale = locale(encoding = &quot;Shift-JIS&quot;)) ## [1] &quot;こんにちは&quot; parse_character(x, locale = locale(encoding = &quot;Shift-JIS&quot;)) ## [1] &quot;TRUE&quot; &quot;FALSE&quot; NA #&gt; [1] &quot;こんにちは&quot; guess_encoding(charToRaw()) guess_encoding(charToRaw(x3)) ## # A tibble: 1 × 2 ## encoding confidence ## &lt;chr&gt; &lt;dbl&gt; ## 1 ASCII 1 16.8 Factores parse_factor() 16.9 Fechas, fechas-horas, horas parse_datetime() library(hms) parse_time() Ejercicios: Hacer los ejercicios en la sección 11.3.5 del libro en español 16.10 Segmentar un archivo guess_parser 16.11 Escribir un Archivo write_csv() write_tsv() 16.12 Otro tipos de datos y paquetes library(haven) # SPSS, Stata y SAS readxl() lee archivo Excel en formato .xls, xlsx BDI lee archivo RMySQL y otros "],["datos-ordenados.html", "Capítulo17 Datos Ordenados 17.1 Temas: Datos Ordenados 17.2 Bajar los datos de la web del USGS 17.3 Si bajo los datos a mi computadora 17.4 Importación de Paquetes y Datos 17.5 Mapa básico con Leaflet 17.6 Usando la paletas de color de viridis 17.7 Trabajando con datos de iNaturalist 17.8 Utilizando Leaflet 17.9 Trabajando Variables Categóricas con Leaflet:", " Capítulo17 Datos Ordenados Fecha de la ultima revisión ## [1] &quot;2024-11-07&quot; El tema proviene de los siguientes sitios. English: https://r4ds.had.co.nz/tidy-data.html Español: https://es.r4ds.hadley.nz/12-tidy.html 17.1 Temas: Datos Ordenados 17.1.1 El paquete tidyr Ver vignettes library(tidyverse) library(datos) tabla1 ## # A tibble: 6 × 4 ## pais anio casos poblacion ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Afganistán 1999 745 19987071 ## 2 Afganistán 2000 2666 20595360 ## 3 Brasil 1999 37737 172006362 ## 4 Brasil 2000 80488 174504898 ## 5 China 1999 212258 1272915272 ## 6 China 2000 213766 1280428583 tabla2 ## # A tibble: 12 × 4 ## pais anio tipo cuenta ## &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 Afganistán 1999 casos 745 ## 2 Afganistán 1999 población 19987071 ## 3 Afganistán 2000 casos 2666 ## 4 Afganistán 2000 población 20595360 ## 5 Brasil 1999 casos 37737 ## 6 Brasil 1999 población 172006362 ## 7 Brasil 2000 casos 80488 ## 8 Brasil 2000 población 174504898 ## 9 China 1999 casos 212258 ## 10 China 1999 población 1272915272 ## 11 China 2000 casos 213766 ## 12 China 2000 población 1280428583 tabla3 ## # A tibble: 6 × 3 ## pais anio tasa ## &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 Afganistán 1999 745/19987071 ## 2 Afganistán 2000 2666/20595360 ## 3 Brasil 1999 37737/172006362 ## 4 Brasil 2000 80488/174504898 ## 5 China 1999 212258/1272915272 ## 6 China 2000 213766/1280428583 tabla4a ## # A tibble: 3 × 3 ## pais `1999` `2000` ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Afganistán 745 2666 ## 2 Brasil 37737 80488 ## 3 China 212258 213766 tabla4b ## # A tibble: 3 × 3 ## pais `1999` `2000` ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Afganistán 19987071 20595360 ## 2 Brasil 172006362 174504898 ## 3 China 1272915272 1280428583 ≠# Leaflet: Mapas interactivos ## [1] &quot;2024-11-07&quot; library(tidyverse) 17.2 Bajar los datos de la web del USGS Website: https://earthquake.usgs.gov/earthquakes/feed/v1.0/csv.php library(data.table) earthquakes &lt;- fread(&quot;https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_month.csv&quot;) head(earthquakes, n=10) ## time latitude longitude depth mag magType nst gap ## &lt;POSc&gt; &lt;num&gt; &lt;num&gt; &lt;num&gt; &lt;num&gt; &lt;char&gt; &lt;int&gt; &lt;num&gt; ## 1: 2024-11-07 17:17:04 36.09100 -117.8747 2.5700 1.17 ml 22 73 ## 2: 2024-11-07 17:10:19 31.58900 -104.5200 3.1292 1.50 ml 16 78 ## 3: 2024-11-07 17:09:09 38.84933 -122.8288 3.5400 0.46 md 13 118 ## 4: 2024-11-07 17:08:46 61.66120 -150.0564 23.8000 1.80 ml NA NA ## 5: 2024-11-07 16:54:07 19.17483 -155.3843 29.5000 2.03 ml 52 178 ## 6: 2024-11-07 16:53:27 38.83216 -122.8825 2.0100 0.93 md 14 129 ## 7: 2024-11-07 16:42:04 -5.70290 154.4274 91.4640 5.20 mww 54 100 ## 8: 2024-11-07 16:40:18 33.15883 -115.9590 6.8000 0.92 ml 21 63 ## 9: 2024-11-07 16:34:28 31.71700 -104.3020 4.8672 1.60 ml 20 63 ## 10: 2024-11-07 16:28:04 32.81400 -116.1745 11.6500 0.89 ml 20 78 ## dmin rms net id updated ## &lt;num&gt; &lt;num&gt; &lt;char&gt; &lt;char&gt; &lt;POSc&gt; ## 1: 0.031000 0.13 ci ci40789391 2024-11-07 17:33:59 ## 2: 0.100000 0.30 tx tx2024vxnl 2024-11-07 17:38:39 ## 3: 0.006828 0.08 nc nc75083596 2024-11-07 17:27:15 ## 4: NA 0.44 ak ak024ec9ugnb 2024-11-07 17:10:06 ## 5: 0.063570 0.14 hv hv74524677 2024-11-07 16:57:01 ## 6: 0.006095 0.03 nc nc75083586 2024-11-07 17:17:17 ## 7: 2.710000 0.77 us us7000nqfp 2024-11-07 17:03:18 ## 8: 0.021470 0.16 ci ci40789359 2024-11-07 17:22:18 ## 9: 0.100000 0.30 tx tx2024vxmg 2024-11-07 17:02:47 ## 10: 0.068770 0.17 ci ci40789335 2024-11-07 17:15:28 ## place type horizontalError ## &lt;char&gt; &lt;char&gt; &lt;num&gt; ## 1: 8 km NE of Coso Junction, CA earthquake 0.18 ## 2: 66 km SSW of Whites City, New Mexico earthquake 0.00 ## 3: 10 km WNW of Cobb, CA earthquake 0.55 ## 4: 9 km S of Willow, Alaska earthquake NA ## 5: 10 km ESE of Pāhala, Hawaii earthquake 0.48 ## 6: 12 km E of Cloverdale, CA earthquake 0.34 ## 7: 135 km WNW of Panguna, Papua New Guinea earthquake 7.36 ## 8: 16 km S of Salton City, CA earthquake 0.23 ## 9: 51 km S of Whites City, New Mexico earthquake 0.00 ## 10: 19 km WNW of Ocotillo, CA earthquake 0.32 ## depthError magError magNst status locationSource magSource ## &lt;num&gt; &lt;num&gt; &lt;int&gt; &lt;char&gt; &lt;char&gt; &lt;char&gt; ## 1: 0.190000 0.099 10 reviewed ci ci ## 2: 1.770136 0.100 13 automatic tx tx ## 3: 1.660000 0.300 14 automatic nc nc ## 4: 0.200000 NA NA automatic ak ak ## 5: 0.590000 0.920 6 automatic hv hv ## 6: 0.470000 0.190 17 automatic nc nc ## 7: 6.862000 0.071 19 reviewed us us ## 8: 0.370000 0.101 10 reviewed ci ci ## 9: 1.187781 0.200 16 automatic tx tx ## 10: 0.670000 0.134 13 reviewed ci ci 17.3 Si bajo los datos a mi computadora Use esta alternativa si bajo los datos a su computadora #library(readr) #Earthquake_all_month &lt;- read_csv(&quot;Datos/Earthquake_all_month.csv&quot;) #EQ=Earthquake_all_month #head(EQ, n=10) names(earthquakes) ## [1] &quot;time&quot; &quot;latitude&quot; &quot;longitude&quot; &quot;depth&quot; ## [5] &quot;mag&quot; &quot;magType&quot; &quot;nst&quot; &quot;gap&quot; ## [9] &quot;dmin&quot; &quot;rms&quot; &quot;net&quot; &quot;id&quot; ## [13] &quot;updated&quot; &quot;place&quot; &quot;type&quot; &quot;horizontalError&quot; ## [17] &quot;depthError&quot; &quot;magError&quot; &quot;magNst&quot; &quot;status&quot; ## [21] &quot;locationSource&quot; &quot;magSource&quot; str(earthquakes) ## Classes &#39;data.table&#39; and &#39;data.frame&#39;: 8025 obs. of 22 variables: ## $ time : POSIXct, format: &quot;2024-11-07 17:17:04&quot; &quot;2024-11-07 17:10:19&quot; ... ## $ latitude : num 36.1 31.6 38.8 61.7 19.2 ... ## $ longitude : num -118 -105 -123 -150 -155 ... ## $ depth : num 2.57 3.13 3.54 23.8 29.5 ... ## $ mag : num 1.17 1.5 0.46 1.8 2.03 0.93 5.2 0.92 1.6 0.89 ... ## $ magType : chr &quot;ml&quot; &quot;ml&quot; &quot;md&quot; &quot;ml&quot; ... ## $ nst : int 22 16 13 NA 52 14 54 21 20 20 ... ## $ gap : num 73 78 118 NA 178 129 100 63 63 78 ... ## $ dmin : num 0.031 0.1 0.00683 NA 0.06357 ... ## $ rms : num 0.13 0.3 0.08 0.44 0.14 ... ## $ net : chr &quot;ci&quot; &quot;tx&quot; &quot;nc&quot; &quot;ak&quot; ... ## $ id : chr &quot;ci40789391&quot; &quot;tx2024vxnl&quot; &quot;nc75083596&quot; &quot;ak024ec9ugnb&quot; ... ## $ updated : POSIXct, format: &quot;2024-11-07 17:33:59&quot; &quot;2024-11-07 17:38:39&quot; ... ## $ place : chr &quot;8 km NE of Coso Junction, CA&quot; &quot;66 km SSW of Whites City, New Mexico&quot; &quot;10 km WNW of Cobb, CA&quot; &quot;9 km S of Willow, Alaska&quot; ... ## $ type : chr &quot;earthquake&quot; &quot;earthquake&quot; &quot;earthquake&quot; &quot;earthquake&quot; ... ## $ horizontalError: num 0.18 0 0.55 NA 0.48 0.34 7.36 0.23 0 0.32 ... ## $ depthError : num 0.19 1.77 1.66 0.2 0.59 ... ## $ magError : num 0.099 0.1 0.3 NA 0.92 0.19 0.071 0.101 0.2 0.134 ... ## $ magNst : int 10 13 14 NA 6 17 19 10 16 13 ... ## $ status : chr &quot;reviewed&quot; &quot;automatic&quot; &quot;automatic&quot; &quot;automatic&quot; ... ## $ locationSource : chr &quot;ci&quot; &quot;tx&quot; &quot;nc&quot; &quot;ak&quot; ... ## $ magSource : chr &quot;ci&quot; &quot;tx&quot; &quot;nc&quot; &quot;ak&quot; ... ## - attr(*, &quot;.internal.selfref&quot;)=&lt;externalptr&gt; 17.4 Importación de Paquetes y Datos library(tidyverse) library(leaflet) #library(rinat) library(RColorBrewer) library(flextable) Seleccionar un subgrupo de los datos, solamente lo primeros 100 datos nrow(earthquakes) ## [1] 8025 EQ_100 = earthquakes |&gt; slice(1:100) head(EQ_100) ## time latitude longitude depth mag magType nst gap ## &lt;POSc&gt; &lt;num&gt; &lt;num&gt; &lt;num&gt; &lt;num&gt; &lt;char&gt; &lt;int&gt; &lt;num&gt; ## 1: 2024-11-07 17:17:04 36.09100 -117.8747 2.5700 1.17 ml 22 73 ## 2: 2024-11-07 17:10:19 31.58900 -104.5200 3.1292 1.50 ml 16 78 ## 3: 2024-11-07 17:09:09 38.84933 -122.8288 3.5400 0.46 md 13 118 ## 4: 2024-11-07 17:08:46 61.66120 -150.0564 23.8000 1.80 ml NA NA ## 5: 2024-11-07 16:54:07 19.17483 -155.3843 29.5000 2.03 ml 52 178 ## 6: 2024-11-07 16:53:27 38.83216 -122.8825 2.0100 0.93 md 14 129 ## dmin rms net id updated ## &lt;num&gt; &lt;num&gt; &lt;char&gt; &lt;char&gt; &lt;POSc&gt; ## 1: 0.031000 0.13 ci ci40789391 2024-11-07 17:33:59 ## 2: 0.100000 0.30 tx tx2024vxnl 2024-11-07 17:38:39 ## 3: 0.006828 0.08 nc nc75083596 2024-11-07 17:27:15 ## 4: NA 0.44 ak ak024ec9ugnb 2024-11-07 17:10:06 ## 5: 0.063570 0.14 hv hv74524677 2024-11-07 16:57:01 ## 6: 0.006095 0.03 nc nc75083586 2024-11-07 17:17:17 ## place type horizontalError depthError ## &lt;char&gt; &lt;char&gt; &lt;num&gt; &lt;num&gt; ## 1: 8 km NE of Coso Junction, CA earthquake 0.18 0.190000 ## 2: 66 km SSW of Whites City, New Mexico earthquake 0.00 1.770136 ## 3: 10 km WNW of Cobb, CA earthquake 0.55 1.660000 ## 4: 9 km S of Willow, Alaska earthquake NA 0.200000 ## 5: 10 km ESE of Pāhala, Hawaii earthquake 0.48 0.590000 ## 6: 12 km E of Cloverdale, CA earthquake 0.34 0.470000 ## magError magNst status locationSource magSource ## &lt;num&gt; &lt;int&gt; &lt;char&gt; &lt;char&gt; &lt;char&gt; ## 1: 0.099 10 reviewed ci ci ## 2: 0.100 13 automatic tx tx ## 3: 0.300 14 automatic nc nc ## 4: NA NA automatic ak ak ## 5: 0.920 6 automatic hv hv ## 6: 0.190 17 automatic nc nc 17.5 Mapa básico con Leaflet leaflet(earthquakes) %&gt;% addTiles() %&gt;% addCircleMarkers(lng = ~longitude, lat = ~latitude, popup = ~mag, color= ~(type)) #unique(earthquakes$type) #color= ~(type), 17.6 Usando la paletas de color de viridis https://cran.r-project.org/web/packages/viridis/vignettes/intro-to-viridis.html Evaluar las siguientes paletas de colores: viridis inferno plasma magma cividis rocket turbo Pasos Seleccionar los datos en el áreas de PR, latitud y longitud Crear una paleta de colores/ o usar viridis Crear un mapa con los datos de los terremotos names(EQ_100) unique(EQ_100$type) pal = colorFactor(palette = &quot;magma≠&quot;, domain = NULL) leaflet(EQ_100) %&gt;% addTiles() %&gt;% addCircleMarkers(lng = ~longitude, lat = ~latitude, color= ~pal(mag), popup = ~mag ) 17.7 Trabajando con datos de iNaturalist 17.7.1 AHora crea un mapa de los terremotos alrededor de Puerto Rico Obtener los datos de observaciones de una especie en iNaturalist desde R: Los datos a utilizar se obtendrán desde iNaturalist, una aplicación con base en la ciencia ciudadana que mantiene un registro de ocurrencias de especies. La función get_inat_obs() permite acceder a los datos disponibles en iNaturalist, especificando los siguientes parámetros: taxon_name: La especies de interés, siempre escrita entre comillas (“). Puede utilizar nombre común o científico. quality: Siendo una aplicación basada en ciencia ciudadana, la calidad de algunos datos podría ser baja, debido a que les falta información - como nombre científico o ubicación - o que contienen información errónea - especies mal identificadas-. Colocando 'research' en este parámetro se especifica que se desea obtener sólo aquellas observaciones con alta calidad - que tengan información completa y cuya identificación haya sido confirmada por varias personas de la comunidad -. geo: Al igual que el parámetro quality, este parámetro cuyo valor es lógico (TRUE o FALSE), es para especificar que se quiere obtener sólo los datos que están georeferenciados (cuando se coloca como TRUE). maxresults: A través del API (Interfaz de Programación de Aplicaciones) de iNaturalist se puede acceder a un máximo de 10,000 observaciones en una sola búsqueda. Con este parámetro, cuyo valor debe ser numérico, se especifica cuantas observaciones se desea obtener, y no se debe exceder de 10,000 por búsqueda. bounds: Un vector que contiene los límites geográficos de la búsqueda. Se puede insertar un cuadro delimitador ya especificado en un objeto, concatenar los valores del vector, o insertar un objeto de características simples (Simple Feature, sf). El argumento bounds es importante porque si obtenemos datos de iNaturalist, las únicas columnas que obtenemos con información acerca de la región o área donde se hicieron las observaciones son: place_guess: Contiene el nombre de la región, pero su precisión y los nombres utilizados para cada región varía mucho. latitue: Posición en el eje vertical del sistema de coordenadas. longitude: Posición en el eje horizontal del sistema de coordenadas. Esto crea un problema a la hora del filtrar los datos por el nombre de una región, pues es difícil encontrar un solo valor que encompase a todas las variantes del nombre utilizado para esa región. iNaturalist se encuentra a nivel mundial, y usted puede acceder a todos esos datos. Sin embargo, hoy accederemos solamente a datos de Puerto Rico. Entonces, lo primero antes de acceder a lo datos de iNaturalist, es crear un objeto que contenga los límites geográficos de interés crea. Para esto se crea un objeto que contenga un cuadro delimitador (bounding box): cajapr &lt;- c( 17.75, #Latitud Sur -67.4, #Longitud Oeste 18.75, #Latitud Norte -65.15 #Longitud Este ) cajapr library(rinat) Ahora podemos acceder a datos de Puerto Rico utilizando el objeto cajapr. Para este ejercicio utilizaremos datos de orquídeas pertenecientes al género Eulophia. En Puerto Rico se han reportado 3 especies de este género Eulophia alta, Eulophia maculata y Eulophia graminea. De estos, sólo E. alta es considerada nativa de la isla. Entonces, utilizando la función get_inat_obs podemos acceder a los datos de Eulophia en Puerto Rico eulophia &lt;- get_inat_obs(taxon_name = &quot;Eulophia&quot;, quality = &#39;research&#39;, geo = T, maxresults = 1000, bounds = cajapr) eulophia$scientific_name &lt;- as.factor(eulophia$scientific_name) flextable(head(eulophia)) # Para ver las primeras 6 lineas en una tabla bonita bounds = cajapr Con el siguiente código podemos ver de forma rápida cuántas observaciones de cada especie hemos obtenido de iNaturalist: summary(as.factor(eulophia$scientific_name)) Ahora que hemos obtenido los datos, podemos observar su distribución en el mapa de Puerto Rico utilizando leaflet. 17.8 Utilizando Leaflet La función base del paquete leaflet es leaflet(), con esta se activa un artilugio (widget en inglés) sobre el cuál se construye el mapa. Esta función debe estar unida a otra función como addTiles() que añade el mapa. leaflet() %&gt;% addTiles() Una vez tenemos el artilugio y el mapa, añadimos una capa que incluye los datos que se desean visualizar con marcadores sobre el mapa con la función addMarkers() dentro del cual se deben especificar los parámetros lng (longitud) y lat (latitud). Note que también se especifica el data.frame que contiene los datos bajo la función leaflet(). Cuando se trabaja en Leaflet, al especificar las variables a utilizar, es necesario colocar una virgulilla (~) antes de la variable. Esto le deja saber a R que lo que se especifica es una variable dentro del data.frame mencionado en la primera capa bajo la función leaflet(). names(eulophia) leaflet(eulophia) %&gt;% addTiles() %&gt;% addMarkers(lng = ~longitude, lat = ~latitude) Una vez los marcadores están establecidos, es posible añadir etiquetas que contengan información acerca de las observaciones con el parámetro popup de la función addMarkers(). Por ejemplo, se pueden colocar etiquetas que contengan información del lugar de la observación especificando que la etiqueta contenga la información de la variable place_guess. Para ver la etiqueta debe hacer clic sobre el marcador de interés. names(eulophia) leaflet(eulophia) %&gt;% addTiles() %&gt;% addMarkers(lng = ~ longitude, lat = ~ latitude, popup = ~ place_guess) # cambiar a la variable de interes La función paste0 es una función base de R que concatena todos los elementos en una línea de caracteres. Los caracteres introducidos serán interpretados como UTF-8 o codificación de caracteres. Estos caracteres pueden ser mezclados con valores de una variable de caracteres en un data.frame. En el siguiente ejemplo se crea una etiqueta que contiene la ubicación y la especie observada. Se utiliza la función paste0() para combinar caracteres y las variables scientific_name y place_guess del data.frame. leaflet(eulophia) %&gt;% addTiles() %&gt;% addMarkers(lng = ~ longitude, lat = ~ latitude, popup = paste0(&quot;&lt;B&gt;Especie: &lt;/B&gt;&quot;, &quot;&lt;I&gt;&quot;, eulophia$scientific_name, &quot;&lt;/I&gt;&quot;, &quot;&lt;br/&gt;&quot;, &quot;&lt;B&gt;Colectado donde: &lt;/B&gt;&quot;, eulophia$place_guess) ) La función addAwesomeMarkers() puede ser utilizada en lugar de addMarkers() y permite utilizar marcadores con diferentes diseños que se pueden obtener de fontawesome. Es posible cambiar los colores de los marcadores utilizando la codificación de colores RGB en formato (#RRGGBB). La siguiente guía de colores en R creada por Melissa Clarkson (2010) explica como utilizar colores en R: A guide to using color in R. Adicional, esta guía creada por Derek H. Ogle (2022) es muy útil. En schemecolor podemos encontrar las codificaciones de los colores y muchos funcionan para leaflet. Para hacer estos cambios utilizamos la función awesomeIcons() bajo el parámetro icon dentro de addAwesomeMarkers(). Dentro de la función awesomeIcons() podemos especificar varios parámetros como: icon: El icono que desea utilizar para su marcador. Debe poner el nombre que aparece en la página web de iconos que esté utilizando (i.e., fontawesome). library: Cuando se especifica un icono, es necesario especificar la biblioteca de donde se saca el icono. Si es de fontawesome sería 'fa'. markerColor: Para cambiar el color del marcador (parte que rodea el icono), utilizando la codificación de colores de schemecolor. iconColor: Para cambiar el color del icono del marcadora, también con la codificación de schemecolor. leaflet() %&gt;% addTiles() %&gt;% addAwesomeMarkers(lng = eulophia$longitude, lat = eulophia$latitude, popup = paste0(&quot;&lt;B&gt;Especie: &lt;/B&gt;&quot;, &quot;&lt;I&gt;&quot;, eulophia$scientific_name, &quot;&lt;/I&gt;&quot;, &quot;&lt;br/&gt;&quot;, &quot;&lt;B&gt;Colectado por: &lt;/B&gt;&quot;, eulophia$place_guess), icon = awesomeIcons(icon = &quot;leaf&quot;, library = &quot;fa&quot;, markerColor = &quot;darkgreen&quot;, iconColor = &quot;#FFFFFF&quot;) ) Cuando se visualiza una gran cantidad de datos, esto puede resultar en el solapamiento de los marcadores, lo cual no es muy agradable a la vista. Es posible crear agregados que ayuden a visualizar mejor y faciliten el movimiento a través del mapa con el parámetro clusterOptions bajo la función addAwesomeMarkers(). El valor de este parámetro debe ser la función markerClusterOptions(). leaflet() %&gt;% addTiles() %&gt;% addAwesomeMarkers(lng = eulophia$longitude, lat = eulophia$latitude, popup = paste0(&quot;&lt;B&gt;Especie: &lt;/B&gt;&quot;, &quot;&lt;I&gt;&quot;, eulophia$scientific_name, &quot;&lt;/I&gt;&quot;, &quot;&lt;br/&gt;&quot;, &quot;&lt;B&gt;Colectado por: &lt;/B&gt;&quot;, eulophia$place_guess), icon = awesomeIcons(icon = &quot;leaf&quot;, library = &quot;fa&quot;, markerColor = &quot;darkgreen&quot;, iconColor = &quot;#FFFFFF&quot;), clusterOptions = markerClusterOptions() ) Y para culminar, es posible cambiar el diseño del mapa utilizando la función addProviderTiles() en lugar de addTiles(). Puede echar un vistazo a los diferentes diseños disponibles para Leaflet la página de proveedores de Leaflet en GitHub. Actualmente Leaflet en R admite diseños de los siguientes proveedores: OpenStreetMap, MapQuestOpen, Stamen, Esri and OpenWeatherMap. icon1 &lt;- awesomeIcons(icon = &quot;smile-o&quot;, iconColor = &quot;#FFFFFF&quot;, library = &quot;fa&quot;, markerColor = &quot;darkgreen&quot;) leaflet() %&gt;% addProviderTiles(&quot;Esri.WorldImagery&quot;) %&gt;% addAwesomeMarkers(lng = eulophia$longitude, lat = eulophia$latitude, popup = paste0(&quot;&lt;B&gt;Especie: &lt;/B&gt;&quot;, &quot;&lt;I&gt;&quot;, eulophia$scientific_name, &quot;&lt;/I&gt;&quot;, &quot;&lt;br/&gt;&quot;, &quot;&lt;B&gt;Colectado por: &lt;/B&gt;&quot;, eulophia$place_guess), icon = icon1 ) 17.9 Trabajando Variables Categóricas con Leaflet: Es posible distinguir entre especies utilizando diferentes colores, pero debe utilizar la función addCircleMarkers() en lugar de addAwesomeMarkers(). Para colorear grupos en Leaflet es necesario generar una paleta de colores para las variables de interés de acuerdo al tipo de variable (i.e., numérica, factorial). Para esto se utilizan las funciones colorFactor(), colorNumeric(), colorBin(), o colorQuantile(). colorFactor() y colorNumeric() generan paletas de colores para variables factoriales y numericas, respectivamente; mientras que colorBin() y colorQuantile() generan paletas de colores para valores numéricos resumidos en grupos. En este caso se está trabajando con una variable factorial que divide las observaciones entre 3 especies de orquídeas. Primero se crea una paleta de colores para una variable factorial con la función colorFactor(). Bajo esta función se especifican los parámetros palette y levels. palettees para especificar la paleta de colores a utilizar y levelsespecifica los niveles de la variable factorial. La paleta de colores que se utiliza (\"Dark2\") proviene del paquete RColorBrewer. Esta paleta de colores para los niveles de la variable factorial scientific_name del data.frame eulophia se guardará en un objeto llamado pal. mypal &lt;- colorFactor(palette = &#39;Set3&#39;, levels = levels(eulophia$scientific_name)) eulophia$scientific_name=as.factor(eulophia$scientific_name) mypal &lt;- colorFactor(palette = &#39;Set3&#39;, levels = levels(eulophia$scientific_name)) Ahora que se ha especificado los colores para los valores factoriales, es posible utilizar el objeto pal para colorear los marcadores circulares del mapa de Leaflet de acuerdo a la especie observada especificando el parámetro color leaflet(eulophia) %&gt;% addTiles() %&gt;% addCircleMarkers(lng = ~ longitude, lat = ~ latitude, popup = paste0(&quot;&lt;B&gt;Especie: &lt;/B&gt;&quot;, &quot;&lt;I&gt;&quot;, eulophia$scientific_name, &quot;&lt;/I&gt;&quot;, &quot;&lt;br/&gt;&quot;, &quot;&lt;B&gt;Colectado por: &lt;/B&gt;&quot;, eulophia$place_guess), color = ~ mypal(scientific_name)) Para ayudar con la visualización de datos pertenecientes a diferentes grupos, en ocasiones es bueno presentar una leyenda que indique los colores que representan cada grupo. Es posible añadir una leyenda al mapa de Leaflet utilizando la función addLegend() y especificando los siguientes parámetros: position: Para determinar la posición de la leyenda, en este caso se colocará en la parte superior derecha, \"topright\", del mapa, pero podría colocarla en la parte inferior derecha (\"bottomright\"), la parte inferior izquierda (\"bottomleft\"), o la parte superior izquierda (\"topleft\"). pal: La paleta de colores a utilizar generada a través de la función colorFactor() o sus equivalentes (i.e., colorNumeric()) values: Los valores o la variable u objeto que contiene los valores utilizados. title: El título de la leyenda especificado como una línea de caracteres. leaflet(eulophia) %&gt;% addTiles() %&gt;% addCircleMarkers(lng = ~ longitude, lat = ~ latitude, popup = paste0(&quot;&lt;B&gt;Especie: &lt;/B&gt;&quot;, &quot;&lt;I&gt;&quot;, eulophia$scientific_name, &quot;&lt;/I&gt;&quot;, &quot;&lt;br/&gt;&quot;, &quot;&lt;B&gt;Colectado por: &lt;/B&gt;&quot;, eulophia$place_guess), color = ~ pal(scientific_name)) %&gt;% addLegend(position = &quot;topright&quot;, pal = pal, values = ~ scientific_name, title = &quot;Species&quot; ) iconcolor &lt;- function(scienctific_name) leaflet() %&gt;% addProviderTiles(&quot;Esri.WorldImagery&quot;) %&gt;% addAwesomeMarkers(lng = eulophia$longitude, lat = eulophia$latitude, popup = paste0(&quot;&lt;B&gt;Especie: &lt;/B&gt;&quot;, &quot;&lt;I&gt;&quot;, eulophia$scientific_name, &quot;&lt;/I&gt;&quot;, &quot;&lt;br/&gt;&quot;, &quot;&lt;B&gt;Colectado por: &lt;/B&gt;&quot;, eulophia$place_guess), icon = icon1 ) L.circleMarker([place.lon, place.lat], { color: getColor(place.constructdate), // you can call the getColor function fillColor: getColor(place.constructdate), fillOpacity: 0.5 }) "],["datos-relacionados.html", "Capítulo18 Datos Relacionados 18.1 Temas: Datos Relacionados 18.2 Claves 18.3 Uniones de transformaciones 18.4 Entendiendo las uniones 18.5 Definiendo las columnas clave 18.6 Otras implementaciones 18.7 Uniones de filtro 18.8 Problemas con las uniones", " Capítulo18 Datos Relacionados Fecha de la ultima revisión ## [1] &quot;2024-11-07&quot; El tema proviene de los siguientes sitios. English: https://r4ds.had.co.nz/relational-data.html Español: https://es.r4ds.hadley.nz/13-relational-data.html library(tidyverse) library(datos) vuelos # data set #1 ## # A tibble: 336,776 × 19 ## anio mes dia horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2 ## 2 2013 1 1 533 529 4 ## 3 2013 1 1 542 540 2 ## 4 2013 1 1 544 545 -1 ## 5 2013 1 1 554 600 -6 ## 6 2013 1 1 554 558 -4 ## 7 2013 1 1 555 600 -5 ## 8 2013 1 1 557 600 -3 ## 9 2013 1 1 557 600 -3 ## 10 2013 1 1 558 600 -2 ## # ℹ 336,766 more rows ## # ℹ 13 more variables: horario_llegada &lt;int&gt;, llegada_programada &lt;int&gt;, ## # atraso_llegada &lt;dbl&gt;, aerolinea &lt;chr&gt;, vuelo &lt;int&gt;, codigo_cola &lt;chr&gt;, ## # origen &lt;chr&gt;, destino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, distancia &lt;dbl&gt;, ## # hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt; names(vuelos) ## [1] &quot;anio&quot; &quot;mes&quot; &quot;dia&quot; ## [4] &quot;horario_salida&quot; &quot;salida_programada&quot; &quot;atraso_salida&quot; ## [7] &quot;horario_llegada&quot; &quot;llegada_programada&quot; &quot;atraso_llegada&quot; ## [10] &quot;aerolinea&quot; &quot;vuelo&quot; &quot;codigo_cola&quot; ## [13] &quot;origen&quot; &quot;destino&quot; &quot;tiempo_vuelo&quot; ## [16] &quot;distancia&quot; &quot;hora&quot; &quot;minuto&quot; ## [19] &quot;fecha_hora&quot; aerolineas # data set #2 ## # A tibble: 16 × 2 ## aerolinea nombre ## &lt;chr&gt; &lt;chr&gt; ## 1 9E Endeavor Air Inc. ## 2 AA American Airlines Inc. ## 3 AS Alaska Airlines Inc. ## 4 B6 JetBlue Airways ## 5 DL Delta Air Lines Inc. ## 6 EV ExpressJet Airlines Inc. ## 7 F9 Frontier Airlines Inc. ## 8 FL AirTran Airways Corporation ## 9 HA Hawaiian Airlines Inc. ## 10 MQ Envoy Air ## 11 OO SkyWest Airlines Inc. ## 12 UA United Air Lines Inc. ## 13 US US Airways Inc. ## 14 VX Virgin America ## 15 WN Southwest Airlines Co. ## 16 YV Mesa Airlines Inc. names(aerolineas) ## [1] &quot;aerolinea&quot; &quot;nombre&quot; aeropuertos ## # A tibble: 1,458 × 8 ## codigo_aeropuerto nombre latitud longitud altura zona_horaria horario_verano ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 04G Lansdo… 41.1 -80.6 1044 -5 A ## 2 06A Moton … 32.5 -85.7 264 -6 A ## 3 06C Schaum… 42.0 -88.1 801 -6 A ## 4 06N Randal… 41.4 -74.4 523 -5 A ## 5 09J Jekyll… 31.1 -81.4 11 -5 A ## 6 0A9 Elizab… 36.4 -82.2 1593 -5 A ## 7 0G6 Willia… 41.5 -84.5 730 -5 A ## 8 0G7 Finger… 42.9 -76.8 492 -5 A ## 9 0P2 Shoest… 39.8 -76.6 1000 -5 U ## 10 0S9 Jeffer… 48.1 -123. 108 -8 A ## # ℹ 1,448 more rows ## # ℹ 1 more variable: zona_horaria_iana &lt;chr&gt; names(aeropuertos) ## [1] &quot;codigo_aeropuerto&quot; &quot;nombre&quot; &quot;latitud&quot; ## [4] &quot;longitud&quot; &quot;altura&quot; &quot;zona_horaria&quot; ## [7] &quot;horario_verano&quot; &quot;zona_horaria_iana&quot; aviones ## # A tibble: 3,322 × 9 ## codigo_cola anio tipo fabricante modelo motores asientos velocidad ## &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; ## 1 N10156 2004 Ala fija mult… EMBRAER EMB-1… 2 55 NA ## 2 N102UW 1998 Ala fija mult… AIRBUS IN… A320-… 2 182 NA ## 3 N103US 1999 Ala fija mult… AIRBUS IN… A320-… 2 182 NA ## 4 N104UW 1999 Ala fija mult… AIRBUS IN… A320-… 2 182 NA ## 5 N10575 2002 Ala fija mult… EMBRAER EMB-1… 2 55 NA ## 6 N105UW 1999 Ala fija mult… AIRBUS IN… A320-… 2 182 NA ## 7 N107US 1999 Ala fija mult… AIRBUS IN… A320-… 2 182 NA ## 8 N108UW 1999 Ala fija mult… AIRBUS IN… A320-… 2 182 NA ## 9 N109UW 1999 Ala fija mult… AIRBUS IN… A320-… 2 182 NA ## 10 N110UW 1999 Ala fija mult… AIRBUS IN… A320-… 2 182 NA ## # ℹ 3,312 more rows ## # ℹ 1 more variable: tipo_motor &lt;chr&gt; clima ## # A tibble: 26,115 × 15 ## origen anio mes dia hora temperatura punto_rocio humedad ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 EWR 2013 1 1 1 39.0 26.1 59.4 ## 2 EWR 2013 1 1 2 39.0 27.0 61.6 ## 3 EWR 2013 1 1 3 39.0 28.0 64.4 ## 4 EWR 2013 1 1 4 39.9 28.0 62.2 ## 5 EWR 2013 1 1 5 39.0 28.0 64.4 ## 6 EWR 2013 1 1 6 37.9 28.0 67.2 ## 7 EWR 2013 1 1 7 39.0 28.0 64.4 ## 8 EWR 2013 1 1 8 39.9 28.0 62.2 ## 9 EWR 2013 1 1 9 39.9 28.0 62.2 ## 10 EWR 2013 1 1 10 41 28.0 59.6 ## # ℹ 26,105 more rows ## # ℹ 7 more variables: direccion_viento &lt;dbl&gt;, velocidad_viento &lt;dbl&gt;, ## # velocidad_rafaga &lt;dbl&gt;, precipitacion &lt;dbl&gt;, presion &lt;dbl&gt;, ## # visibilidad &lt;dbl&gt;, fecha_hora &lt;dttm&gt; vuelos ## # A tibble: 336,776 × 19 ## anio mes dia horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2 ## 2 2013 1 1 533 529 4 ## 3 2013 1 1 542 540 2 ## 4 2013 1 1 544 545 -1 ## 5 2013 1 1 554 600 -6 ## 6 2013 1 1 554 558 -4 ## 7 2013 1 1 555 600 -5 ## 8 2013 1 1 557 600 -3 ## 9 2013 1 1 557 600 -3 ## 10 2013 1 1 558 600 -2 ## # ℹ 336,766 more rows ## # ℹ 13 more variables: horario_llegada &lt;int&gt;, llegada_programada &lt;int&gt;, ## # atraso_llegada &lt;dbl&gt;, aerolinea &lt;chr&gt;, vuelo &lt;int&gt;, codigo_cola &lt;chr&gt;, ## # origen &lt;chr&gt;, destino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, distancia &lt;dbl&gt;, ## # hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt; aviones ## # A tibble: 3,322 × 9 ## codigo_cola anio tipo fabricante modelo motores asientos velocidad ## &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; ## 1 N10156 2004 Ala fija mult… EMBRAER EMB-1… 2 55 NA ## 2 N102UW 1998 Ala fija mult… AIRBUS IN… A320-… 2 182 NA ## 3 N103US 1999 Ala fija mult… AIRBUS IN… A320-… 2 182 NA ## 4 N104UW 1999 Ala fija mult… AIRBUS IN… A320-… 2 182 NA ## 5 N10575 2002 Ala fija mult… EMBRAER EMB-1… 2 55 NA ## 6 N105UW 1999 Ala fija mult… AIRBUS IN… A320-… 2 182 NA ## 7 N107US 1999 Ala fija mult… AIRBUS IN… A320-… 2 182 NA ## 8 N108UW 1999 Ala fija mult… AIRBUS IN… A320-… 2 182 NA ## 9 N109UW 1999 Ala fija mult… AIRBUS IN… A320-… 2 182 NA ## 10 N110UW 1999 Ala fija mult… AIRBUS IN… A320-… 2 182 NA ## # ℹ 3,312 more rows ## # ℹ 1 more variable: tipo_motor &lt;chr&gt; aviones %&gt;% count(codigo_cola) %&gt;% filter(n &gt; 1) ## # A tibble: 0 × 2 ## # ℹ 2 variables: codigo_cola &lt;chr&gt;, n &lt;int&gt; 18.1 Temas: Datos Relacionados mutating joins filtering joins operations 18.1.1 Los datos de vuelos Ejercicios: Hacer los ejercicios en la sección 13.2.1 del libro en español 18.2 Claves Ejercicios: Hacer los ejercicios en la sección 13.3.1 del libro en español Identify the keys in the following datasets Lahman::Batting, babynames::babynames nasaweather::atmos fueleconomy::vehicles ggplot2::diamonds head(Lahman::Batting) ## playerID yearID stint teamID lgID G AB R H X2B X3B HR RBI SB CS BB SO IBB ## 1 aardsda01 2004 1 SFN NL 11 0 0 0 0 0 0 0 0 0 0 0 0 ## 2 aardsda01 2006 1 CHN NL 45 2 0 0 0 0 0 0 0 0 0 0 0 ## 3 aardsda01 2007 1 CHA AL 25 0 0 0 0 0 0 0 0 0 0 0 0 ## 4 aardsda01 2008 1 BOS AL 47 1 0 0 0 0 0 0 0 0 0 1 0 ## 5 aardsda01 2009 1 SEA AL 73 0 0 0 0 0 0 0 0 0 0 0 0 ## 6 aardsda01 2010 1 SEA AL 53 0 0 0 0 0 0 0 0 0 0 0 0 ## HBP SH SF GIDP ## 1 0 0 0 0 ## 2 0 1 0 0 ## 3 0 0 0 0 ## 4 0 0 0 0 ## 5 0 0 0 0 ## 6 0 0 0 0 head(datos::bateadores) ## id_jugador id_anio orden_equipos id_equipo id_liga juegos al_bate carreras ## 1 aardsda01 2004 1 SFN NL 11 0 0 ## 2 aardsda01 2006 1 CHN NL 45 2 0 ## 3 aardsda01 2007 1 CHA AL 25 0 0 ## 4 aardsda01 2008 1 BOS AL 47 1 0 ## 5 aardsda01 2009 1 SEA AL 73 0 0 ## 6 aardsda01 2010 1 SEA AL 53 0 0 ## golpes dobles triples cuadrangulares carreras_empujadas bases_robadas ## 1 0 0 0 0 0 0 ## 2 0 0 0 0 0 0 ## 3 0 0 0 0 0 0 ## 4 0 0 0 0 0 0 ## 5 0 0 0 0 0 0 ## 6 0 0 0 0 0 0 ## atrapado_robando base_bolas ponches base_intencional golpeado ## 1 0 0 0 0 0 ## 2 0 0 0 0 0 ## 3 0 0 0 0 0 ## 4 0 0 1 0 0 ## 5 0 0 0 0 0 ## 6 0 0 0 0 0 ## toque_sacrificio elavado_sacrificio doble_matanza ## 1 0 0 0 ## 2 1 0 0 ## 3 0 0 0 ## 4 0 0 0 ## 5 0 0 0 ## 6 0 0 0 Lahman::Batting %&gt;% count(playerID) %&gt;% filter(n&gt;1) |&gt; head() ## playerID n ## 1 aardsda01 9 ## 2 aaronha01 23 ## 3 aaronto01 7 ## 4 aasedo01 13 ## 5 abadan01 3 ## 6 abadfe01 12 bateadores %&gt;% count(id_jugador,id_anio,orden_equipos) %&gt;% filter(n &gt; 1) |&gt; head() ## [1] id_jugador id_anio orden_equipos n ## &lt;0 rows&gt; (or 0-length row.names) Lahman::Batting %&gt;% count(playerID, yearID, stint) %&gt;% filter(n&gt;1) |&gt; head() ## [1] playerID yearID stint n ## &lt;0 rows&gt; (or 0-length row.names) #babynames::babynames babynames::babynames %&gt;% count(year, name, sex) %&gt;% filter(n&gt;1) ## # A tibble: 0 × 4 ## # ℹ 4 variables: year &lt;dbl&gt;, name &lt;chr&gt;, sex &lt;chr&gt;, n &lt;int&gt; Cual fue el primer año que su nombre aparece en la base de datos babynames::babynames %&gt;% filter(name ==&quot;Abimelys&quot;) ## # A tibble: 0 × 5 ## # ℹ 5 variables: year &lt;dbl&gt;, sex &lt;chr&gt;, name &lt;chr&gt;, n &lt;int&gt;, prop &lt;dbl&gt; max(babynames::babynames$year) ## [1] 2017 nasaweather::atmos ## # A tibble: 41,472 × 11 ## lat long year month surftemp temp pressure ozone cloudlow cloudmid ## &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 36.2 -114. 1995 1 273. 272. 835 304 7.5 34.5 ## 2 33.7 -114. 1995 1 280. 282. 940 304 11.5 32.5 ## 3 31.2 -114. 1995 1 285. 285. 960 298 16.5 26 ## 4 28.7 -114. 1995 1 289. 291. 990 276 20.5 14.5 ## 5 26.2 -114. 1995 1 292. 293. 1000 274 26 10.5 ## 6 23.7 -114. 1995 1 294. 294. 1000 264 30 9.5 ## 7 21.2 -114. 1995 1 295 295. 1000 258 29.5 11 ## 8 18.7 -114. 1995 1 298. 297. 1000 252 26.5 17.5 ## 9 16.2 -114. 1995 1 300. 298. 1000 250 27.5 18.5 ## 10 13.7 -114. 1995 1 300. 299. 1000 250 26 16.5 ## # ℹ 41,462 more rows ## # ℹ 1 more variable: cloudhigh &lt;dbl&gt; nasaweather::atmos %&gt;% count(lat, long, year, month) %&gt;% filter(n&gt;1) ## # A tibble: 0 × 5 ## # ℹ 5 variables: lat &lt;dbl&gt;, long &lt;dbl&gt;, year &lt;int&gt;, month &lt;int&gt;, n &lt;int&gt; fueleconomy::vehicles ## # A tibble: 33,442 × 12 ## id make model year class trans drive cyl displ fuel hwy cty ## &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 13309 Acura 2.2CL/3.0CL 1997 Subc… Auto… Fron… 4 2.2 Regu… 26 20 ## 2 13310 Acura 2.2CL/3.0CL 1997 Subc… Manu… Fron… 4 2.2 Regu… 28 22 ## 3 13311 Acura 2.2CL/3.0CL 1997 Subc… Auto… Fron… 6 3 Regu… 26 18 ## 4 14038 Acura 2.3CL/3.0CL 1998 Subc… Auto… Fron… 4 2.3 Regu… 27 19 ## 5 14039 Acura 2.3CL/3.0CL 1998 Subc… Manu… Fron… 4 2.3 Regu… 29 21 ## 6 14040 Acura 2.3CL/3.0CL 1998 Subc… Auto… Fron… 6 3 Regu… 26 17 ## 7 14834 Acura 2.3CL/3.0CL 1999 Subc… Auto… Fron… 4 2.3 Regu… 27 20 ## 8 14835 Acura 2.3CL/3.0CL 1999 Subc… Manu… Fron… 4 2.3 Regu… 29 21 ## 9 14836 Acura 2.3CL/3.0CL 1999 Subc… Auto… Fron… 6 3 Regu… 26 17 ## 10 11789 Acura 2.5TL 1995 Comp… Auto… Fron… 5 2.5 Prem… 23 18 ## # ℹ 33,432 more rows fueleconomy::vehicles %&gt;% count(id) %&gt;% filter(n&gt;1) ## # A tibble: 0 × 2 ## # ℹ 2 variables: id &lt;dbl&gt;, n &lt;int&gt; ggplot2::diamonds ## # A tibble: 53,940 × 10 ## carat cut color clarity depth table price x y z ## &lt;dbl&gt; &lt;ord&gt; &lt;ord&gt; &lt;ord&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 0.23 Ideal E SI2 61.5 55 326 3.95 3.98 2.43 ## 2 0.21 Premium E SI1 59.8 61 326 3.89 3.84 2.31 ## 3 0.23 Good E VS1 56.9 65 327 4.05 4.07 2.31 ## 4 0.29 Premium I VS2 62.4 58 334 4.2 4.23 2.63 ## 5 0.31 Good J SI2 63.3 58 335 4.34 4.35 2.75 ## 6 0.24 Very Good J VVS2 62.8 57 336 3.94 3.96 2.48 ## 7 0.24 Very Good I VVS1 62.3 57 336 3.95 3.98 2.47 ## 8 0.26 Very Good H SI1 61.9 55 337 4.07 4.11 2.53 ## 9 0.22 Fair E VS2 65.1 61 337 3.87 3.78 2.49 ## 10 0.23 Very Good H VS1 59.4 61 338 4 4.05 2.39 ## # ℹ 53,930 more rows ggplot2::diamonds %&gt;% count(carat, cut, color, clarity, depth, price, x, y, z) %&gt;% filter(n&gt;1) ## # A tibble: 283 × 10 ## carat cut color clarity depth price x y z n ## &lt;dbl&gt; &lt;ord&gt; &lt;ord&gt; &lt;ord&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; ## 1 0.23 Very Good E VVS2 60.9 530 3.96 3.99 2.42 2 ## 2 0.24 Very Good E VVS1 61.7 485 3.95 3.99 2.45 2 ## 3 0.24 Very Good G VVS2 62 449 4 4.03 2.49 2 ## 4 0.26 Ideal G SI1 62 394 4.08 4.11 2.54 2 ## 5 0.3 Good J VS1 63.4 394 4.23 4.26 2.69 2 ## 6 0.3 Very Good D SI1 62.5 552 4.26 4.28 2.67 2 ## 7 0.3 Very Good E SI1 62.9 526 4.25 4.3 2.69 2 ## 8 0.3 Very Good E VVS2 61.4 789 4.25 4.28 2.62 2 ## 9 0.3 Very Good G VS2 63 526 4.29 4.31 2.71 2 ## 10 0.3 Very Good H SI1 62.9 421 4.28 4.31 2.7 2 ## # ℹ 273 more rows Draw a diagram illustrating the connections between the Batting, People, and Salaries tables in the Lahman package. Draw another diagram that shows the relationship between People, Managers, AwardsManagers. Dibuja un diagrama que ilustre las conexiones entre las tablas bateadores, personas y salarios incluidas en el paquete datos. Dibuja otro diagrama que muestre la relación entre personas, dirigentes y premios_dirigentes. names(Lahman::Batting) ## [1] &quot;playerID&quot; &quot;yearID&quot; &quot;stint&quot; &quot;teamID&quot; &quot;lgID&quot; &quot;G&quot; ## [7] &quot;AB&quot; &quot;R&quot; &quot;H&quot; &quot;X2B&quot; &quot;X3B&quot; &quot;HR&quot; ## [13] &quot;RBI&quot; &quot;SB&quot; &quot;CS&quot; &quot;BB&quot; &quot;SO&quot; &quot;IBB&quot; ## [19] &quot;HBP&quot; &quot;SH&quot; &quot;SF&quot; &quot;GIDP&quot; names(Lahman::Salaries) ## [1] &quot;yearID&quot; &quot;teamID&quot; &quot;lgID&quot; &quot;playerID&quot; &quot;salary&quot; names(Lahman::People) ## [1] &quot;playerID&quot; &quot;birthYear&quot; &quot;birthMonth&quot; &quot;birthDay&quot; &quot;birthCity&quot; ## [6] &quot;birthCountry&quot; &quot;birthState&quot; &quot;deathYear&quot; &quot;deathMonth&quot; &quot;deathDay&quot; ## [11] &quot;deathCountry&quot; &quot;deathState&quot; &quot;deathCity&quot; &quot;nameFirst&quot; &quot;nameLast&quot; ## [16] &quot;nameGiven&quot; &quot;weight&quot; &quot;height&quot; &quot;bats&quot; &quot;throws&quot; ## [21] &quot;debut&quot; &quot;bbrefID&quot; &quot;finalGame&quot; &quot;retroID&quot; &quot;deathDate&quot; ## [26] &quot;birthDate&quot; 18.3 Uniones de transformaciones mutating join vuelos2 &lt;- vuelos %&gt;% dplyr::select(anio, dia, hora, origen, destino, codigo_cola, aerolinea) vuelos2 ## # A tibble: 336,776 × 7 ## anio dia hora origen destino codigo_cola aerolinea ## &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 2013 1 5 EWR IAH N14228 UA ## 2 2013 1 5 LGA IAH N24211 UA ## 3 2013 1 5 JFK MIA N619AA AA ## 4 2013 1 5 JFK BQN N804JB B6 ## 5 2013 1 6 LGA ATL N668DN DL ## 6 2013 1 5 EWR ORD N39463 UA ## 7 2013 1 6 EWR FLL N516JB B6 ## 8 2013 1 6 LGA IAD N829AS EV ## 9 2013 1 6 JFK MCO N593JB B6 ## 10 2013 1 6 LGA ORD N3ALAA AA ## # ℹ 336,766 more rows names(aerolineas) ## [1] &quot;aerolinea&quot; &quot;nombre&quot; aerolineas ## # A tibble: 16 × 2 ## aerolinea nombre ## &lt;chr&gt; &lt;chr&gt; ## 1 9E Endeavor Air Inc. ## 2 AA American Airlines Inc. ## 3 AS Alaska Airlines Inc. ## 4 B6 JetBlue Airways ## 5 DL Delta Air Lines Inc. ## 6 EV ExpressJet Airlines Inc. ## 7 F9 Frontier Airlines Inc. ## 8 FL AirTran Airways Corporation ## 9 HA Hawaiian Airlines Inc. ## 10 MQ Envoy Air ## 11 OO SkyWest Airlines Inc. ## 12 UA United Air Lines Inc. ## 13 US US Airways Inc. ## 14 VX Virgin America ## 15 WN Southwest Airlines Co. ## 16 YV Mesa Airlines Inc. vuelos2 %&gt;% dplyr::select(-origen, -destino) %&gt;% left_join(aerolineas, by = &quot;aerolinea&quot;) ## # A tibble: 336,776 × 6 ## anio dia hora codigo_cola aerolinea nombre ## &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 2013 1 5 N14228 UA United Air Lines Inc. ## 2 2013 1 5 N24211 UA United Air Lines Inc. ## 3 2013 1 5 N619AA AA American Airlines Inc. ## 4 2013 1 5 N804JB B6 JetBlue Airways ## 5 2013 1 6 N668DN DL Delta Air Lines Inc. ## 6 2013 1 5 N39463 UA United Air Lines Inc. ## 7 2013 1 6 N516JB B6 JetBlue Airways ## 8 2013 1 6 N829AS EV ExpressJet Airlines Inc. ## 9 2013 1 6 N593JB B6 JetBlue Airways ## 10 2013 1 6 N3ALAA AA American Airlines Inc. ## # ℹ 336,766 more rows x &lt;- tribble( ~key, ~val_x, 1, &quot;x1&quot;, 2, &quot;x2&quot;, 3, &quot;x3&quot; ) y &lt;- tribble( ~key, ~val_y, 1, &quot;y1&quot;, 2, &quot;y2&quot;, 4, &quot;y3&quot; ) x ## # A tibble: 3 × 2 ## key val_x ## &lt;dbl&gt; &lt;chr&gt; ## 1 1 x1 ## 2 2 x2 ## 3 3 x3 y ## # A tibble: 3 × 2 ## key val_y ## &lt;dbl&gt; &lt;chr&gt; ## 1 1 y1 ## 2 2 y2 ## 3 4 y3 x %&gt;% inner_join(y, by=&quot;key&quot;) ## # A tibble: 2 × 3 ## key val_x val_y ## &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; ## 1 1 x1 y1 ## 2 2 x2 y2 #left_join x %&gt;% left_join(y, by=&quot;key&quot;) ## # A tibble: 3 × 3 ## key val_x val_y ## &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; ## 1 1 x1 y1 ## 2 2 x2 y2 ## 3 3 x3 &lt;NA&gt; #right_join x %&gt;% right_join(y, by=&quot;key&quot;) ## # A tibble: 3 × 3 ## key val_x val_y ## &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; ## 1 1 x1 y1 ## 2 2 x2 y2 ## 3 4 &lt;NA&gt; y3 #full_join x %&gt;% full_join(y, by=&quot;key&quot;) ## # A tibble: 4 × 3 ## key val_x val_y ## &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; ## 1 1 x1 y1 ## 2 2 x2 y2 ## 3 3 x3 &lt;NA&gt; ## 4 4 &lt;NA&gt; y3 left_join x &lt;- tribble( ~key, ~nombre_x, 1, &quot;Juan&quot;, 2, &quot;Maria&quot;, 3, &quot;Orlando&quot; ) y &lt;- tribble( ~key, ~edad_y, 1, 20, 2, 21, 4, 22 ) x ## # A tibble: 3 × 2 ## key nombre_x ## &lt;dbl&gt; &lt;chr&gt; ## 1 1 Juan ## 2 2 Maria ## 3 3 Orlando y ## # A tibble: 3 × 2 ## key edad_y ## &lt;dbl&gt; &lt;dbl&gt; ## 1 1 20 ## 2 2 21 ## 3 4 22 x %&gt;% full_join(y, by=&quot;key&quot;) ## # A tibble: 4 × 3 ## key nombre_x edad_y ## &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 1 Juan 20 ## 2 2 Maria 21 ## 3 3 Orlando NA ## 4 4 &lt;NA&gt; 22 x %&gt;% inner_join(y, by=&quot;key&quot;) ## # A tibble: 2 × 3 ## key nombre_x edad_y ## &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 1 Juan 20 ## 2 2 Maria 21 x %&gt;% left_join(y, by=&quot;key&quot;) ## # A tibble: 3 × 3 ## key nombre_x edad_y ## &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 1 Juan 20 ## 2 2 Maria 21 ## 3 3 Orlando NA x %&gt;% right_join(y, by=&quot;key&quot;) ## # A tibble: 3 × 3 ## key nombre_x edad_y ## &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 1 Juan 20 ## 2 2 Maria 21 ## 3 4 &lt;NA&gt; 22 x %&gt;% full_join(y, by=&quot;key&quot;) ## # A tibble: 4 × 3 ## key nombre_x edad_y ## &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 1 Juan 20 ## 2 2 Maria 21 ## 3 3 Orlando NA ## 4 4 &lt;NA&gt; 22 x %&gt;% inner_join(y, by=&quot;key&quot;) ## # A tibble: 2 × 3 ## key nombre_x edad_y ## &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 1 Juan 20 ## 2 2 Maria 21 START HERE!!!! vuelos2 %&gt;% dplyr::select(-origen, -destino) %&gt;% left_join(aerolineas, by = &quot;aerolinea&quot;) ## # A tibble: 336,776 × 6 ## anio dia hora codigo_cola aerolinea nombre ## &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 2013 1 5 N14228 UA United Air Lines Inc. ## 2 2013 1 5 N24211 UA United Air Lines Inc. ## 3 2013 1 5 N619AA AA American Airlines Inc. ## 4 2013 1 5 N804JB B6 JetBlue Airways ## 5 2013 1 6 N668DN DL Delta Air Lines Inc. ## 6 2013 1 5 N39463 UA United Air Lines Inc. ## 7 2013 1 6 N516JB B6 JetBlue Airways ## 8 2013 1 6 N829AS EV ExpressJet Airlines Inc. ## 9 2013 1 6 N593JB B6 JetBlue Airways ## 10 2013 1 6 N3ALAA AA American Airlines Inc. ## # ℹ 336,766 more rows names(vuelos2) ## [1] &quot;anio&quot; &quot;dia&quot; &quot;hora&quot; &quot;origen&quot; &quot;destino&quot; ## [6] &quot;codigo_cola&quot; &quot;aerolinea&quot; names(clima) ## [1] &quot;origen&quot; &quot;anio&quot; &quot;mes&quot; &quot;dia&quot; ## [5] &quot;hora&quot; &quot;temperatura&quot; &quot;punto_rocio&quot; &quot;humedad&quot; ## [9] &quot;direccion_viento&quot; &quot;velocidad_viento&quot; &quot;velocidad_rafaga&quot; &quot;precipitacion&quot; ## [13] &quot;presion&quot; &quot;visibilidad&quot; &quot;fecha_hora&quot; vuelos2 %&gt;% left_join(clima) ## # A tibble: 3,974,448 × 18 ## anio dia hora origen destino codigo_cola aerolinea mes temperatura ## &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 5 EWR IAH N14228 UA 1 39.0 ## 2 2013 1 5 EWR IAH N14228 UA 2 28.0 ## 3 2013 1 5 EWR IAH N14228 UA 3 35.1 ## 4 2013 1 5 EWR IAH N14228 UA 4 45.0 ## 5 2013 1 5 EWR IAH N14228 UA 5 44.1 ## 6 2013 1 5 EWR IAH N14228 UA 6 72.0 ## 7 2013 1 5 EWR IAH N14228 UA 7 75.0 ## 8 2013 1 5 EWR IAH N14228 UA 8 72.0 ## 9 2013 1 5 EWR IAH N14228 UA 9 73.9 ## 10 2013 1 5 EWR IAH N14228 UA 10 53.1 ## # ℹ 3,974,438 more rows ## # ℹ 9 more variables: punto_rocio &lt;dbl&gt;, humedad &lt;dbl&gt;, direccion_viento &lt;dbl&gt;, ## # velocidad_viento &lt;dbl&gt;, velocidad_rafaga &lt;dbl&gt;, precipitacion &lt;dbl&gt;, ## # presion &lt;dbl&gt;, visibilidad &lt;dbl&gt;, fecha_hora &lt;dttm&gt; #&gt; Joining, by = c(&quot;anio&quot;, &quot;mes&quot;, &quot;dia&quot;, &quot;hora&quot;, &quot;origen&quot;) vuelos2 %&gt;% left_join(clima, by = c(&quot;anio&quot;, &quot;dia&quot;, &quot;hora&quot;, &quot;origen&quot;)) ## # A tibble: 3,974,448 × 18 ## anio dia hora origen destino codigo_cola aerolinea mes temperatura ## &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 5 EWR IAH N14228 UA 1 39.0 ## 2 2013 1 5 EWR IAH N14228 UA 2 28.0 ## 3 2013 1 5 EWR IAH N14228 UA 3 35.1 ## 4 2013 1 5 EWR IAH N14228 UA 4 45.0 ## 5 2013 1 5 EWR IAH N14228 UA 5 44.1 ## 6 2013 1 5 EWR IAH N14228 UA 6 72.0 ## 7 2013 1 5 EWR IAH N14228 UA 7 75.0 ## 8 2013 1 5 EWR IAH N14228 UA 8 72.0 ## 9 2013 1 5 EWR IAH N14228 UA 9 73.9 ## 10 2013 1 5 EWR IAH N14228 UA 10 53.1 ## # ℹ 3,974,438 more rows ## # ℹ 9 more variables: punto_rocio &lt;dbl&gt;, humedad &lt;dbl&gt;, direccion_viento &lt;dbl&gt;, ## # velocidad_viento &lt;dbl&gt;, velocidad_rafaga &lt;dbl&gt;, precipitacion &lt;dbl&gt;, ## # presion &lt;dbl&gt;, visibilidad &lt;dbl&gt;, fecha_hora &lt;dttm&gt; names(vuelos2) ## [1] &quot;anio&quot; &quot;dia&quot; &quot;hora&quot; &quot;origen&quot; &quot;destino&quot; ## [6] &quot;codigo_cola&quot; &quot;aerolinea&quot; names(aeropuertos) ## [1] &quot;codigo_aeropuerto&quot; &quot;nombre&quot; &quot;latitud&quot; ## [4] &quot;longitud&quot; &quot;altura&quot; &quot;zona_horaria&quot; ## [7] &quot;horario_verano&quot; &quot;zona_horaria_iana&quot; head(vuelos2, n=3) ## # A tibble: 3 × 7 ## anio dia hora origen destino codigo_cola aerolinea ## &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 2013 1 5 EWR IAH N14228 UA ## 2 2013 1 5 LGA IAH N24211 UA ## 3 2013 1 5 JFK MIA N619AA AA aeropuertos ## # A tibble: 1,458 × 8 ## codigo_aeropuerto nombre latitud longitud altura zona_horaria horario_verano ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 04G Lansdo… 41.1 -80.6 1044 -5 A ## 2 06A Moton … 32.5 -85.7 264 -6 A ## 3 06C Schaum… 42.0 -88.1 801 -6 A ## 4 06N Randal… 41.4 -74.4 523 -5 A ## 5 09J Jekyll… 31.1 -81.4 11 -5 A ## 6 0A9 Elizab… 36.4 -82.2 1593 -5 A ## 7 0G6 Willia… 41.5 -84.5 730 -5 A ## 8 0G7 Finger… 42.9 -76.8 492 -5 A ## 9 0P2 Shoest… 39.8 -76.6 1000 -5 U ## 10 0S9 Jeffer… 48.1 -123. 108 -8 A ## # ℹ 1,448 more rows ## # ℹ 1 more variable: zona_horaria_iana &lt;chr&gt; vuelos2 %&gt;% right_join(aeropuertos, c(&quot;origen&quot; = &quot;codigo_aeropuerto&quot;)) ## # A tibble: 338,231 × 14 ## anio dia hora origen destino codigo_cola aerolinea nombre latitud ## &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 2013 1 5 EWR IAH N14228 UA Newark Libert… 40.7 ## 2 2013 1 5 LGA IAH N24211 UA La Guardia 40.8 ## 3 2013 1 5 JFK MIA N619AA AA John F Kenned… 40.6 ## 4 2013 1 5 JFK BQN N804JB B6 John F Kenned… 40.6 ## 5 2013 1 6 LGA ATL N668DN DL La Guardia 40.8 ## 6 2013 1 5 EWR ORD N39463 UA Newark Libert… 40.7 ## 7 2013 1 6 EWR FLL N516JB B6 Newark Libert… 40.7 ## 8 2013 1 6 LGA IAD N829AS EV La Guardia 40.8 ## 9 2013 1 6 JFK MCO N593JB B6 John F Kenned… 40.6 ## 10 2013 1 6 LGA ORD N3ALAA AA La Guardia 40.8 ## # ℹ 338,221 more rows ## # ℹ 5 more variables: longitud &lt;dbl&gt;, altura &lt;dbl&gt;, zona_horaria &lt;dbl&gt;, ## # horario_verano &lt;chr&gt;, zona_horaria_iana &lt;chr&gt; library(maps) aeropuertos %&gt;% semi_join(vuelos, c(&quot;codigo_aeropuerto&quot; = &quot;destino&quot;)) %&gt;% ggplot(aes(longitud, latitud)) + borders(&quot;state&quot;) + geom_point() + coord_quickmap() mutate() select() left_join() match() 18.4 Entendiendo las uniones 18.4.1 Unión interiores 18.4.2 Unión exteriores 18.4.3 Claves duplicadas 18.5 Definiendo las columnas clave Ejercicios: Hacer los ejercicios en la sección 13.4.6 del libro en español 18.6 Otras implementaciones merge() 18.7 Uniones de filtro semi_join() anti_join() Ejercicios: Hacer los ejercicios en la sección 13.5.1 del libro en español 18.8 Problemas con las uniones "],["datos-ordenados-1.html", "Capítulo19 Datos Ordenados 19.1 Temas: Datos Ordenados", " Capítulo19 Datos Ordenados Fecha de la ultima revisión ## [1] &quot;2024-11-07&quot; El tema proviene de los siguientes sitios. English: https://r4ds.had.co.nz/tidy-data.html Español: https://es.r4ds.hadley.nz/12-tidy.html 19.1 Temas: Datos Ordenados 19.1.1 El paquete tidyr Ver vignettes library(tidyverse) library(datos) tabla1 ## # A tibble: 6 × 4 ## pais anio casos poblacion ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Afganistán 1999 745 19987071 ## 2 Afganistán 2000 2666 20595360 ## 3 Brasil 1999 37737 172006362 ## 4 Brasil 2000 80488 174504898 ## 5 China 1999 212258 1272915272 ## 6 China 2000 213766 1280428583 tabla2 ## # A tibble: 12 × 4 ## pais anio tipo cuenta ## &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 Afganistán 1999 casos 745 ## 2 Afganistán 1999 población 19987071 ## 3 Afganistán 2000 casos 2666 ## 4 Afganistán 2000 población 20595360 ## 5 Brasil 1999 casos 37737 ## 6 Brasil 1999 población 172006362 ## 7 Brasil 2000 casos 80488 ## 8 Brasil 2000 población 174504898 ## 9 China 1999 casos 212258 ## 10 China 1999 población 1272915272 ## 11 China 2000 casos 213766 ## 12 China 2000 población 1280428583 tabla3 ## # A tibble: 6 × 3 ## pais anio tasa ## &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 Afganistán 1999 745/19987071 ## 2 Afganistán 2000 2666/20595360 ## 3 Brasil 1999 37737/172006362 ## 4 Brasil 2000 80488/174504898 ## 5 China 1999 212258/1272915272 ## 6 China 2000 213766/1280428583 tabla4a ## # A tibble: 3 × 3 ## pais `1999` `2000` ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Afganistán 745 2666 ## 2 Brasil 37737 80488 ## 3 China 212258 213766 tabla4b ## # A tibble: 3 × 3 ## pais `1999` `2000` ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Afganistán 19987071 20595360 ## 2 Brasil 172006362 174504898 ## 3 China 1272915272 1280428583 "],["factores-1.html", "Capítulo20 Factores 20.1 ¿Qué ocurrio en el gráfico? 20.2 Temas: 20.3 A smaller figure to the right, with floating text 20.4 Haga un re-order por la cantidad de personas por religion 20.5 Modificar el orden de los factores", " Capítulo20 Factores Fecha de la ultima revisión ## [1] &quot;2024-11-07&quot; El tema proviene de los siguientes sitios. Aunque los ejemplos son distinctos English: https://r4ds.had.co.nz/factors.html Español: https://es.r4ds.hadley.nz/15-factors.html library(tidyverse) library(datos) library(forcats) month &lt;-c(&quot;December&quot; ,&quot;January&quot;, &quot;March&quot;, &quot;April&quot;) month ## [1] &quot;December&quot; &quot;January&quot; &quot;March&quot; &quot;April&quot; x=c(1:4) str(month) ## chr [1:4] &quot;December&quot; &quot;January&quot; &quot;March&quot; &quot;April&quot; str(x) ## int [1:4] 1 2 3 4 valores &lt;- c(7, 3, 2, 10) Unir las dos listas df=as.data.frame(cbind(month, valores, x)) df ## month valores x ## 1 December 7 1 ## 2 January 3 2 ## 3 March 2 3 ## 4 April 10 4 20.1 ¿Qué ocurrio en el gráfico? library(tidyverse) ggplot(df, aes(month, valores))+ geom_point() Order months in correct order use month.name Hay variables ya descrita en R, para facilitar el uso de constantes LETTERS: Mayuscula letters: minuscula month.abb: abreviación de meses en Ingles month.name: nombre de meses en Ingles pi = el valor de pi See this website for more details https://datacornering.com/how-to-get-the-month-name-from-the-number-in-r/ LETTERS ## [1] &quot;A&quot; &quot;B&quot; &quot;C&quot; &quot;D&quot; &quot;E&quot; &quot;F&quot; &quot;G&quot; &quot;H&quot; &quot;I&quot; &quot;J&quot; &quot;K&quot; &quot;L&quot; &quot;M&quot; &quot;N&quot; &quot;O&quot; &quot;P&quot; &quot;Q&quot; &quot;R&quot; &quot;S&quot; ## [20] &quot;T&quot; &quot;U&quot; &quot;V&quot; &quot;W&quot; &quot;X&quot; &quot;Y&quot; &quot;Z&quot; letters ## [1] &quot;a&quot; &quot;b&quot; &quot;c&quot; &quot;d&quot; &quot;e&quot; &quot;f&quot; &quot;g&quot; &quot;h&quot; &quot;i&quot; &quot;j&quot; &quot;k&quot; &quot;l&quot; &quot;m&quot; &quot;n&quot; &quot;o&quot; &quot;p&quot; &quot;q&quot; &quot;r&quot; &quot;s&quot; ## [20] &quot;t&quot; &quot;u&quot; &quot;v&quot; &quot;w&quot; &quot;x&quot; &quot;y&quot; &quot;z&quot; month.abb ## [1] &quot;Jan&quot; &quot;Feb&quot; &quot;Mar&quot; &quot;Apr&quot; &quot;May&quot; &quot;Jun&quot; &quot;Jul&quot; &quot;Aug&quot; &quot;Sep&quot; &quot;Oct&quot; &quot;Nov&quot; &quot;Dec&quot; month.name ## [1] &quot;January&quot; &quot;February&quot; &quot;March&quot; &quot;April&quot; &quot;May&quot; &quot;June&quot; ## [7] &quot;July&quot; &quot;August&quot; &quot;September&quot; &quot;October&quot; &quot;November&quot; &quot;December&quot; pi ## [1] 3.141593 df &lt;- data.frame(Months=c(&quot;January&quot;, &quot;February&quot;, &quot;March&quot;, &quot;April&quot;, &quot;May&quot;, &quot;June&quot;, &quot;July&quot;, &quot;August&quot;, &quot;September&quot;, &quot;October&quot;, &quot;November&quot;,&quot;December&quot;), Attacks=c(49, 70, 49, 44, 53, 35, 33, 36, 47, 40, 44, 32)) ggplot(df, aes(Months, Attacks))+ geom_point() ### validar el supuesto que tengo información escrita correctamente para cada mes de año en el dataframe all(df$Months %in% month.name) ## [1] TRUE ### convert to a factor, order defined by `month.name`. df$Months &lt;- factor(df$Months, levels=month.name) ggplot(data=df, aes(x=Months, y=Attacks)) + geom_point() 20.1.1 Usando la funciones factor y levels, estamos asignando los factores a un nivel específico en el orden de la lista 20.1.2 parse_factor() is similar a factor(), but generates a warning if levels have been specified and some elements of x are not found in those levels. x1= c(&quot;Dic&quot;, &quot;Ene&quot;, &quot;Mar&quot;, &quot;Dii&quot;) # Nota que esta lista tengo un mes que se llama &quot;Dii&quot; niveles_meses=c(&quot;Ene&quot;, &quot;Mar&quot;, &quot;Dic&quot;) y1 &lt;-factor(x1, levels = niveles_meses) y1 ## [1] Dic Ene Mar &lt;NA&gt; ## Levels: Ene Mar Dic y1 &lt;- parse_factor(x1, levels = niveles_meses) y1 ## [1] Dic Ene Mar &lt;NA&gt; ## attr(,&quot;problems&quot;) ## # A tibble: 1 × 4 ## row col expected actual ## &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; ## 1 4 NA value in level set Dii ## Levels: Ene Mar Dic Si quiere que los valores aparezca en el orden que aparecen en la base de datos use unique(variable) df_est=data.frame(Nombre_est=c(&quot;Monica&quot;, &quot;Isabela&quot;, &quot;Juan&quot;, &quot;Robo&quot;, &quot;Pepito&quot;), Nota_Final=c(99, 27, 89, 91, 27)) df_est ## Nombre_est Nota_Final ## 1 Monica 99 ## 2 Isabela 27 ## 3 Juan 89 ## 4 Robo 91 ## 5 Pepito 27 ggplot(df_est, aes(Nombre_est, Nota_Final))+ geom_point() df_est$fct1=factor(df_est$Nombre_est, levels = unique(df_est$Nombre_est)) ggplot(df_est, aes(fct1, Nota_Final))+ geom_point() f2 &lt;- x1 %&gt;% factor() %&gt;% fct_inorder() f2 ## [1] Dic Ene Mar Dii ## Levels: Dic Ene Mar Dii levels(f2) ## [1] &quot;Dic&quot; &quot;Ene&quot; &quot;Mar&quot; &quot;Dii&quot; 20.2 Temas: library(forcats) sort() factor() parse_factor() unique() fact_inorder() levels() 20.2.1 Datos : Encuesta Social General count() Ejercicios: library(datos) encuesta ## # A tibble: 21,483 × 9 ## anio estado_civil edad raza ingreso partido religion denominacion horas_tv ## &lt;int&gt; &lt;fct&gt; &lt;int&gt; &lt;fct&gt; &lt;fct&gt; &lt;fct&gt; &lt;fct&gt; &lt;fct&gt; &lt;int&gt; ## 1 2000 Nunca se ha… 26 Blan… 8000 -… Ind, p… Protest… Bautistas d… 12 ## 2 2000 Divorciado 48 Blan… 8000 -… No fue… Protest… Bautista, n… NA ## 3 2000 Viudo 67 Blan… No apl… Indepe… Protest… No denomina… 2 ## 4 2000 Nunca se ha… 39 Blan… No apl… Ind, p… Cristia… No aplica 4 ## 5 2000 Divorciado 25 Blan… No apl… No fue… Ninguna No aplica 1 ## 6 2000 Casado 25 Blan… 20000 … Fuerte… Protest… Bautistas d… NA ## 7 2000 Nunca se ha… 36 Blan… 25000 … No fue… Cristia… No aplica 3 ## 8 2000 Divorciado 44 Blan… 7000 -… Ind, p… Protest… Sínodo lute… NA ## 9 2000 Casado 44 Blan… 25000 … No fue… Protest… Otra 0 ## 10 2000 Casado 47 Blan… 25000 … Fuerte… Protest… Bautistas d… 3 ## # ℹ 21,473 more rows Contabilizar la cantidad de persona por “estado civil” df=encuesta %&gt;% count(estado_civil) df ## # A tibble: 6 × 2 ## estado_civil n ## &lt;fct&gt; &lt;int&gt; ## 1 Sin respuesta 17 ## 2 Nunca se ha casado 5416 ## 3 Separado 743 ## 4 Divorciado 3383 ## 5 Viudo 1807 ## 6 Casado 10117 knitr unique(df$estado_civil) ## [1] Sin respuesta Nunca se ha casado Separado Divorciado ## [5] Viudo Casado ## 6 Levels: Sin respuesta Nunca se ha casado Separado Divorciado ... Casado df$estado_est_civil &lt;-factor(df$estado_civil, levels = df$estado_civil) df$niveles_est_civil &lt;- fct_reorder(df$estado_civil, df$n ) df ## # A tibble: 6 × 4 ## estado_civil n estado_est_civil niveles_est_civil ## &lt;fct&gt; &lt;int&gt; &lt;fct&gt; &lt;fct&gt; ## 1 Sin respuesta 17 Sin respuesta Sin respuesta ## 2 Nunca se ha casado 5416 Nunca se ha casado Nunca se ha casado ## 3 Separado 743 Separado Separado ## 4 Divorciado 3383 Divorciado Divorciado ## 5 Viudo 1807 Viudo Viudo ## 6 Casado 10117 Casado Casado ggplot(df, aes(estado_civil,n )) + geom_col() 20.3 A smaller figure to the right, with floating text LOTS of text here to wrap around the figure. dfghjlkjhgdgxchvbvcxcvbnnbvvbvbbvcvxcv. fgffhgcvbcvbhbvvbvcvbnv bcbnbbnmmbnmnb vbcbnbvvnbbb vbb v b b cgjhkggbcv 20.4 Haga un re-order por la cantidad de personas por religion df2=encuesta %&gt;% count(religion) df2 %&gt;% mutate(religion = fct_reorder(religion, n)) %&gt;% ggplot(aes(x = religion, y = n)) + geom_col()+ theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1)) Hacer los ejercicios en la sección 15.3.1 del libro en español 20.5 Modificar el orden de los factores fct_reorder() !is.na( ) remover los “NA” fct_infreq() fct_rev() fct_recode() fct_collapse() fct_lump() #model=lm(y~x, df) #summary(model) resumen_religion &lt;- encuesta %&gt;% group_by(religion) %&gt;% summarise( edad = mean(edad, na.rm = TRUE), horas_tv = mean(horas_tv, na.rm = TRUE), sd_edad = min(horas_tv, na.rm = TRUE), n = n() ) resumen_religion ## # A tibble: 15 × 5 ## religion edad horas_tv sd_edad n ## &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; ## 1 Sin respuesta 49.5 2.72 2.72 93 ## 2 No sabe 35.9 4.62 4.62 15 ## 3 Inter o no confesional 40.0 2.87 2.87 109 ## 4 Nativa americana 38.9 3.46 3.46 23 ## 5 Cristiana 40.1 2.79 2.79 689 ## 6 Cristiana ortodoxa 50.4 2.42 2.42 95 ## 7 Musulmana/Islam 37.6 2.44 2.44 104 ## 8 Otra religión oriental 45.9 1.67 1.67 32 ## 9 Hinduismo 37.7 1.89 1.89 71 ## 10 Budismo 44.7 2.38 2.38 147 ## 11 Otra 41.0 2.73 2.73 224 ## 12 Ninguna 41.2 2.71 2.71 3523 ## 13 Judía 52.4 2.52 2.52 388 ## 14 Católica 46.9 2.96 2.96 5124 ## 15 Protestante 49.9 3.15 3.15 10846 ggplot(resumen_religion, aes(edad, religion)) + geom_point() min(encuesta$horas_tv, na.rm = TRUE) ## [1] 0 20.5.1 Nota el efecto de añadir un “-” antes de edad ggplot(resumen_religion, aes(edad, fct_reorder(religion, -edad))) + geom_point() resumen_religion %&gt;% mutate(religion = fct_reorder(religion, horas_tv)) %&gt;% ggplot(aes(horas_tv, religion)) + geom_point() Reorder factor levels by sorting along another variable Description fct_reorder() is useful for 1d displays where the factor is mapped to position; fct_reorder2() for 2d displays where the factor is mapped to a non-position aesthetic. last2() and first2() are helpers for fct_reorder2(); last2() finds the last value of y when sorted by x; first2() finds the first value. resumen_ingreso &lt;- encuesta %&gt;% group_by(ingreso) %&gt;% summarise( edad = mean(edad, na.rm = TRUE), horas_tv = mean(horas_tv, na.rm = TRUE), n = n() ) resumen_ingreso ## # A tibble: 16 × 4 ## ingreso edad horas_tv n ## &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; ## 1 Sin respuesta 45.5 2.90 183 ## 2 No sabe 45.6 3.41 267 ## 3 Se niega a responder 47.6 2.48 975 ## 4 25000 o más 44.2 2.23 7363 ## 5 20000 - 24999 41.5 2.78 1283 ## 6 15000 - 19999 40.0 2.91 1048 ## 7 10000 - 14999 41.1 3.02 1168 ## 8 8000 - 9999 41.1 3.15 340 ## 9 7000 - 7999 38.2 2.65 188 ## 10 6000 - 6999 40.3 3.17 215 ## 11 5000 - 5999 37.8 3.16 227 ## 12 4000 - 4999 38.9 3.15 226 ## 13 3000 - 3999 37.8 3.31 276 ## 14 1000 - 2999 34.5 3.00 395 ## 15 Menos de 1000 40.5 3.36 286 ## 16 No aplica 56.1 3.79 7043 ggplot(resumen_ingreso, aes(horas_tv, fct_reorder(ingreso, horas_tv))) + geom_point() Reorder factor levels by hand Description This is a generalisation of stats::relevel() that allows you to move any number of levels to any location. ggplot(resumen_ingreso, aes(edad, fct_relevel(ingreso, &quot;No aplica&quot;))) + geom_point() Ejercicios: Hacer los ejercicios en la sección 15.5.1 del libro en español "],["cadena-de-carácteres-strings.html", "Capítulo21 Cadena de Carácteres = STRINGS 21.1 Caracteres especiales 21.2 Para ver las opciones de caracteres y como trabajar cadenas de caracteres use ?“’” para ver 21.3 Temas: Cadenas de Caracteres 21.4 Dividir cadenas basado en la posición de los caracteres en la cadena 21.5 Locales 21.6 Buscar patrones 21.7 Coincidencia básica 21.8 Anclas 21.9 Clases de caracteres y alternativas 21.10 Repetición 21.11 Agrupamiento y referencias previas 21.12 Herramientas: Objetivos 21.13 Extraer coincidencias 21.14 Coincidencias agrupadas: 21.15 Remplazar coincidencias 21.16 Divisiones 21.17 Otro tipos de patrones 21.18 stringi:", " Capítulo21 Cadena de Carácteres = STRINGS Fecha de la ultima revisión ## [1] &quot;2024-11-07&quot; El tema proviene de los siguientes sitios. English: https://r4ds.had.co.nz/strings.html Español: https://es.r4ds.hadley.nz/14-strings.html library(tidyverse) library(datos) library(stringr) string1 &lt;- &quot;El Pequeño Principe; Saint Exupery&quot; string2 &lt;- &quot;El segundo sexo: Simone de Beauvoir&quot; string3 &lt;- &quot;El segundo sexo \\\\ Simone de Beauvoir&quot; string1 ## [1] &quot;El Pequeño Principe; Saint Exupery&quot; string2 ## [1] &quot;El segundo sexo: Simone de Beauvoir&quot; string3 ## [1] &quot;El segundo sexo \\\\ Simone de Beauvoir&quot; comilla_doble &lt;- &#39;\\&quot;&#39; # ó &#39;&quot;&#39; comilla_simple &lt;- &#39;\\&#39;&#39; # ó &quot;&#39;&quot; comilla_ampersand &lt;- &quot;&amp;&quot; comilla_doble ## [1] &quot;\\&quot;&quot; comilla_simple ## [1] &quot;&#39;&quot; comilla_ampersand ## [1] &quot;&amp;&quot; &amp; x &lt;- c(&quot;\\&quot;&quot;, &quot;\\\\&quot;) x ## [1] &quot;\\&quot;&quot; &quot;\\\\&quot; writeLines(x) ## &quot; ## \\ 21.1 Caracteres especiales &quot;\\n&quot; ## [1] &quot;\\n&quot; &quot;\\t&quot; ## [1] &quot;\\t&quot; 21.2 Para ver las opciones de caracteres y como trabajar cadenas de caracteres use ?“’” para ver ?&quot;&#39;&quot; ‘⁠⁠’ newline (aka ‘line feed’) ‘⁠’ carriage return ‘⁠’ tab ‘⁠’ backspace ‘⁠⁠’ alert (bell) ‘⁠’ form feed ‘⁠’ vertical tab ‘⁠\\⁠’ backslash ‘⁠⁠’ ‘⁠'⁠’ ASCII apostrophe ‘⁠’⁠’ ‘⁠\"⁠’ ASCII quotation mark ‘⁠“⁠’ ‘⁠`⁠’ ASCII grave accent (backtick) ‘⁠`⁠’ ⁠ ## Lista de caracteres especiales (unicodes) Vea el siguiente enlace para los unicodes https://en.wikipedia.org/wiki/List_of_Unicode_characters x &lt;- &quot;\\u00b5&quot; # mu x ## [1] &quot;µ&quot; y &lt;- &quot;\\u00b6&quot; # pilcrow y ## [1] &quot;¶&quot; z &lt;- &quot;\\u00A1&quot; # ¡ z ## [1] &quot;¡&quot; w &lt;- &quot;\\u01FC\\u00b6&quot; # Ǽ¶ w ## [1] &quot;Ǽ¶&quot; Escribir si nombre en el alfabeto Cyrilico Vea este enlace para conocer el alfabeto cyrilico &lt;https://www.google.com/search?client=safari&amp;rls=en&amp;q=cyrillic+alphabet&amp;ie=UTF-8&amp;oe=UTF-8#vhid=cMLOx1fN0Zg5UM&amp;vssid=l&gt; Raymond = &quot;\\u048E\\u0430\\u042B\\u043C\\u043E\\u043D\\u0434, Asi se escribe mi nombre en ruso&quot; Raymond ## [1] &quot;ҎаЫмонд, Asi se escribe mi nombre en ruso&quot; 21.3 Temas: Cadenas de Caracteres library(stringr) Solamente trabajermos con el paquete stringr, donde las funciones escrita de forma que sean más intuitivos para recordar. Todas las funciones conmienzan con str_ 21.3.1 El largo de una cadena de caracteres con str_length library(stringr) str_length(&quot;Yo quiero un Lamborghini&quot;) ## [1] 24 21.3.2 Combinar cadenas con str_c Nota aqui que une la primera oración con la segunda oración str_c(&quot;Es una oración con muchas letras y palabras&quot;, &quot;Mi pelicula favorita es Cinema Paraiso&quot;) ## [1] &quot;Es una oración con muchas letras y palabrasMi pelicula favorita es Cinema Paraiso&quot; Usa el argumento sep = “xxx” para controlar cómo separar las oraciones str_c(&quot;Es una oración con muchas letras y palabras&quot;, &quot;Mi pelicula favorita es Cinema Paraiso&quot;, sep = &quot;, &quot;) ## [1] &quot;Es una oración con muchas letras y palabras, Mi pelicula favorita es Cinema Paraiso&quot; str_replace_na() x &lt;- c(&quot;Mi pelicula favorita es Cinema Paraiso&quot;, NA) x ## [1] &quot;Mi pelicula favorita es Cinema Paraiso&quot; ## [2] NA str_c(&quot;|-&quot;, x, &quot;-|&quot;) ## [1] &quot;|-Mi pelicula favorita es Cinema Paraiso-|&quot; ## [2] NA 21.4 Dividir cadenas basado en la posición de los caracteres en la cadena str_sub() x= c( &quot;Piña&quot;, &quot;Manzana&quot;, &quot;Toronja&quot;) str_sub(x, 1,1) ## [1] &quot;P&quot; &quot;M&quot; &quot;T&quot; 21.4.1 Seleccionar los caracteres al último de la palabra x= c( &quot;Piña&quot;, &quot;Manzana&quot;, &quot;Toronja&quot;) str_sub(x, -2,-1) ## [1] &quot;ña&quot; &quot;na&quot; &quot;ja&quot; 21.4.2 Cambiar a todo minuscula x= c( &quot;Piña&quot;, &quot;Manzana&quot;, &quot;Toronja&quot;, &quot;HAPPY&quot;) str_to_lower(x) ## [1] &quot;piña&quot; &quot;manzana&quot; &quot;toronja&quot; &quot;happy&quot; 21.4.3 Cambiar a mayuscula x= c( &quot;Piña&quot;, &quot;Manzana&quot;, &quot;Toronja&quot;) str_to_upper(x) ## [1] &quot;PIÑA&quot; &quot;MANZANA&quot; &quot;TORONJA&quot; 21.5 Locales ¿Qué es un locale? str_to_lower() str_to_upper() str_order() # que hace esta función? str_sort() # que hace esta función? x ## [1] &quot;Piña&quot; &quot;Manzana&quot; &quot;Toronja&quot; str_order(x) # regresa el orden de las palabras ## [1] 2 1 3 str_sort(x) # reorganiza las palabras en orden alfabético ## [1] &quot;Manzana&quot; &quot;Piña&quot; &quot;Toronja&quot; Ejercicios: Hacer los ejercicios en la sección 14.2.5 del libro en español 21.6 Buscar patrones 21.7 Coincidencia básica Para visualizar patrones de letras str_view() str_view( , .x.) library(stringr) x &lt;- c(&quot;manzana&quot;, &quot;banana&quot;, &quot;pera&quot;) str_view(x, &quot;er&quot;) ## [3] │ p&lt;er&gt;a Ejemplo de como uno puede utiliza esas funciones x= c( &quot;Piña&quot;, &quot;Manzana&quot;, &quot;Toronja&quot;, &quot;Jugo&quot;, &quot;Monique&quot;, &quot;Raymond&quot;) str_detect(x, &quot;a&quot;) # detectar la a ## [1] TRUE TRUE TRUE FALSE FALSE TRUE str_detect(x, &quot;i&quot;) # detectar la i ## [1] TRUE FALSE FALSE FALSE TRUE FALSE str_detect(x, &quot;ñ&quot;) ## [1] TRUE FALSE FALSE FALSE FALSE FALSE 21.7.1 Detectar las palabras que comienzan con una letra específica con “^” # ¿Cuántas palabras comunes empiezan con m o M? # str_detect(x, &quot;^M&quot;) x ## [1] &quot;Piña&quot; &quot;Manzana&quot; &quot;Toronja&quot; &quot;Jugo&quot; &quot;Monique&quot; &quot;Raymond&quot; sum(str_detect(x, &quot;^m&quot;)) ## [1] 0 sum(str_detect(x, &quot;^M&quot;)) ## [1] 2 21.7.2 Detectar las palabras que terminan con una letra específica con “$” # ¿Qué proporción de palabras comunes terminan con una vocal? mean(str_detect(palabras, &quot;[aáeéiíoóuú]$&quot;)) ## [1] 0.561 # ¿Qué proporción de palabras comunes terminan con una vocal especifica? mean(str_detect(x, &quot;[o]$&quot;)) ## [1] 0.1666667 Comienza para mirar el archivo palabras Cuentas palabras tiene ese archivo? library(stringr) library(datos) palabras ## [1] &quot;a&quot; &quot;abril&quot; &quot;acción&quot; &quot;acciones&quot; ## [5] &quot;acerca&quot; &quot;actitud&quot; &quot;actividad&quot; &quot;actividades&quot; ## [9] &quot;acto&quot; &quot;actual&quot; &quot;acuerdo&quot; &quot;adelante&quot; ## [13] &quot;además&quot; &quot;administración&quot; &quot;afirmó&quot; &quot;agua&quot; ## [17] &quot;ahí&quot; &quot;ahora&quot; &quot;aire&quot; &quot;al&quot; ## [21] &quot;algo&quot; &quot;alguien&quot; &quot;algún&quot; &quot;alguna&quot; ## [25] &quot;algunas&quot; &quot;algunos&quot; &quot;allá&quot; &quot;allí&quot; ## [29] &quot;alrededor&quot; &quot;alta&quot; &quot;alto&quot; &quot;ambiente&quot; ## [33] &quot;ambos&quot; &quot;américa&quot; &quot;amigo&quot; &quot;amigos&quot; ## [37] &quot;amor&quot; &quot;análisis&quot; &quot;animales&quot; &quot;ante&quot; ## [41] &quot;anterior&quot; &quot;antes&quot; &quot;antonio&quot; &quot;año&quot; ## [45] &quot;años&quot; &quot;aparece&quot; &quot;apenas&quot; &quot;apoyo&quot; ## [49] &quot;aquel&quot; &quot;aquella&quot; &quot;aquellas&quot; &quot;aquellos&quot; ## [53] &quot;aquí&quot; &quot;área&quot; &quot;argentina&quot; &quot;armas&quot; ## [57] &quot;arriba&quot; &quot;arte&quot; &quot;artículo&quot; &quot;así&quot; ## [61] &quot;asimismo&quot; &quot;asociación&quot; &quot;aspecto&quot; &quot;aspectos&quot; ## [65] &quot;asunto&quot; &quot;atención&quot; &quot;atrás&quot; &quot;aumento&quot; ## [69] &quot;aun&quot; &quot;aún&quot; &quot;aunque&quot; &quot;autor&quot; ## [73] &quot;autoridades&quot; &quot;ayer&quot; &quot;ayuda&quot; &quot;b&quot; ## [77] &quot;baja&quot; &quot;bajo&quot; &quot;banco&quot; &quot;barcelona&quot; ## [81] &quot;base&quot; &quot;bastante&quot; &quot;bien&quot; &quot;blanca&quot; ## [85] &quot;blanco&quot; &quot;boca&quot; &quot;buen&quot; &quot;buena&quot; ## [89] &quot;bueno&quot; &quot;buenos&quot; &quot;busca&quot; &quot;buscar&quot; ## [93] &quot;c&quot; &quot;cabeza&quot; &quot;cabo&quot; &quot;cada&quot; ## [97] &quot;calidad&quot; &quot;calle&quot; &quot;cama&quot; &quot;cámara&quot; ## [101] &quot;cambio&quot; &quot;cambios&quot; &quot;camino&quot; &quot;campaña&quot; ## [105] &quot;campo&quot; &quot;cantidad&quot; &quot;capacidad&quot; &quot;capaz&quot; ## [109] &quot;capital&quot; &quot;cara&quot; &quot;carácter&quot; &quot;características&quot; ## [113] &quot;cargo&quot; &quot;carlos&quot; &quot;carne&quot; &quot;carrera&quot; ## [117] &quot;carta&quot; &quot;casa&quot; &quot;casi&quot; &quot;caso&quot; ## [121] &quot;casos&quot; &quot;causa&quot; &quot;central&quot; &quot;centro&quot; ## [125] &quot;centros&quot; &quot;cerca&quot; &quot;chile&quot; &quot;ciencia&quot; ## [129] &quot;ciento&quot; &quot;cierta&quot; &quot;cierto&quot; &quot;cinco&quot; ## [133] &quot;cine&quot; &quot;ciudad&quot; &quot;civil&quot; &quot;claro&quot; ## [137] &quot;clase&quot; &quot;club&quot; &quot;color&quot; &quot;comenzó&quot; ## [141] &quot;comercio&quot; &quot;comisión&quot; &quot;como&quot; &quot;cómo&quot; ## [145] &quot;compañía&quot; &quot;común&quot; &quot;comunicación&quot; &quot;comunidad&quot; ## [149] &quot;con&quot; &quot;concepto&quot; &quot;conciencia&quot; &quot;condiciones&quot; ## [153] &quot;congreso&quot; &quot;conjunto&quot; &quot;conocer&quot; &quot;conocimiento&quot; ## [157] &quot;consecuencia&quot; &quot;conseguir&quot; &quot;consejo&quot; &quot;considera&quot; ## [161] &quot;constitución&quot; &quot;construcción&quot; &quot;consumo&quot; &quot;contenido&quot; ## [165] &quot;contra&quot; &quot;contrario&quot; &quot;control&quot; &quot;corazón&quot; ## [169] &quot;corte&quot; &quot;cosa&quot; &quot;cosas&quot; &quot;costa&quot; ## [173] &quot;creación&quot; &quot;crecimiento&quot; &quot;creo&quot; &quot;crisis&quot; ## [177] &quot;cuadro&quot; &quot;cual&quot; &quot;cuales&quot; &quot;cualquier&quot; ## [181] &quot;cuando&quot; &quot;cuanto&quot; &quot;cuarto&quot; &quot;cuatro&quot; ## [185] &quot;cuba&quot; &quot;cuenta&quot; &quot;cuerpo&quot; &quot;cuestión&quot; ## [189] &quot;cultura&quot; &quot;cultural&quot; &quot;curso&quot; &quot;cuya&quot; ## [193] &quot;cuyo&quot; &quot;d&quot; &quot;da&quot; &quot;dado&quot; ## [197] &quot;dan&quot; &quot;dar&quot; &quot;datos&quot; &quot;de&quot; ## [201] &quot;debe&quot; &quot;deben&quot; &quot;debía&quot; &quot;debido&quot; ## [205] &quot;decía&quot; &quot;decir&quot; &quot;decisión&quot; &quot;defensa&quot; ## [209] &quot;deja&quot; &quot;dejar&quot; &quot;dejó&quot; &quot;del&quot; ## [213] &quot;demás&quot; &quot;demasiado&quot; &quot;democracia&quot; &quot;dentro&quot; ## [217] &quot;derecha&quot; &quot;derecho&quot; &quot;derechos&quot; &quot;desarrollo&quot; ## [221] &quot;desde&quot; &quot;deseo&quot; &quot;después&quot; &quot;destino&quot; ## [225] &quot;día&quot; &quot;diario&quot; &quot;días&quot; &quot;dice&quot; ## [229] &quot;dicen&quot; &quot;dicho&quot; &quot;diciembre&quot; &quot;diez&quot; ## [233] &quot;diferencia&quot; &quot;diferentes&quot; &quot;difícil&quot; &quot;dijo&quot; ## [237] &quot;dinero&quot; &quot;dio&quot; &quot;dios&quot; &quot;dirección&quot; ## [241] &quot;director&quot; &quot;distintas&quot; &quot;distintos&quot; &quot;diversas&quot; ## [245] &quot;diversos&quot; &quot;doctor&quot; &quot;dólares&quot; &quot;dolor&quot; ## [249] &quot;domingo&quot; &quot;don&quot; &quot;donde&quot; &quot;dónde&quot; ## [253] &quot;dos&quot; &quot;duda&quot; &quot;durante&quot; &quot;e&quot; ## [257] &quot;economía&quot; &quot;económica&quot; &quot;económico&quot; &quot;edad&quot; ## [261] &quot;educación&quot; &quot;efecto&quot; &quot;efectos&quot; &quot;ejemplo&quot; ## [265] &quot;ejército&quot; &quot;el&quot; &quot;él&quot; &quot;elecciones&quot; ## [269] &quot;electoral&quot; &quot;elementos&quot; &quot;ella&quot; &quot;ellas&quot; ## [273] &quot;ello&quot; &quot;ellos&quot; &quot;embargo&quot; &quot;empresa&quot; ## [277] &quot;empresas&quot; &quot;en&quot; &quot;encima&quot; &quot;encontrar&quot; ## [281] &quot;encuentra&quot; &quot;encuentran&quot; &quot;encuentro&quot; &quot;energía&quot; ## [285] &quot;enero&quot; &quot;enfermedad&quot; &quot;entonces&quot; &quot;entrada&quot; ## [289] &quot;entrar&quot; &quot;entre&quot; &quot;época&quot; &quot;equipo&quot; ## [293] &quot;era&quot; &quot;eran&quot; &quot;es&quot; &quot;esa&quot; ## [297] &quot;esas&quot; &quot;escuela&quot; &quot;ese&quot; &quot;esfuerzo&quot; ## [301] &quot;eso&quot; &quot;esos&quot; &quot;espacio&quot; &quot;españa&quot; ## [305] &quot;español&quot; &quot;española&quot; &quot;españoles&quot; &quot;especial&quot; ## [309] &quot;especialmente&quot; &quot;especie&quot; &quot;espera&quot; &quot;esta&quot; ## [313] &quot;está&quot; &quot;ésta&quot; &quot;estaba&quot; &quot;estaban&quot; ## [317] &quot;estado&quot; &quot;estados&quot; &quot;estamos&quot; &quot;están&quot; ## [321] &quot;estar&quot; &quot;estas&quot; &quot;este&quot; &quot;éste&quot; ## [325] &quot;estilo&quot; &quot;esto&quot; &quot;estos&quot; &quot;estoy&quot; ## [329] &quot;estructura&quot; &quot;estudio&quot; &quot;estudios&quot; &quot;estuvo&quot; ## [333] &quot;etapa&quot; &quot;etc&quot; &quot;europa&quot; &quot;europea&quot; ## [337] &quot;evitar&quot; &quot;ex&quot; &quot;existe&quot; &quot;existen&quot; ## [341] &quot;existencia&quot; &quot;éxito&quot; &quot;experiencia&quot; &quot;explicó&quot; ## [345] &quot;expresión&quot; &quot;exterior&quot; &quot;fácil&quot; &quot;falta&quot; ## [349] &quot;familia&quot; &quot;favor&quot; &quot;fecha&quot; &quot;felipe&quot; ## [353] &quot;fernando&quot; &quot;figura&quot; &quot;fin&quot; &quot;final&quot; ## [357] &quot;finalmente&quot; &quot;fiscal&quot; &quot;flores&quot; &quot;fondo&quot; ## [361] &quot;forma&quot; &quot;formación&quot; &quot;formas&quot; &quot;francia&quot; ## [365] &quot;francisco&quot; &quot;frente&quot; &quot;fue&quot; &quot;fuego&quot; ## [369] &quot;fuentes&quot; &quot;fuera&quot; &quot;fueron&quot; &quot;fuerte&quot; ## [373] &quot;fuerza&quot; &quot;fuerzas&quot; &quot;función&quot; &quot;fútbol&quot; ## [377] &quot;futuro&quot; &quot;g&quot; &quot;garcía&quot; &quot;general&quot; ## [381] &quot;generales&quot; &quot;gente&quot; &quot;gobierno&quot; &quot;gonzález&quot; ## [385] &quot;gracias&quot; &quot;grado&quot; &quot;gran&quot; &quot;grande&quot; ## [389] &quot;grandes&quot; &quot;grupo&quot; &quot;grupos&quot; &quot;guerra&quot; ## [393] &quot;ha&quot; &quot;haber&quot; &quot;había&quot; &quot;habían&quot; ## [397] &quot;habla&quot; &quot;hablar&quot; &quot;habrá&quot; &quot;habría&quot; ## [401] &quot;hace&quot; &quot;hacen&quot; &quot;hacer&quot; &quot;hacerlo&quot; ## [405] &quot;hacia&quot; &quot;hacía&quot; &quot;haciendo&quot; &quot;han&quot; ## [409] &quot;has&quot; &quot;hasta&quot; &quot;hay&quot; &quot;haya&quot; ## [413] &quot;he&quot; &quot;hecho&quot; &quot;hechos&quot; &quot;hemos&quot; ## [417] &quot;hermano&quot; &quot;hicieron&quot; &quot;hija&quot; &quot;hijo&quot; ## [421] &quot;hijos&quot; &quot;historia&quot; &quot;hizo&quot; &quot;hombre&quot; ## [425] &quot;hombres&quot; &quot;hora&quot; &quot;horas&quot; &quot;hospital&quot; ## [429] &quot;hoy&quot; &quot;hubiera&quot; &quot;hubo&quot; &quot;humana&quot; ## [433] &quot;humano&quot; &quot;humanos&quot; &quot;i&quot; &quot;iba&quot; ## [437] &quot;idea&quot; &quot;ideas&quot; &quot;iglesia&quot; &quot;igual&quot; ## [441] &quot;ii&quot; &quot;imagen&quot; &quot;imágenes&quot; &quot;importancia&quot; ## [445] &quot;importante&quot; &quot;importantes&quot; &quot;imposible&quot; &quot;incluso&quot; ## [449] &quot;industria&quot; &quot;información&quot; &quot;informe&quot; &quot;instituciones&quot; ## [453] &quot;instituto&quot; &quot;interés&quot; &quot;intereses&quot; &quot;interior&quot; ## [457] &quot;internacional&quot; &quot;investigación&quot; &quot;ir&quot; &quot;izquierda&quot; ## [461] &quot;j&quot; &quot;jamás&quot; &quot;jefe&quot; &quot;jorge&quot; ## [465] &quot;josé&quot; &quot;joven&quot; &quot;jóvenes&quot; &quot;juan&quot; ## [469] &quot;juego&quot; &quot;juez&quot; &quot;juicio&quot; &quot;julio&quot; ## [473] &quot;junio&quot; &quot;junto&quot; &quot;justicia&quot; &quot;la&quot; ## [477] &quot;lado&quot; &quot;larga&quot; &quot;largo&quot; &quot;las&quot; ## [481] &quot;le&quot; &quot;lejos&quot; &quot;lenguaje&quot; &quot;les&quot; ## [485] &quot;ley&quot; &quot;libertad&quot; &quot;libre&quot; &quot;libro&quot; ## [489] &quot;libros&quot; &quot;líder&quot; &quot;línea&quot; &quot;llama&quot; ## [493] &quot;llamado&quot; &quot;llega&quot; &quot;llegado&quot; &quot;llegar&quot; ## [497] &quot;llegó&quot; &quot;lleva&quot; &quot;llevar&quot; &quot;lo&quot; ## [501] &quot;local&quot; &quot;lópez&quot; &quot;los&quot; &quot;lucha&quot; ## [505] &quot;luego&quot; &quot;lugar&quot; &quot;luis&quot; &quot;luz&quot; ## [509] &quot;m&quot; &quot;madre&quot; &quot;madrid&quot; &quot;mal&quot; ## [513] &quot;manera&quot; &quot;mano&quot; &quot;manos&quot; &quot;mantener&quot; ## [517] &quot;manuel&quot; &quot;mañana&quot; &quot;mar&quot; &quot;marcha&quot; ## [521] &quot;marco&quot; &quot;maría&quot; &quot;martín&quot; &quot;marzo&quot; ## [525] &quot;más&quot; &quot;materia&quot; &quot;material&quot; &quot;máximo&quot; ## [529] &quot;mayo&quot; &quot;mayor&quot; &quot;mayores&quot; &quot;mayoría&quot; ## [533] &quot;me&quot; &quot;media&quot; &quot;mediante&quot; &quot;médico&quot; ## [537] &quot;medida&quot; &quot;medidas&quot; &quot;medio&quot; &quot;medios&quot; ## [541] &quot;mejor&quot; &quot;mejores&quot; &quot;memoria&quot; &quot;menor&quot; ## [545] &quot;menos&quot; &quot;mercado&quot; &quot;mes&quot; &quot;mesa&quot; ## [549] &quot;meses&quot; &quot;metros&quot; &quot;méxico&quot; &quot;mi&quot; ## [553] &quot;mí&quot; &quot;miedo&quot; &quot;miembros&quot; &quot;mientras&quot; ## [557] &quot;miguel&quot; &quot;mil&quot; &quot;militar&quot; &quot;militares&quot; ## [561] &quot;millones&quot; &quot;ministerio&quot; &quot;ministro&quot; &quot;minutos&quot; ## [565] &quot;mira&quot; &quot;mirada&quot; &quot;mis&quot; &quot;misma&quot; ## [569] &quot;mismo&quot; &quot;mismos&quot; &quot;mitad&quot; &quot;modelo&quot; ## [573] &quot;modo&quot; &quot;momento&quot; &quot;momentos&quot; &quot;movimiento&quot; ## [577] &quot;mucha&quot; &quot;muchas&quot; &quot;mucho&quot; &quot;muchos&quot; ## [581] &quot;muerte&quot; &quot;muerto&quot; &quot;muestra&quot; &quot;mujer&quot; ## [585] &quot;mujeres&quot; &quot;mundial&quot; &quot;mundo&quot; &quot;música&quot; ## [589] &quot;muy&quot; &quot;n&quot; &quot;nacional&quot; &quot;nada&quot; ## [593] &quot;nadie&quot; &quot;natural&quot; &quot;naturaleza&quot; &quot;necesario&quot; ## [597] &quot;necesidad&quot; &quot;negro&quot; &quot;ni&quot; &quot;ningún&quot; ## [601] &quot;ninguna&quot; &quot;niño&quot; &quot;niños&quot; &quot;nivel&quot; ## [605] &quot;niveles&quot; &quot;no&quot; &quot;noche&quot; &quot;nombre&quot; ## [609] &quot;norte&quot; &quot;nos&quot; &quot;nosotros&quot; &quot;noviembre&quot; ## [613] &quot;nuestra&quot; &quot;nuestras&quot; &quot;nuestro&quot; &quot;nuestros&quot; ## [617] &quot;nueva&quot; &quot;nuevas&quot; &quot;nuevo&quot; &quot;nuevos&quot; ## [621] &quot;número&quot; &quot;nunca&quot; &quot;o&quot; &quot;objetivo&quot; ## [625] &quot;objeto&quot; &quot;obra&quot; &quot;obras&quot; &quot;obstante&quot; ## [629] &quot;ocasión&quot; &quot;ocasiones&quot; &quot;ocho&quot; &quot;octubre&quot; ## [633] &quot;oficial&quot; &quot;ojos&quot; &quot;operación&quot; &quot;opinión&quot; ## [637] &quot;oposición&quot; &quot;orden&quot; &quot;organización&quot; &quot;origen&quot; ## [641] &quot;oro&quot; &quot;otra&quot; &quot;otras&quot; &quot;otro&quot; ## [645] &quot;otros&quot; &quot;p&quot; &quot;pablo&quot; &quot;paciente&quot; ## [649] &quot;pacientes&quot; &quot;padre&quot; &quot;padres&quot; &quot;país&quot; ## [653] &quot;países&quot; &quot;palabra&quot; &quot;palabras&quot; &quot;papel&quot; ## [657] &quot;para&quot; &quot;parece&quot; &quot;parecía&quot; &quot;parís&quot; ## [661] &quot;parte&quot; &quot;partes&quot; &quot;participación&quot; &quot;particular&quot; ## [665] &quot;partido&quot; &quot;partidos&quot; &quot;partir&quot; &quot;pasa&quot; ## [669] &quot;pasado&quot; &quot;pasar&quot; &quot;paso&quot; &quot;pasó&quot; ## [673] &quot;paz&quot; &quot;pedro&quot; &quot;película&quot; &quot;pensar&quot; ## [677] &quot;peor&quot; &quot;pequeña&quot; &quot;pequeño&quot; &quot;perdido&quot; ## [681] &quot;período&quot; &quot;permite&quot; &quot;pero&quot; &quot;persona&quot; ## [685] &quot;personal&quot; &quot;personas&quot; &quot;pesar&quot; &quot;pese&quot; ## [689] &quot;pesetas&quot; &quot;peso&quot; &quot;pie&quot; &quot;piel&quot; ## [693] &quot;plan&quot; &quot;plaza&quot; &quot;plazo&quot; &quot;población&quot; ## [697] &quot;poco&quot; &quot;pocos&quot; &quot;podemos&quot; &quot;poder&quot; ## [701] &quot;podía&quot; &quot;podrá&quot; &quot;podría&quot; &quot;policía&quot; ## [705] &quot;política&quot; &quot;políticas&quot; &quot;político&quot; &quot;políticos&quot; ## [709] &quot;pone&quot; &quot;poner&quot; &quot;popular&quot; &quot;por&quot; ## [713] &quot;porque&quot; &quot;posibilidad&quot; &quot;posibilidades&quot; &quot;posible&quot; ## [717] &quot;posición&quot; &quot;pp&quot; &quot;práctica&quot; &quot;precio&quot; ## [721] &quot;precios&quot; &quot;precisamente&quot; &quot;pregunta&quot; &quot;premio&quot; ## [725] &quot;prensa&quot; &quot;presencia&quot; &quot;presenta&quot; &quot;presente&quot; ## [729] &quot;presidente&quot; &quot;primer&quot; &quot;primera&quot; &quot;primeras&quot; ## [733] &quot;primero&quot; &quot;primeros&quot; &quot;principal&quot; &quot;principales&quot; ## [737] &quot;principio&quot; &quot;principios&quot; &quot;problema&quot; &quot;problemas&quot; ## [741] &quot;proceso&quot; &quot;producción&quot; &quot;produce&quot; &quot;producto&quot; ## [745] &quot;productos&quot; &quot;profesional&quot; &quot;programa&quot; &quot;programas&quot; ## [749] &quot;pronto&quot; &quot;propia&quot; &quot;propio&quot; &quot;propios&quot; ## [753] &quot;propuesta&quot; &quot;próximo&quot; &quot;proyecto&quot; &quot;proyectos&quot; ## [757] &quot;prueba&quot; &quot;psoe&quot; &quot;pública&quot; &quot;público&quot; ## [761] &quot;pudo&quot; &quot;pueblo&quot; &quot;pueda&quot; &quot;puede&quot; ## [765] &quot;pueden&quot; &quot;puedo&quot; &quot;puerta&quot; &quot;puerto&quot; ## [769] &quot;pues&quot; &quot;puesto&quot; &quot;punto&quot; &quot;puntos&quot; ## [773] &quot;puso&quot; &quot;que&quot; &quot;qué&quot; &quot;queda&quot; ## [777] &quot;quedó&quot; &quot;quería&quot; &quot;quien&quot; &quot;quién&quot; ## [781] &quot;quienes&quot; &quot;quiere&quot; &quot;quiero&quot; &quot;quizá&quot; ## [785] &quot;r&quot; &quot;radio&quot; &quot;rafael&quot; &quot;razón&quot; ## [789] &quot;razones&quot; &quot;real&quot; &quot;realidad&quot; &quot;realizar&quot; ## [793] &quot;recuerdo&quot; &quot;recursos&quot; &quot;reforma&quot; &quot;régimen&quot; ## [797] &quot;región&quot; &quot;relación&quot; &quot;relaciones&quot; &quot;república&quot; ## [801] &quot;respecto&quot; &quot;respuesta&quot; &quot;resto&quot; &quot;resulta&quot; ## [805] &quot;resultado&quot; &quot;resultados&quot; &quot;reunión&quot; &quot;revolución&quot; ## [809] &quot;rey&quot; &quot;riesgo&quot; &quot;río&quot; &quot;rodríguez&quot; ## [813] &quot;rosa&quot; &quot;s&quot; &quot;sabe&quot; &quot;saber&quot; ## [817] &quot;sabía&quot; &quot;sala&quot; &quot;salida&quot; &quot;salir&quot; ## [821] &quot;salud&quot; &quot;san&quot; &quot;sangre&quot; &quot;santa&quot; ## [825] &quot;santiago&quot; &quot;se&quot; &quot;sé&quot; &quot;sea&quot; ## [829] &quot;sean&quot; &quot;secretario&quot; &quot;sector&quot; &quot;sectores&quot; ## [833] &quot;seguir&quot; &quot;según&quot; &quot;segunda&quot; &quot;segundo&quot; ## [837] &quot;seguridad&quot; &quot;seguro&quot; &quot;seis&quot; &quot;semana&quot; ## [841] &quot;semanas&quot; &quot;sentido&quot; &quot;señaló&quot; &quot;señor&quot; ## [845] &quot;señora&quot; &quot;septiembre&quot; &quot;ser&quot; &quot;será&quot; ## [849] &quot;serán&quot; &quot;sería&quot; &quot;serie&quot; &quot;servicio&quot; ## [853] &quot;servicios&quot; &quot;si&quot; &quot;sí&quot; &quot;sido&quot; ## [857] &quot;siempre&quot; &quot;siendo&quot; &quot;siete&quot; &quot;siglo&quot; ## [861] &quot;sigue&quot; &quot;siguiente&quot; &quot;siguientes&quot; &quot;silencio&quot; ## [865] &quot;sin&quot; &quot;sino&quot; &quot;siquiera&quot; &quot;sistema&quot; ## [869] &quot;sistemas&quot; &quot;situación&quot; &quot;sobre&quot; &quot;social&quot; ## [873] &quot;sociales&quot; &quot;socialista&quot; &quot;sociedad&quot; &quot;sol&quot; ## [877] &quot;sola&quot; &quot;solamente&quot; &quot;solo&quot; &quot;sólo&quot; ## [881] &quot;solución&quot; &quot;somos&quot; &quot;son&quot; &quot;soy&quot; ## [885] &quot;su&quot; &quot;suelo&quot; &quot;sueño&quot; &quot;suerte&quot; ## [889] &quot;suficiente&quot; &quot;superior&quot; &quot;supuesto&quot; &quot;sur&quot; ## [893] &quot;sus&quot; &quot;tal&quot; &quot;tales&quot; &quot;también&quot; ## [897] &quot;tampoco&quot; &quot;tan&quot; &quot;tanto&quot; &quot;tarde&quot; ## [901] &quot;te&quot; &quot;teatro&quot; &quot;técnica&quot; &quot;televisión&quot; ## [905] &quot;tema&quot; &quot;temas&quot; &quot;tendrá&quot; &quot;tenemos&quot; ## [909] &quot;tener&quot; &quot;tengo&quot; &quot;tenía&quot; &quot;tenían&quot; ## [913] &quot;tenido&quot; &quot;teoría&quot; &quot;tercera&quot; &quot;términos&quot; ## [917] &quot;texto&quot; &quot;tiempo&quot; &quot;tiempos&quot; &quot;tiene&quot; ## [921] &quot;tienen&quot; &quot;tierra&quot; &quot;tipo&quot; &quot;tipos&quot; ## [925] &quot;título&quot; &quot;toda&quot; &quot;todas&quot; &quot;todavía&quot; ## [929] &quot;todo&quot; &quot;todos&quot; &quot;toma&quot; &quot;tomar&quot; ## [933] &quot;torno&quot; &quot;total&quot; &quot;trabajadores&quot; &quot;trabajar&quot; ## [937] &quot;trabajo&quot; &quot;tras&quot; &quot;trata&quot; &quot;tratamiento&quot; ## [941] &quot;través&quot; &quot;tres&quot; &quot;tribunal&quot; &quot;tu&quot; ## [945] &quot;tú&quot; &quot;tuvo&quot; &quot;u&quot; &quot;última&quot; ## [949] &quot;último&quot; &quot;últimos&quot; &quot;un&quot; &quot;una&quot; ## [953] &quot;unas&quot; &quot;única&quot; &quot;único&quot; &quot;unidad&quot; ## [957] &quot;unidos&quot; &quot;unión&quot; &quot;universidad&quot; &quot;uno&quot; ## [961] &quot;unos&quot; &quot;uso&quot; &quot;usted&quot; &quot;va&quot; ## [965] &quot;valor&quot; &quot;valores&quot; &quot;vamos&quot; &quot;van&quot; ## [969] &quot;varias&quot; &quot;varios&quot; &quot;ve&quot; &quot;veces&quot; ## [973] &quot;ver&quot; &quot;verdad&quot; &quot;vez&quot; &quot;vía&quot; ## [977] &quot;viaje&quot; &quot;victoria&quot; &quot;vida&quot; &quot;viejo&quot; ## [981] &quot;viene&quot; &quot;vino&quot; &quot;vio&quot; &quot;violencia&quot; ## [985] &quot;visita&quot; &quot;vista&quot; &quot;visto&quot; &quot;vivir&quot; ## [989] &quot;voluntad&quot; &quot;volver&quot; &quot;volvió&quot; &quot;voy&quot; ## [993] &quot;voz&quot; &quot;vuelta&quot; &quot;vuelve&quot; &quot;y&quot; ## [997] &quot;ya&quot; &quot;yo&quot; &quot;zona&quot; &quot;zonas&quot; # Encuentra todas las palabras que contengan al menos una vocal, y luego niégalo sin_vocales_1 &lt;- !str_detect(palabras, &quot;[aáeéiíoóuúúü]&quot;) sin_vocalesncuentra todas las palabras consistentes solo en consonantes (no vocales) sin_vocales_2 &lt;- str_detect(palabras, &quot;^[^aáeéiíoóuúúü]+$&quot;) identical(sin_vocales_1, sin_vocales_2) ## [1] TRUE Suma la cantidad de palabras que no tienen vocales? library(tidyverse) df &lt;- tibble( palabra = palabras, i = seq_along(palabra) ) ## poner los datos en un dataframe df %&gt;% filter(str_detect(palabras, &quot;x$&quot;)) # filtrar todas la palabras para solamente las terminan en **x** ## # A tibble: 1 × 2 ## palabra i ## &lt;chr&gt; &lt;int&gt; ## 1 ex 338 df %&gt;% filter(str_detect(palabras, &quot;z$&quot;)) # filtrar todas la palabras para solamente las terminan en **z** ## # A tibble: 10 × 2 ## palabra i ## &lt;chr&gt; &lt;int&gt; ## 1 capaz 108 ## 2 diez 232 ## 3 gonzález 384 ## 4 juez 470 ## 5 lópez 502 ## 6 luz 508 ## 7 paz 673 ## 8 rodríguez 812 ## 9 vez 975 ## 10 voz 993 Contar cuantas “a” hay en cada palabra x= c( &quot;Piña&quot;, &quot;Manzana&quot;, &quot;Toronja&quot;, &quot;Jugo&quot;) str_count(x, &quot;a&quot;) ## [1] 1 3 1 0 # En promedio, ¿cuántas vocales hay por palabra? mean(str_count(palabras, &quot;[aáeéiíoóuúü]&quot;)) ## [1] 2.72 mean(str_count(palabras, &quot;[x]&quot;)) ## [1] 0.013 df %&gt;% mutate( vocales = str_count(palabra, &quot;[aáeéiíoóuúü]&quot;), # Cuenta cuantas vocales consonantes = str_count(palabra, &quot;[^aáeéiíoóuúü]&quot;) # cuenta cuantos consonantes ) ## # A tibble: 1,000 × 4 ## palabra i vocales consonantes ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; ## 1 a 1 1 0 ## 2 abril 2 2 3 ## 3 acción 3 3 3 ## 4 acciones 4 4 4 ## 5 acerca 5 3 3 ## 6 actitud 6 3 4 ## 7 actividad 7 4 5 ## 8 actividades 8 5 6 ## 9 acto 9 2 2 ## 10 actual 10 3 3 ## # ℹ 990 more rows los puntos y caracteres especiales Ejercicios: Hacer los ejercicios en la sección 14.2.7.1 del libro en español 21.8 Anclas ^ al principio $ al final Ejercicios: Hacer los ejercicios en la sección 14.2.8.1 del libro en español 21.9 Clases de caracteres y alternativas [abc] [^abc] $ . | ? * + ( ) [ { str_view(c(&quot;cómo&quot;, &quot;como&quot;, &quot;Raymond&quot;), &quot;c(ó|o)mo&quot;) ## [1] │ &lt;cómo&gt; ## [2] │ &lt;como&gt; Ejercicios: Hacer los ejercicios en la sección 14.2.9.1 del libro en español 21.10 Repetición ?, 0 o 1, precencia o auscencia +, 1 o más *, 0 o más str_view() {n} : exactamente n {n, }: n o más { , m}: no más de m {n, m}: entre n y m {n, m}?: la cadena más larga {n, m}+?: la cadena más corta Ejercicios: Hacer los ejercicios en la sección 14.2.10.1 del libro en español 21.11 Agrupamiento y referencias previas str_view(frutas, “(..)\\1”, match=TRUE) Ejercicios: Hacer los ejercicios en la sección 14.2.11.1 del libro en español 21.12 Herramientas: Objetivos Determinar qué cadenas coinciden con un patrón. Encontrar la posición de una coincidencia. Extraer el contenido de las coincidencias. Remplazar coincidencias con nuevos valores. Dividir una cadena de acuerdo a una coincidencia. 21.12.1 Detectar coincidencias str_detect(x, “e”) library(datos) #fruit head(palabras) ## [1] &quot;a&quot; &quot;abril&quot; &quot;acción&quot; &quot;acciones&quot; &quot;acerca&quot; &quot;actitud&quot; # Encuentra todas las palabras que contengan al menos una vocal, y luego niégalo sin_vocales_1 &lt;- !str_detect(palabras, &quot;[aáeéiíoóuúúü]&quot;) #sin_vocales_1 # Encuentra todas las palabras consistentes solo en consonantes (no vocales) sin_vocales_2 &lt;- str_detect(palabras, &quot;^[^aáeéiíoóuúúü]+$&quot;) #sin_vocales_1 identical(sin_vocales_1, sin_vocales_2) ## [1] TRUE #&gt; [1] TRUE str_subset() seq_along() str_count() Ejercicios: Hacer los ejercicios en la sección 14.3.2 del libro en español 21.13 Extraer coincidencias str_extract() str_extract_all() Ejercicios: Hacer los ejercicios en la sección 14.3.3.1 del libro en español 21.14 Coincidencias agrupadas: str_match* sustantivo &lt;- &quot;(el|la|los|las|lo|un|una|unos|unas) ([^ ]+)&quot; tiene_sustantivo &lt;- oraciones %&gt;% str_subset(sustantivo) #tiene_sustantivo tiene_sustantivo %&gt;% str_extract(sustantivo) ## [1] &quot;los de&quot; &quot;el camión&quot; &quot;la mejor&quot; &quot;la cuenta&quot; &quot;las ruinas.&quot; ## [6] &quot;la hoja&quot; &quot;la cocina.&quot; &quot;la taza&quot; &quot;el tanque.&quot; &quot;el calor&quot; ## [11] &quot;el aire&quot; &quot;lo en&quot; &quot;el papel&quot; &quot;la parte&quot; &quot;el sofá&quot; ## [16] &quot;lo de&quot; &quot;lo curó&quot; &quot;los actores.&quot; &quot;la azul&quot; &quot;el banco&quot; ## [21] &quot;una llama&quot; &quot;la cabeza.&quot; &quot;la ventana.&quot; &quot;la hierba&quot; &quot;el sol&quot; ## [26] &quot;el lugar&quot; &quot;el sofá&quot; &quot;un suéter&quot; &quot;el gráfico&quot; &quot;los encajes&quot; ## [31] &quot;el verde&quot; &quot;la caja&quot; &quot;la pistola&quot; &quot;los niños&quot; &quot;una delgada&quot; ## [36] &quot;lo en&quot; &quot;la hierba&quot; &quot;la primavera&quot; &quot;la es&quot; #&gt; [1] &quot;los de&quot; &quot;el camión&quot; &quot;la mejor&quot; &quot;la cuenta&quot; &quot;las ruinas.&quot; #&gt; [6] &quot;la hoja&quot; &quot;la cocina.&quot; &quot;la taza&quot; &quot;el tanque.&quot; &quot;el calor&quot; Ejercicios: Hacer los ejercicios en la sección 14.3.4.1 del libro en español 21.15 Remplazar coincidencias str_replace() str_replace_all() Ejercicios: Hacer los ejercicios en la sección 14.3.5.1 del libro en español 21.16 Divisiones str_split() str_split(” “, simplify=TRUE) str_split(x, boundery(“word”))[[1]] Ejercicios: Hacer los ejercicios en la sección 14.3.6.1 del libro en español 21.17 Otro tipos de patrones regex(“x”, ignore_case=TRUE) seperar números telefonicos 21.18 stringi: Ejercicios: Hacer los ejercicios en la sección 14.3.6.1 del libro en español Buscar 3 funciones en stringi y aplica y explica las funciones con un set de datos. "],["hex-stickers.html", "Capítulo22 Hex Stickers 22.1 La función y los valores “default” 22.2 Ejemplo de Crear un Hex con un gatito", " Capítulo22 Hex Stickers ## [1] &quot;2024-11-07&quot; library(hexSticker) library(magick) library(sysfonts) library(tidyverse) 22.1 La función y los valores “default” sticker( subplot, s_x = 0.8, s_y = 0.75, s_width = 0.4, s_height = 0.5, package, p_x = 1, p_y = 1.4, p_color = &quot;#FFFFFF&quot;, p_family = &quot;Aller_Rg&quot;, p_fontface = &quot;plain&quot;, p_size = 8, h_size = 1.2, h_fill = &quot;#1881C2&quot;, h_color = &quot;#87B13F&quot;, spotlight = FALSE, l_x = 1, l_y = 0.5, l_width = 3, l_height = 3, l_alpha = 0.4, url = &quot;&quot;, u_x = 1, u_y = 0.08, u_color = &quot;black&quot;, u_family = &quot;Aller_Rg&quot;, u_size = 1.5, u_angle = 30, white_around_sticker = FALSE, ..., filename = paste0(package, &quot;.png&quot;), asp = 1, dpi = 300 ) Arguments library(gt) gt(argumentos) #xyjrcjbqtt table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #xyjrcjbqtt thead, #xyjrcjbqtt tbody, #xyjrcjbqtt tfoot, #xyjrcjbqtt tr, #xyjrcjbqtt td, #xyjrcjbqtt th { border-style: none; } #xyjrcjbqtt p { margin: 0; padding: 0; } #xyjrcjbqtt .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #xyjrcjbqtt .gt_caption { padding-top: 4px; padding-bottom: 4px; } #xyjrcjbqtt .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #xyjrcjbqtt .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #xyjrcjbqtt .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #xyjrcjbqtt .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #xyjrcjbqtt .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #xyjrcjbqtt .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #xyjrcjbqtt .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #xyjrcjbqtt .gt_column_spanner_outer:first-child { padding-left: 0; } #xyjrcjbqtt .gt_column_spanner_outer:last-child { padding-right: 0; } #xyjrcjbqtt .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #xyjrcjbqtt .gt_spanner_row { border-bottom-style: hidden; } #xyjrcjbqtt .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #xyjrcjbqtt .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #xyjrcjbqtt .gt_from_md > :first-child { margin-top: 0; } #xyjrcjbqtt .gt_from_md > :last-child { margin-bottom: 0; } #xyjrcjbqtt .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #xyjrcjbqtt .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #xyjrcjbqtt .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #xyjrcjbqtt .gt_row_group_first td { border-top-width: 2px; } #xyjrcjbqtt .gt_row_group_first th { border-top-width: 2px; } #xyjrcjbqtt .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #xyjrcjbqtt .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #xyjrcjbqtt .gt_first_summary_row.thick { border-top-width: 2px; } #xyjrcjbqtt .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #xyjrcjbqtt .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #xyjrcjbqtt .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #xyjrcjbqtt .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #xyjrcjbqtt .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #xyjrcjbqtt .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #xyjrcjbqtt .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #xyjrcjbqtt .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #xyjrcjbqtt .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #xyjrcjbqtt .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #xyjrcjbqtt .gt_left { text-align: left; } #xyjrcjbqtt .gt_center { text-align: center; } #xyjrcjbqtt .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #xyjrcjbqtt .gt_font_normal { font-weight: normal; } #xyjrcjbqtt .gt_font_bold { font-weight: bold; } #xyjrcjbqtt .gt_font_italic { font-style: italic; } #xyjrcjbqtt .gt_super { font-size: 65%; } #xyjrcjbqtt .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #xyjrcjbqtt .gt_asterisk { font-size: 100%; vertical-align: 0; } #xyjrcjbqtt .gt_indent_1 { text-indent: 5px; } #xyjrcjbqtt .gt_indent_2 { text-indent: 10px; } #xyjrcjbqtt .gt_indent_3 { text-indent: 15px; } #xyjrcjbqtt .gt_indent_4 { text-indent: 20px; } #xyjrcjbqtt .gt_indent_5 { text-indent: 25px; } #xyjrcjbqtt .katex-display { display: inline-flex !important; margin-bottom: 0.75em !important; } #xyjrcjbqtt div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after { height: 0px !important; } Función Descripción subplot subplot s_x x position for subplot s_y y position for subplot s_width width for subplot s_height height for subplot package package name p_x x position for package name p_y y position for package name p_color color for package name p_family font family for package name p_fontface fontface for package name p_size font size for package name h_size size for hexagon border h_fill color to fill hexagon h_color color for hexagon border spotlight whether add spotlight l_x x position for spotlight l_y y position for spotlight l_width width for spotlight l_height height for spotlight l_alpha maximum alpha for spotlight url url at lower border u_x x position for url u_y y position for url u_color color for url u_family font family for url u_size text size for url u_angle angle for url white_around_sticker default to FALSE. If set to TRUE, it puts white triangles in the corners ... additional parameter to geom_pkgname filename filename to save sticker asp aspect ratio, only works if subplot is an image file dpi plot resolution Other Details, - The extension given in filename determines the graphics device that is used to render the sticker, e.g. filename = ‘sticker.png’ creates a png file and filename = ‘sticker.svg’ creates a svg file. For a list of supported graphics devices please see the documentation of ggplot2::ggsave() sysfonts::font_add_google(“Sixtyfour Convergence”) sysfonts::font_add_google(“Rubik”) sysfonts::font_add_google(“Young Serif”) ## No baja 22.2 Ejemplo de Crear un Hex con un gatito font_files() #a list of all fonts available ## path ## 1 /Library/Fonts ## 2 /System/Library/Fonts ## 3 /System/Library/Fonts ## 4 /System/Library/Fonts ## 5 /System/Library/Fonts ## 6 /System/Library/Fonts ## 7 /System/Library/Fonts ## 8 /System/Library/Fonts ## 9 /System/Library/Fonts ## 10 /System/Library/Fonts ## 11 /System/Library/Fonts ## 12 /System/Library/Fonts ## 13 /System/Library/Fonts ## 14 /System/Library/Fonts ## 15 /System/Library/Fonts ## 16 /System/Library/Fonts ## 17 /System/Library/Fonts ## 18 /System/Library/Fonts ## 19 /System/Library/Fonts ## 20 /System/Library/Fonts ## 21 /System/Library/Fonts ## 22 /System/Library/Fonts ## 23 /System/Library/Fonts ## 24 /System/Library/Fonts ## 25 /System/Library/Fonts ## 26 /System/Library/Fonts ## 27 /System/Library/Fonts ## 28 /System/Library/Fonts ## 29 /System/Library/Fonts ## 30 /System/Library/Fonts ## 31 /System/Library/Fonts ## 32 /System/Library/Fonts ## 33 /System/Library/Fonts ## 34 /System/Library/Fonts ## 35 /System/Library/Fonts ## 36 /System/Library/Fonts ## 37 /System/Library/Fonts ## 38 /System/Library/Fonts ## 39 /System/Library/Fonts ## 40 /System/Library/Fonts ## 41 /System/Library/Fonts ## 42 /System/Library/Fonts ## 43 /System/Library/Fonts ## 44 /System/Library/Fonts ## 45 /System/Library/Fonts ## 46 /System/Library/Fonts ## 47 /System/Library/Fonts ## 48 /System/Library/Fonts ## 49 /System/Library/Fonts ## 50 /System/Library/Fonts ## 51 /System/Library/Fonts ## 52 /System/Library/Fonts ## 53 /System/Library/Fonts ## 54 /System/Library/Fonts ## 55 /System/Library/Fonts/Supplemental ## 56 /System/Library/Fonts/Supplemental ## 57 /System/Library/Fonts/Supplemental ## 58 /System/Library/Fonts/Supplemental ## 59 /System/Library/Fonts/Supplemental ## 60 /System/Library/Fonts/Supplemental ## 61 /System/Library/Fonts/Supplemental ## 62 /System/Library/Fonts/Supplemental ## 63 /System/Library/Fonts/Supplemental ## 64 /System/Library/Fonts/Supplemental ## 65 /System/Library/Fonts/Supplemental ## 66 /System/Library/Fonts/Supplemental ## 67 /System/Library/Fonts/Supplemental ## 68 /System/Library/Fonts/Supplemental ## 69 /System/Library/Fonts/Supplemental ## 70 /System/Library/Fonts/Supplemental ## 71 /System/Library/Fonts/Supplemental ## 72 /System/Library/Fonts/Supplemental ## 73 /System/Library/Fonts/Supplemental ## 74 /System/Library/Fonts/Supplemental ## 75 /System/Library/Fonts/Supplemental ## 76 /System/Library/Fonts/Supplemental ## 77 /System/Library/Fonts/Supplemental ## 78 /System/Library/Fonts/Supplemental ## 79 /System/Library/Fonts/Supplemental ## 80 /System/Library/Fonts/Supplemental ## 81 /System/Library/Fonts/Supplemental ## 82 /System/Library/Fonts/Supplemental ## 83 /System/Library/Fonts/Supplemental ## 84 /System/Library/Fonts/Supplemental ## 85 /System/Library/Fonts/Supplemental ## 86 /System/Library/Fonts/Supplemental ## 87 /System/Library/Fonts/Supplemental ## 88 /System/Library/Fonts/Supplemental ## 89 /System/Library/Fonts/Supplemental ## 90 /System/Library/Fonts/Supplemental ## 91 /System/Library/Fonts/Supplemental ## 92 /System/Library/Fonts/Supplemental ## 93 /System/Library/Fonts/Supplemental ## 94 /System/Library/Fonts/Supplemental ## 95 /System/Library/Fonts/Supplemental ## 96 /System/Library/Fonts/Supplemental ## 97 /System/Library/Fonts/Supplemental ## 98 /System/Library/Fonts/Supplemental ## 99 /System/Library/Fonts/Supplemental ## 100 /System/Library/Fonts/Supplemental ## 101 /System/Library/Fonts/Supplemental ## 102 /System/Library/Fonts/Supplemental ## 103 /System/Library/Fonts/Supplemental ## 104 /System/Library/Fonts/Supplemental ## 105 /System/Library/Fonts/Supplemental ## 106 /System/Library/Fonts/Supplemental ## 107 /System/Library/Fonts/Supplemental ## 108 /System/Library/Fonts/Supplemental ## 109 /System/Library/Fonts/Supplemental ## 110 /System/Library/Fonts/Supplemental ## 111 /System/Library/Fonts/Supplemental ## 112 /System/Library/Fonts/Supplemental ## 113 /System/Library/Fonts/Supplemental ## 114 /System/Library/Fonts/Supplemental ## 115 /System/Library/Fonts/Supplemental ## 116 /System/Library/Fonts/Supplemental ## 117 /System/Library/Fonts/Supplemental ## 118 /System/Library/Fonts/Supplemental ## 119 /System/Library/Fonts/Supplemental ## 120 /System/Library/Fonts/Supplemental ## 121 /System/Library/Fonts/Supplemental ## 122 /System/Library/Fonts/Supplemental ## 123 /System/Library/Fonts/Supplemental ## 124 /System/Library/Fonts/Supplemental ## 125 /System/Library/Fonts/Supplemental ## 126 /System/Library/Fonts/Supplemental ## 127 /System/Library/Fonts/Supplemental ## 128 /System/Library/Fonts/Supplemental ## 129 /System/Library/Fonts/Supplemental ## 130 /System/Library/Fonts/Supplemental ## 131 /System/Library/Fonts/Supplemental ## 132 /System/Library/Fonts/Supplemental ## 133 /System/Library/Fonts/Supplemental ## 134 /System/Library/Fonts/Supplemental ## 135 /System/Library/Fonts/Supplemental ## 136 /System/Library/Fonts/Supplemental ## 137 /System/Library/Fonts/Supplemental ## 138 /System/Library/Fonts/Supplemental ## 139 /System/Library/Fonts/Supplemental ## 140 /System/Library/Fonts/Supplemental ## 141 /System/Library/Fonts/Supplemental ## 142 /System/Library/Fonts/Supplemental ## 143 /System/Library/Fonts/Supplemental ## 144 /System/Library/Fonts/Supplemental ## 145 /System/Library/Fonts/Supplemental ## 146 /System/Library/Fonts/Supplemental ## 147 /System/Library/Fonts/Supplemental ## 148 /System/Library/Fonts/Supplemental ## 149 /System/Library/Fonts/Supplemental ## 150 /System/Library/Fonts/Supplemental ## 151 /System/Library/Fonts/Supplemental ## 152 /System/Library/Fonts/Supplemental ## 153 /System/Library/Fonts/Supplemental ## 154 /System/Library/Fonts/Supplemental ## 155 /System/Library/Fonts/Supplemental ## 156 /System/Library/Fonts/Supplemental ## 157 /System/Library/Fonts/Supplemental ## 158 /System/Library/Fonts/Supplemental ## 159 /System/Library/Fonts/Supplemental ## 160 /System/Library/Fonts/Supplemental ## 161 /System/Library/Fonts/Supplemental ## 162 /System/Library/Fonts/Supplemental ## 163 /System/Library/Fonts/Supplemental ## 164 /System/Library/Fonts/Supplemental ## 165 /System/Library/Fonts/Supplemental ## 166 /System/Library/Fonts/Supplemental ## 167 /System/Library/Fonts/Supplemental ## 168 /System/Library/Fonts/Supplemental ## 169 /System/Library/Fonts/Supplemental ## 170 /System/Library/Fonts/Supplemental ## 171 /System/Library/Fonts/Supplemental ## 172 /System/Library/Fonts/Supplemental ## 173 /System/Library/Fonts/Supplemental ## 174 /System/Library/Fonts/Supplemental ## 175 /System/Library/Fonts/Supplemental ## 176 /System/Library/Fonts/Supplemental ## 177 /System/Library/Fonts/Supplemental ## 178 /System/Library/Fonts/Supplemental ## 179 /System/Library/Fonts/Supplemental ## 180 /System/Library/Fonts/Supplemental ## 181 /System/Library/Fonts/Supplemental ## 182 /System/Library/Fonts/Supplemental ## 183 /System/Library/Fonts/Supplemental ## 184 /System/Library/Fonts/Supplemental ## 185 /System/Library/Fonts/Supplemental ## 186 /System/Library/Fonts/Supplemental ## 187 /System/Library/Fonts/Supplemental ## 188 /System/Library/Fonts/Supplemental ## 189 /System/Library/Fonts/Supplemental ## 190 /System/Library/Fonts/Supplemental ## 191 /System/Library/Fonts/Supplemental ## 192 /System/Library/Fonts/Supplemental ## 193 /System/Library/Fonts/Supplemental ## 194 /System/Library/Fonts/Supplemental ## 195 /System/Library/Fonts/Supplemental ## 196 /System/Library/Fonts/Supplemental ## 197 /System/Library/Fonts/Supplemental ## 198 /System/Library/Fonts/Supplemental ## 199 /System/Library/Fonts/Supplemental ## 200 /System/Library/Fonts/Supplemental ## 201 /System/Library/Fonts/Supplemental ## 202 /System/Library/Fonts/Supplemental ## 203 /System/Library/Fonts/Supplemental ## 204 /System/Library/Fonts/Supplemental ## 205 /System/Library/Fonts/Supplemental ## 206 /System/Library/Fonts/Supplemental ## 207 /System/Library/Fonts/Supplemental ## 208 /System/Library/Fonts/Supplemental ## 209 /System/Library/Fonts/Supplemental ## 210 /System/Library/Fonts/Supplemental ## 211 /System/Library/Fonts/Supplemental ## 212 /System/Library/Fonts/Supplemental ## 213 /System/Library/Fonts/Supplemental ## 214 /System/Library/Fonts/Supplemental ## 215 /System/Library/Fonts/Supplemental ## 216 /System/Library/Fonts/Supplemental ## 217 /System/Library/Fonts/Supplemental ## 218 /System/Library/Fonts/Supplemental ## 219 /System/Library/Fonts/Supplemental ## 220 /System/Library/Fonts/Supplemental ## 221 /System/Library/Fonts/Supplemental ## 222 /System/Library/Fonts/Supplemental ## 223 /System/Library/Fonts/Supplemental ## 224 /System/Library/Fonts/Supplemental ## 225 /System/Library/Fonts/Supplemental ## 226 /System/Library/Fonts/Supplemental ## 227 /System/Library/Fonts/Supplemental ## 228 /System/Library/Fonts/Supplemental ## 229 /System/Library/Fonts/Supplemental ## 230 /System/Library/Fonts/Supplemental ## 231 /System/Library/Fonts/Supplemental ## 232 /System/Library/Fonts/Supplemental ## 233 /System/Library/Fonts/Supplemental ## 234 /System/Library/Fonts/Supplemental ## 235 /System/Library/Fonts/Supplemental ## 236 /System/Library/Fonts/Supplemental ## 237 /System/Library/Fonts/Supplemental ## 238 /System/Library/Fonts/Supplemental ## 239 /System/Library/Fonts/Supplemental ## 240 /System/Library/Fonts/Supplemental ## 241 /System/Library/Fonts/Supplemental ## 242 /System/Library/Fonts/Supplemental ## 243 /System/Library/Fonts/Supplemental ## 244 /System/Library/Fonts/Supplemental ## 245 /System/Library/Fonts/Supplemental ## 246 /System/Library/Fonts/Supplemental ## 247 /System/Library/Fonts/Supplemental ## 248 /System/Library/Fonts/Supplemental ## 249 /System/Library/Fonts/Supplemental ## 250 /System/Library/Fonts/Supplemental ## 251 /System/Library/Fonts/Supplemental ## 252 /System/Library/Fonts/Supplemental ## 253 /System/Library/Fonts/Supplemental ## 254 /System/Library/Fonts/Supplemental ## 255 /System/Library/Fonts/Supplemental ## 256 /System/Library/Fonts/Supplemental ## 257 /System/Library/Fonts/Supplemental ## 258 /System/Library/Fonts/Supplemental ## 259 /System/Library/Fonts/Supplemental ## 260 /System/Library/Fonts/Supplemental ## 261 /System/Library/Fonts/Supplemental ## 262 /System/Library/Fonts/Supplemental ## 263 /System/Library/Fonts/Supplemental ## 264 /System/Library/Fonts/Supplemental ## 265 /System/Library/Fonts/Supplemental ## 266 /System/Library/Fonts/Supplemental ## 267 /System/Library/Fonts/Supplemental ## 268 /System/Library/Fonts/Supplemental ## 269 /System/Library/Fonts/Supplemental ## 270 /System/Library/Fonts/Supplemental ## 271 /System/Library/Fonts/Supplemental ## 272 /System/Library/Fonts/Supplemental ## 273 /System/Library/Fonts/Supplemental ## 274 /System/Library/Fonts/Supplemental ## 275 /System/Library/Fonts/Supplemental ## 276 /System/Library/Fonts/Supplemental ## 277 /System/Library/Fonts/Supplemental ## 278 /System/Library/Fonts/Supplemental ## 279 /System/Library/Fonts/Supplemental ## 280 /System/Library/Fonts/Supplemental ## 281 /System/Library/Fonts/Supplemental ## 282 /System/Library/Fonts/Supplemental ## 283 /System/Library/Fonts/Supplemental ## 284 /System/Library/Fonts/Supplemental ## 285 /System/Library/Fonts/Supplemental ## 286 /System/Library/Fonts/Supplemental ## 287 /System/Library/Fonts/Supplemental ## 288 /System/Library/Fonts/Supplemental ## 289 /System/Library/Fonts/Supplemental ## 290 /System/Library/Fonts/Supplemental ## 291 /System/Library/Fonts/Supplemental ## 292 /System/Library/Fonts/Supplemental ## 293 /System/Library/Fonts/Supplemental ## 294 /System/Library/Fonts/Supplemental ## 295 /System/Library/Fonts/Supplemental ## 296 /System/Library/Fonts/Supplemental ## 297 /System/Library/Fonts/Supplemental ## 298 /System/Library/Fonts/Supplemental ## 299 /System/Library/Fonts/Supplemental ## 300 /System/Library/Fonts/Supplemental ## 301 /System/Library/Fonts/Supplemental ## 302 /System/Library/Fonts/Supplemental ## 303 /System/Library/Fonts/Supplemental ## 304 /System/Library/Fonts/Supplemental ## 305 /System/Library/Fonts/Supplemental ## 306 /System/Library/Fonts/Supplemental ## 307 /System/Library/Fonts/Supplemental ## 308 /System/Library/Fonts/Supplemental ## 309 /System/Library/Fonts/Supplemental ## 310 /System/Library/Fonts/Supplemental ## 311 /System/Library/Fonts/Supplemental ## 312 /System/Library/Fonts/Supplemental ## 313 /System/Library/Fonts/Supplemental ## 314 /System/Library/Fonts/Supplemental ## 315 /System/Library/Fonts/Supplemental ## 316 /System/Library/Fonts/Supplemental ## 317 /System/Library/Fonts/Supplemental ## 318 /System/Library/Fonts/Supplemental ## 319 /System/Library/Fonts/Supplemental ## 320 /System/Library/Fonts/Supplemental ## 321 /System/Library/Fonts/Supplemental ## 322 /System/Library/Fonts/Supplemental ## 323 /System/Library/Fonts/Supplemental ## 324 /System/Library/Fonts/Supplemental ## 325 /System/Library/Fonts/Supplemental ## 326 /System/Library/Fonts/Supplemental ## 327 /System/Library/Fonts/Supplemental ## 328 /System/Library/Fonts/Supplemental ## 329 /System/Library/Fonts/Supplemental ## 330 /System/Library/Fonts/Supplemental ## 331 /System/Library/Fonts/Supplemental ## 332 /System/Library/Fonts/Supplemental ## 333 /System/Library/Fonts/Supplemental ## 334 /System/Library/Fonts/Supplemental ## 335 /System/Library/Fonts/Supplemental ## 336 /System/Library/Fonts/Supplemental ## 337 /System/Library/Fonts/Supplemental ## 338 /System/Library/Fonts ## 339 /System/Library/Fonts ## 340 /System/Library/Fonts ## 341 /System/Library/Fonts ## 342 /System/Library/Fonts ## 343 /System/Library/Fonts ## 344 /System/Library/Fonts ## 345 /System/Library/Fonts ## 346 /System/Library/Fonts ## 347 /System/Library/Fonts ## 348 /System/Library/Fonts ## 349 /System/Library/Fonts ## 350 /System/Library/Fonts ## 351 /System/Library/Fonts ## 352 /System/Library/Fonts ## 353 /System/Library/Fonts ## file family ## 1 Arial Unicode.ttf Arial Unicode MS ## 2 Apple Braille Outline 6 Dot.ttf Apple Braille ## 3 Apple Braille Outline 8 Dot.ttf Apple Braille ## 4 Apple Braille Pinpoint 6 Dot.ttf Apple Braille ## 5 Apple Braille Pinpoint 8 Dot.ttf Apple Braille ## 6 Apple Braille.ttf Apple Braille ## 7 Apple Color Emoji.ttc Apple Color Emoji ## 8 Apple Symbols.ttf Apple Symbols ## 9 AppleSDGothicNeo.ttc Apple SD Gothic Neo ## 10 AquaKana.ttc .Aqua Kana ## 11 ArialHB.ttc Arial Hebrew ## 12 Avenir Next Condensed.ttc Avenir Next Condensed ## 13 Avenir Next.ttc Avenir Next ## 14 Avenir.ttc Avenir Book ## 15 Courier.ttc Courier ## 16 GeezaPro.ttc Geeza Pro ## 17 Geneva.ttf Geneva ## 18 Helvetica.ttc Helvetica ## 19 HelveticaNeue.ttc Helvetica Neue ## 20 Hiragino Sans GB.ttc Hiragino Sans GB W3 ## 21 Keyboard.ttf .Keyboard ## 22 Kohinoor.ttc Kohinoor Devanagari ## 23 KohinoorBangla.ttc Kohinoor Bangla ## 24 KohinoorGujarati.ttc Kohinoor Gujarati ## 25 KohinoorTelugu.ttc Kohinoor Telugu ## 26 LastResort.otf .LastResort ## 27 LucidaGrande.ttc Lucida Grande ## 28 MarkerFelt.ttc Marker Felt ## 29 Menlo.ttc Menlo ## 30 Monaco.ttf Monaco ## 31 MuktaMahee.ttc MuktaMahee Regular ## 32 NewYork.ttf .New York ## 33 NewYorkItalic.ttf .New York ## 34 Noteworthy.ttc Noteworthy ## 35 NotoNastaliq.ttc Noto Nastaliq Urdu ## 36 NotoSansArmenian.ttc Noto Sans Armenian Blk ## 37 NotoSansKannada.ttc Noto Sans Kannada Black ## 38 NotoSansMyanmar.ttc Noto Sans Myanmar Blk ## 39 NotoSansOriya.ttc Noto Sans Oriya ## 40 NotoSerifMyanmar.ttc Noto Serif Myanmar Blk ## 41 Optima.ttc Optima ## 42 Palatino.ttc Palatino ## 43 PingFang.ttc PingFang HK ## 44 SFArabic.ttf .SF Arabic ## 45 SFCompact.ttf .SF Compact ## 46 SFCompactItalic.ttf .SF Compact ## 47 SFCompactRounded.ttf .SF Compact Rounded ## 48 SFNS.ttf System Font ## 49 SFNSItalic.ttf System Font ## 50 SFNSMono.ttf .SF NS Mono ## 51 SFNSMonoItalic.ttf .SF NS Mono ## 52 SFNSRounded.ttf .SF NS Rounded ## 53 STHeiti Light.ttc Heiti TC ## 54 STHeiti Medium.ttc Heiti TC ## 55 Academy Engraved LET Fonts.ttf Academy Engraved LET ## 56 Al Nile.ttc Al Nile ## 57 Al Tarikh.ttc Al Tarikh ## 58 AlBayan.ttc Al Bayan ## 59 AmericanTypewriter.ttc American Typewriter ## 60 Andale Mono.ttf Andale Mono ## 61 Apple Chancery.ttf Apple Chancery ## 62 AppleGothic.ttf AppleGothic ## 63 AppleMyungjo.ttf AppleMyungjo ## 64 Arial Black.ttf Arial Black ## 65 Arial Bold Italic.ttf Arial ## 66 Arial Bold.ttf Arial ## 67 Arial Italic.ttf Arial ## 68 Arial Narrow Bold Italic.ttf Arial Narrow ## 69 Arial Narrow Bold.ttf Arial Narrow ## 70 Arial Narrow Italic.ttf Arial Narrow ## 71 Arial Narrow.ttf Arial Narrow ## 72 Arial Rounded Bold.ttf Arial Rounded MT Bold ## 73 Arial Unicode.ttf Arial Unicode MS ## 74 Arial.ttf Arial ## 75 Athelas.ttc Athelas ## 76 Ayuthaya.ttf Ayuthaya ## 77 Baghdad.ttc Baghdad ## 78 Bangla MN.ttc Bangla MN ## 79 Bangla Sangam MN.ttc Bangla Sangam MN ## 80 Baskerville.ttc Baskerville ## 81 Beirut.ttc Beirut ## 82 BigCaslon.ttf Big Caslon ## 83 Bodoni 72 OS.ttc Bodoni 72 Oldstyle ## 84 Bodoni 72 Smallcaps Book.ttf Bodoni 72 Smallcaps ## 85 Bodoni 72.ttc Bodoni 72 ## 86 Bodoni Ornaments.ttf Bodoni Ornaments ## 87 Bradley Hand Bold.ttf Bradley Hand ## 88 Brush Script.ttf Brush Script MT ## 89 Chalkboard.ttc Chalkboard ## 90 ChalkboardSE.ttc Chalkboard SE ## 91 Chalkduster.ttf Chalkduster ## 92 Charter.ttc Charter ## 93 Cochin.ttc Cochin ## 94 Comic Sans MS Bold.ttf Comic Sans MS ## 95 Comic Sans MS.ttf Comic Sans MS ## 96 Copperplate.ttc Copperplate ## 97 Corsiva.ttc Corsiva Hebrew ## 98 Courier New Bold Italic.ttf Courier New ## 99 Courier New Bold.ttf Courier New ## 100 Courier New Italic.ttf Courier New ## 101 Courier New.ttf Courier New ## 102 Damascus.ttc Damascus ## 103 DecoTypeNaskh.ttc DecoType Naskh ## 104 Devanagari Sangam MN.ttc Devanagari Sangam MN ## 105 DevanagariMT.ttc Devanagari MT ## 106 Didot.ttc Didot ## 107 DIN Alternate Bold.ttf DIN Alternate ## 108 DIN Condensed Bold.ttf DIN Condensed ## 109 Diwan Kufi.ttc Diwan Kufi ## 110 Diwan Thuluth.ttf Diwan Thuluth ## 111 EuphemiaCAS.ttc Euphemia UCAS ## 112 Farah.ttc Farah ## 113 Farisi.ttf Farisi ## 114 Futura.ttc Futura ## 115 Galvji.ttc Galvji ## 116 Georgia Bold Italic.ttf Georgia ## 117 Georgia Bold.ttf Georgia ## 118 Georgia Italic.ttf Georgia ## 119 Georgia.ttf Georgia ## 120 GillSans.ttc Gill Sans ## 121 Gujarati Sangam MN.ttc Gujarati Sangam MN ## 122 GujaratiMT.ttc Gujarati MT ## 123 Gurmukhi MN.ttc Gurmukhi MN ## 124 Gurmukhi Sangam MN.ttc Gurmukhi Sangam MN ## 125 Gurmukhi.ttf Gurmukhi MT ## 126 Herculanum.ttf Herculanum ## 127 Hoefler Text Ornaments.ttf Hoefler Text Ornaments ## 128 Hoefler Text.ttc Hoefler Text ## 129 Impact.ttf Impact ## 130 InaiMathi-MN.ttc InaiMathi ## 131 Iowan Old Style.ttc Iowan Old Style ## 132 ITFDevanagari.ttc ITF Devanagari ## 133 Kailasa.ttc Kailasa ## 134 Kannada MN.ttc Kannada MN ## 135 Kannada Sangam MN.ttc Kannada Sangam MN ## 136 Kefa.ttc Kefa ## 137 Khmer MN.ttc Khmer MN ## 138 Khmer Sangam MN.ttf Khmer Sangam MN ## 139 Kokonor.ttf Kokonor ## 140 Krungthep.ttf Krungthep ## 141 KufiStandardGK.ttc KufiStandardGK ## 142 Lao MN.ttc Lao MN ## 143 Lao Sangam MN.ttf Lao Sangam MN ## 144 Luminari.ttf Luminari ## 145 Malayalam MN.ttc Malayalam MN ## 146 Malayalam Sangam MN.ttc Malayalam Sangam MN ## 147 Marion.ttc Marion ## 148 Microsoft Sans Serif.ttf Microsoft Sans Serif ## 149 Mishafi Gold.ttf Mishafi Gold ## 150 Mishafi.ttf Mishafi ## 151 Mshtakan.ttc Mshtakan ## 152 Muna.ttc Muna ## 153 Myanmar MN.ttc Myanmar MN ## 154 Myanmar Sangam MN.ttc Myanmar Sangam MN ## 155 Nadeem.ttc Nadeem ## 156 NewPeninimMT.ttc New Peninim MT ## 157 NISC18030.ttf GB18030 Bitmap ## 158 NotoSansAdlam-Regular.ttf Noto Sans Adlam ## 159 NotoSansAvestan-Regular.ttf Noto Sans Avestan ## 160 NotoSansBamum-Regular.ttf Noto Sans Bamum ## 161 NotoSansBassaVah-Regular.ttf Noto Sans Bassa Vah ## 162 NotoSansBatak-Regular.ttf Noto Sans Batak ## 163 NotoSansBhaiksuki-Regular.ttf Noto Sans Bhaiksuki ## 164 NotoSansBrahmi-Regular.ttf Noto Sans Brahmi ## 165 NotoSansBuginese-Regular.ttf Noto Sans Buginese ## 166 NotoSansBuhid-Regular.ttf Noto Sans Buhid ## 167 NotoSansCarian-Regular.ttf Noto Sans Carian ## 168 NotoSansCaucasianAlbanian-Regular.ttf Noto Sans CaucAlban ## 169 NotoSansChakma-Regular.ttf Noto Sans Chakma ## 170 NotoSansCham-Regular.ttf Noto Sans Cham ## 171 NotoSansCoptic-Regular.ttf Noto Sans Coptic ## 172 NotoSansCuneiform-Regular.ttf Noto Sans Cuneiform ## 173 NotoSansCypriot-Regular.ttf Noto Sans Cypriot ## 174 NotoSansDuployan-Regular.ttf Noto Sans Duployan ## 175 NotoSansEgyptianHieroglyphs-Regular.ttf Noto Sans EgyptHiero ## 176 NotoSansElbasan-Regular.ttf Noto Sans Elbasan ## 177 NotoSansGlagolitic-Regular.ttf Noto Sans Glagolitic ## 178 NotoSansGothic-Regular.ttf Noto Sans Gothic ## 179 NotoSansGunjalaGondi-Regular.otf Noto Sans Gunjala Gondi ## 180 NotoSansHanifiRohingya-Regular.ttf Noto Sans HanifiRohg ## 181 NotoSansHanunoo-Regular.ttf Noto Sans Hanunoo ## 182 NotoSansHatran-Regular.ttf Noto Sans Hatran ## 183 NotoSansImperialAramaic-Regular.ttf Noto Sans ImpAramaic ## 184 NotoSansInscriptionalPahlavi-Regular.ttf Noto Sans InsPahlavi ## 185 NotoSansInscriptionalParthian-Regular.ttf Noto Sans InsParthi ## 186 NotoSansJavanese-Regular.otf Noto Sans Javanese ## 187 NotoSansKaithi-Regular.ttf Noto Sans Kaithi ## 188 NotoSansKayahLi-Regular.ttf Noto Sans Kayah Li ## 189 NotoSansKharoshthi-Regular.ttf Noto Sans Kharoshthi ## 190 NotoSansKhojki-Regular.ttf Noto Sans Khojki ## 191 NotoSansKhudawadi-Regular.ttf Noto Sans Khudawadi ## 192 NotoSansLepcha-Regular.ttf Noto Sans Lepcha ## 193 NotoSansLimbu-Regular.ttf Noto Sans Limbu ## 194 NotoSansLinearA-Regular.ttf Noto Sans Linear A ## 195 NotoSansLinearB-Regular.ttf Noto Sans Linear B ## 196 NotoSansLisu-Regular.ttf Noto Sans Lisu ## 197 NotoSansLycian-Regular.ttf Noto Sans Lycian ## 198 NotoSansLydian-Regular.ttf Noto Sans Lydian ## 199 NotoSansMahajani-Regular.ttf Noto Sans Mahajani ## 200 NotoSansMandaic-Regular.ttf Noto Sans Mandaic ## 201 NotoSansManichaean-Regular.ttf Noto Sans Manichaean ## 202 NotoSansMarchen-Regular.ttf Noto Sans Marchen ## 203 NotoSansMasaramGondi-Regular.otf Noto Sans Masaram Gondi ## 204 NotoSansMeeteiMayek-Regular.ttf Noto Sans MeeteiMayek ## 205 NotoSansMendeKikakui-Regular.ttf Noto Sans Mende Kikakui ## 206 NotoSansMeroitic-Regular.ttf Noto Sans Meroitic ## 207 NotoSansMiao-Regular.ttf Noto Sans Miao ## 208 NotoSansModi-Regular.ttf Noto Sans Modi ## 209 NotoSansMongolian-Regular.ttf Noto Sans Mongolian ## 210 NotoSansMro-Regular.ttf Noto Sans Mro ## 211 NotoSansMultani-Regular.ttf Noto Sans Multani ## 212 NotoSansNabataean-Regular.ttf Noto Sans Nabataean ## 213 NotoSansNewa-Regular.ttf Noto Sans Newa ## 214 NotoSansNewTaiLue-Regular.ttf Noto Sans NewTaiLue ## 215 NotoSansNKo-Regular.ttf Noto Sans NKo ## 216 NotoSansOlChiki-Regular.ttf Noto Sans Ol Chiki ## 217 NotoSansOldHungarian-Regular.ttf Noto Sans OldHung ## 218 NotoSansOldItalic-Regular.ttf Noto Sans Old Italic ## 219 NotoSansOldNorthArabian-Regular.ttf Noto Sans OldNorArab ## 220 NotoSansOldPermic-Regular.ttf Noto Sans Old Permic ## 221 NotoSansOldPersian-Regular.ttf Noto Sans OldPersian ## 222 NotoSansOldSouthArabian-Regular.ttf Noto Sans OldSouArab ## 223 NotoSansOldTurkic-Regular.ttf Noto Sans Old Turkic ## 224 NotoSansOsage-Regular.ttf Noto Sans Osage ## 225 NotoSansOsmanya-Regular.ttf Noto Sans Osmanya ## 226 NotoSansPahawhHmong-Regular.ttf Noto Sans Pahawh Hmong ## 227 NotoSansPalmyrene-Regular.ttf Noto Sans Palmyrene ## 228 NotoSansPauCinHau-Regular.ttf Noto Sans PauCinHau ## 229 NotoSansPhagsPa-Regular.ttf Noto Sans PhagsPa ## 230 NotoSansPhoenician-Regular.ttf Noto Sans Phoenician ## 231 NotoSansPsalterPahlavi-Regular.ttf Noto Sans PsaPahlavi ## 232 NotoSansRejang-Regular.ttf Noto Sans Rejang ## 233 NotoSansSamaritan-Regular.ttf Noto Sans Samaritan ## 234 NotoSansSaurashtra-Regular.ttf Noto Sans Saurashtra ## 235 NotoSansSharada-Regular.ttf Noto Sans Sharada ## 236 NotoSansSiddham-Regular.ttf Noto Sans Siddham ## 237 NotoSansSoraSompeng-Regular.ttf Noto Sans SoraSomp ## 238 NotoSansSundanese-Regular.ttf Noto Sans Sundanese ## 239 NotoSansSylotiNagri-Regular.ttf Noto Sans Syloti Nagri ## 240 NotoSansSyriac-Regular.ttf Noto Sans Syriac ## 241 NotoSansTagalog-Regular.ttf Noto Sans Tagalog ## 242 NotoSansTagbanwa-Regular.ttf Noto Sans Tagbanwa ## 243 NotoSansTaiLe-Regular.ttf Noto Sans Tai Le ## 244 NotoSansTaiTham-Regular.ttf Noto Sans Tai Tham ## 245 NotoSansTaiViet-Regular.ttf Noto Sans Tai Viet ## 246 NotoSansTakri-Regular.ttf Noto Sans Takri ## 247 NotoSansThaana-Regular.ttf Noto Sans Thaana ## 248 NotoSansTifinagh-Regular.ttf Noto Sans Tifinagh ## 249 NotoSansTirhuta-Regular.ttf Noto Sans Tirhuta ## 250 NotoSansUgaritic-Regular.ttf Noto Sans Ugaritic ## 251 NotoSansVai-Regular.ttf Noto Sans Vai ## 252 NotoSansWancho-Regular.ttf Noto Sans Wancho ## 253 NotoSansWarangCiti-Regular.ttf Noto Sans WarangCiti ## 254 NotoSansYi-Regular.ttf Noto Sans Yi ## 255 NotoSerifAhom-Regular.ttf Noto Serif Ahom ## 256 NotoSerifBalinese-Regular.ttf Noto Serif Balinese ## 257 NotoSerifYezidi-Regular.otf Noto Serif Yezidi ## 258 Oriya MN.ttc Oriya MN ## 259 Oriya Sangam MN.ttc Oriya Sangam MN ## 260 Papyrus.ttc Papyrus ## 261 PartyLET-plain.ttf Party LET ## 262 Phosphate.ttc Phosphate ## 263 PlantagenetCherokee.ttf Plantagenet Cherokee ## 264 PTMono.ttc PT Mono ## 265 PTSans.ttc PT Sans ## 266 PTSerif.ttc PT Serif ## 267 PTSerifCaption.ttc PT Serif Caption ## 268 Raanana.ttc Raanana ## 269 Rockwell.ttc Rockwell ## 270 Sana.ttc Sana ## 271 Sathu.ttf Sathu ## 272 Savoye LET.ttc Savoye LET ## 273 Seravek.ttc Seravek ## 274 Shree714.ttc Shree Devanagari 714 ## 275 SignPainter.ttc SignPainter-HouseScript ## 276 Silom.ttf Silom ## 277 Sinhala MN.ttc Sinhala MN ## 278 Sinhala Sangam MN.ttc Sinhala Sangam MN ## 279 Skia.ttf Skia ## 280 SnellRoundhand.ttc Snell Roundhand ## 281 Songti.ttc Songti SC ## 282 STIXGeneral.otf STIXGeneral ## 283 STIXGeneralBol.otf STIXGeneral ## 284 STIXGeneralBolIta.otf STIXGeneral ## 285 STIXGeneralItalic.otf STIXGeneral ## 286 STIXIntDBol.otf STIXIntegralsD ## 287 STIXIntDReg.otf STIXIntegralsD ## 288 STIXIntSmBol.otf STIXIntegralsSm ## 289 STIXIntSmReg.otf STIXIntegralsSm ## 290 STIXIntUpBol.otf STIXIntegralsUp ## 291 STIXIntUpDBol.otf STIXIntegralsUpD ## 292 STIXIntUpDReg.otf STIXIntegralsUpD ## 293 STIXIntUpReg.otf STIXIntegralsUp ## 294 STIXIntUpSmBol.otf STIXIntegralsUpSm ## 295 STIXIntUpSmReg.otf STIXIntegralsUpSm ## 296 STIXNonUni.otf STIXNonUnicode ## 297 STIXNonUniBol.otf STIXNonUnicode ## 298 STIXNonUniBolIta.otf STIXNonUnicode ## 299 STIXNonUniIta.otf STIXNonUnicode ## 300 STIXSizFiveSymReg.otf STIXSizeFiveSym ## 301 STIXSizFourSymBol.otf STIXSizeFourSym ## 302 STIXSizFourSymReg.otf STIXSizeFourSym ## 303 STIXSizOneSymBol.otf STIXSizeOneSym ## 304 STIXSizOneSymReg.otf STIXSizeOneSym ## 305 STIXSizThreeSymBol.otf STIXSizeThreeSym ## 306 STIXSizThreeSymReg.otf STIXSizeThreeSym ## 307 STIXSizTwoSymBol.otf STIXSizeTwoSym ## 308 STIXSizTwoSymReg.otf STIXSizeTwoSym ## 309 STIXVar.otf STIXVariants ## 310 STIXVarBol.otf STIXVariants ## 311 SukhumvitSet.ttc Sukhumvit Set ## 312 SuperClarendon.ttc Superclarendon ## 313 Tahoma Bold.ttf Tahoma ## 314 Tahoma.ttf Tahoma ## 315 Tamil MN.ttc Tamil MN ## 316 Tamil Sangam MN.ttc Tamil Sangam MN ## 317 Telugu MN.ttc Telugu MN ## 318 Telugu Sangam MN.ttc Telugu Sangam MN ## 319 Times New Roman Bold Italic.ttf Times New Roman ## 320 Times New Roman Bold.ttf Times New Roman ## 321 Times New Roman Italic.ttf Times New Roman ## 322 Times New Roman.ttf Times New Roman ## 323 Trattatello.ttf Trattatello ## 324 Trebuchet MS Bold Italic.ttf Trebuchet MS ## 325 Trebuchet MS Bold.ttf Trebuchet MS ## 326 Trebuchet MS Italic.ttf Trebuchet MS ## 327 Trebuchet MS.ttf Trebuchet MS ## 328 Verdana Bold Italic.ttf Verdana ## 329 Verdana Bold.ttf Verdana ## 330 Verdana Italic.ttf Verdana ## 331 Verdana.ttf Verdana ## 332 Waseem.ttc Waseem ## 333 Webdings.ttf Webdings ## 334 Wingdings 2.ttf Wingdings 2 ## 335 Wingdings 3.ttf Wingdings 3 ## 336 Wingdings.ttf Wingdings ## 337 Zapfino.ttf Zapfino ## 338 Symbol.ttf Symbol ## 339 Thonburi.ttc Thonburi ## 340 Times.ttc Times ## 341 ZapfDingbats.ttf Zapf Dingbats ## 342 ヒラギノ丸ゴ ProN W4.ttc Hiragino Maru Gothic Pro W4 ## 343 ヒラギノ明朝 ProN.ttc Hiragino Mincho ProN W3 ## 344 ヒラギノ角ゴシック W0.ttc Hiragino Sans W0 ## 345 ヒラギノ角ゴシック W1.ttc Hiragino Sans W1 ## 346 ヒラギノ角ゴシック W2.ttc Hiragino Sans W2 ## 347 ヒラギノ角ゴシック W3.ttc Hiragino Sans W3 ## 348 ヒラギノ角ゴシック W4.ttc Hiragino Sans W4 ## 349 ヒラギノ角ゴシック W5.ttc Hiragino Sans W5 ## 350 ヒラギノ角ゴシック W6.ttc Hiragino Sans W6 ## 351 ヒラギノ角ゴシック W7.ttc Hiragino Sans W7 ## 352 ヒラギノ角ゴシック W8.ttc Hiragino Sans W8 ## 353 ヒラギノ角ゴシック W9.ttc Hiragino Sans W9 ## face version ## 1 Regular Version 1.01x ## 2 Outline 6 Dot 13.0d2e27 ## 3 Outline 8 Dot 13.0d2e27 ## 4 Pinpoint 6 Dot 13.0d2e27 ## 5 Pinpoint 8 Dot 13.0d2e27 ## 6 Regular 13.0d2e27 ## 7 Regular 17.4d12e1 ## 8 Regular 17.0d1e2 ## 9 Regular 13.0d1e9 ## 10 Regular 13.0d1e4 ## 11 Regular 13.0d1e1 ## 12 Bold 13.0d1e10 ## 13 Bold 13.0d1e10 ## 14 Regular 13.0d3e1 ## 15 Regular 17.0d2e1 ## 16 Regular 14.0d1e4 ## 17 Regular 17.0d2e1 ## 18 Regular 17.0d1e1 ## 19 Regular 17.0d2e1 ## 20 Regular 17.0d0e2 ## 21 Regular 13.0d2e4 ## 22 Regular 14.0d5e3 ## 23 Regular 14.0d2e3 ## 24 Bold 14.0d2e16 ## 25 Regular 14.0d1e3 ## 26 Regular 17.0d3e1 ## 27 Regular 15.0d1e1 ## 28 Thin 13.0d1e11 ## 29 Regular 17.0d1e1 ## 30 Regular 17.0d1e5 ## 31 Regular 14.0d1e18 ## 32 Regular 17.0d5e1 ## 33 Regular Italic 17.0d5e1 ## 34 Light 17.0d1e1 ## 35 Regular 14.0d2e19 ## 36 Regular 15.0d1e2 ## 37 Regular 14.0d1e7 ## 38 Regular 17.0d1e2 ## 39 Regular 14.0d1e2 ## 40 Regular 14.0d1e5 ## 41 Regular 13.0d1e2 ## 42 Regular 15.0d2e2 ## 43 Regular 17.d1e2 ## 44 Regular 17.0d16e1 ## 45 Black 17.0d11e1 ## 46 Black Italic 17.0d11e1 ## 47 Regular 17.0d11e1 ## 48 Regular 17.0d11e1 ## 49 Regular Italic 17.0d11e1 ## 50 Light 16.0d2e1 ## 51 Light Italic 16.0d2e1 ## 52 Regular 17.0d11e1 ## 53 Light 17.0d1e2 ## 54 Medium 17.0d1e2 ## 55 Plain 16.0d1e1 ## 56 Regular 13.0d2e2 ## 57 Regular 13.0d2e1 ## 58 Plain 13.0d1e6 ## 59 Regular 16.0d2e4 ## 60 Regular Version 2.00x ## 61 Chancery 13.0d1e4 ## 62 Regular 13.0d1e3 ## 63 Regular 13.0d1e6 ## 64 Regular Version 5.00.1x ## 65 Bold Italic Version 5.00.2x ## 66 Bold Version 5.01.2x ## 67 Italic Version 5.00.2x ## 68 Bold Italic Version 2.38.1x ## 69 Bold Version 2.38.1x ## 70 Italic Version 2.38.1x ## 71 Regular Version 2.38.1x ## 72 Regular Version 1.51x ## 73 Regular Version 1.01x ## 74 Regular Version 5.01.2x ## 75 Regular 13.0d1e3 ## 76 Regular 13.0d1e7 ## 77 Regular 13.0d1e5 ## 78 Regular 14.0d1e2 ## 79 Regular 14.0d1e1 ## 80 Regular 13.0d1e10 ## 81 Regular 13.0d1e6 ## 82 Medium 13.0d1e11 ## 83 Book 13.0d2e1 ## 84 Book 13.0d2e1 ## 85 Book 13.0d2e1 ## 86 Regular 13.0d2e1 ## 87 Bold 14.0d0e1 ## 88 Italic Version 1.52x-1 ## 89 Regular 13.0d1e2 ## 90 Light 13.0d1e2 ## 91 Regular 13.0d2e1 ## 92 Roman 14.0d2e1 ## 93 Regular 13.0d2e1 ## 94 Bold Version 5.00x ## 95 Regular Version 5.00x ## 96 Regular 13.0d1e2 ## 97 Regular 13.0d1e4 ## 98 Bold Italic Version 5.00x ## 99 Bold Version 5.00.2x ## 100 Italic Version 5.00.1x ## 101 Regular Version 5.00.2x ## 102 Regular 13.0d3e9 ## 103 Regular 14.0d0e1 ## 104 Regular 14.0d1e12 ## 105 Regular 13.0d1e3 ## 106 Regular 13.0d1e3 ## 107 Bold 13.0d3e2 ## 108 Bold 14.0d1e1 ## 109 Regular 13.0d2e1 ## 110 Regular 13.0d1e5 ## 111 Regular 15.0d1e3 ## 112 Regular 13.0d2e3 ## 113 Regular 13.0d1e3 ## 114 Medium 16.0d2e1 ## 115 Regular 14.0d1e3 ## 116 Bold Italic Version 5.00x-4 ## 117 Bold Version 5.00x-4 ## 118 Italic Version 5.00x-4 ## 119 Regular Version 5.00x-4 ## 120 Regular 16.0d1e1 ## 121 Regular 17.0d1e3 ## 122 Regular 13.0d1e2 ## 123 Regular 14.0d4e2 ## 124 Regular 14.0d3e1 ## 125 Regular 13.0d1e4 ## 126 Regular 13.0d1e2 ## 127 Ornaments 14.0d1e2 ## 128 Regular 14.0d1e2 ## 129 Regular Version 5.00x ## 130 Regular 13.0d1e5 ## 131 Roman 14.0d1e1 ## 132 Book 14.0d3e6 ## 133 Regular 16.0d1e1 ## 134 Regular 14.0d1e6 ## 135 Regular 14.0d2e4 ## 136 Regular 17.0d1e2 ## 137 Regular 14.0d1e1 ## 138 Regular 14.0d1e9 ## 139 Regular 13.0d1e3 ## 140 Regular 14.0d1e1 ## 141 Regular 13.0d1e11 ## 142 Regular 14.0d1e9 ## 143 Regular 14.0d1e6 ## 144 Regular 13.0d1e2 ## 145 Regular 14.0d1e6 ## 146 Regular 14.0d4e6 ## 147 Regular 13.0d1e2 ## 148 Regular Version 5.00.1x ## 149 Regular 13.0d2e1 ## 150 Regular 13.0d2e1 ## 151 Regular 14.0d1e1 ## 152 Regular 13.0d1e4 ## 153 Regular 14.0d1e2 ## 154 Regular 14.0d1e8 ## 155 Regular 13.0d1e3 ## 156 Regular 13.0d1e4 ## 157 Regular 13.0d1e1 ## 158 Regular Version 3.000 ## 159 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 160 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 161 Regular Version 2.000 ## 162 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 163 Regular Version 2.000 ## 164 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 165 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 166 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 167 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 168 Regular Version 2.001 ## 169 Regular Version 2.001;GOOG;noto-source:20181019:f8f3770 ## 170 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 171 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 172 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 173 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 174 Regular Version 2.000 ## 175 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 176 Regular Version 2.000 ## 177 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 178 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 179 Regular Version 1.002 ## 180 Regular Version 2.002 ## 181 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 182 Regular Version 2.000 ## 183 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 184 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 185 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 186 Regular Version 2.000 ## 187 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 188 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 189 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 190 Regular Version 2.001 ## 191 Regular Version 2.000 ## 192 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 193 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 194 Regular Version 2.000 ## 195 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 196 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 197 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 198 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 199 Regular Version 2.000 ## 200 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 201 Regular Version 2.000 ## 202 Regular Version 2.000 ## 203 Regular Version 1.003 ## 204 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 205 Regular Version 2.000 ## 206 Regular Version 2.000 ## 207 Regular Version 2.001 ## 208 Regular Version 2.000 ## 209 Regular Version 1.04 uh ## 210 Regular Version 2.000 ## 211 Regular Version 2.000 ## 212 Regular Version 2.000 ## 213 Regular Version 2.002 ## 214 Regular Version 2.000 ## 215 Regular Version 2.001 ## 216 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 217 Regular Version 2.001 ## 218 Regular Version 2.002 ## 219 Regular Version 2.000 ## 220 Regular Version 2.000 ## 221 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 222 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 223 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 224 Regular Version 2.000 ## 225 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 226 Regular Version 2.000 ## 227 Regular Version 2.000 ## 228 Regular Version 2.000 ## 229 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 230 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 231 Regular Version 2.000 ## 232 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 233 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 234 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 235 Regular Version 2.001 ## 236 Regular Version 2.001 ## 237 Regular Version 2.000 ## 238 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 239 Regular Version 2.001 ## 240 Regular Version 2.000 ## 241 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 242 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 243 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 244 Regular Version 1.04 uh ## 245 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 246 Regular Version 2.001 ## 247 Regular Version 2.000 ## 248 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 249 Regular Version 2.001 ## 250 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 251 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 252 Regular Version 2.000 ## 253 Regular Version 3.000 ## 254 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 255 Regular Version 2.003 ## 256 Regular Version 2.000;GOOG;noto-source:20181019:f8f3770 ## 257 Regular Version 1.000 ## 258 Regular 14.0d1e6 ## 259 Regular 14.0d1e2 ## 260 Condensed 13.0d1e2 ## 261 Plain 16.0d1e2 ## 262 Inline 13.0d1e2 ## 263 Regular 13.0d1e3 ## 264 Bold 13.0d2e4 ## 265 Regular 13.0d3e2 ## 266 Regular 13.0d2e1 ## 267 Regular 13.0d2e1 ## 268 Regular 14.0d1e14 ## 269 Regular 13.0d2e1 ## 270 Regular 13.0d1e4 ## 271 Regular 14.0d1e1 ## 272 Plain 13.0d2e4 ## 273 Regular 13.0d3e2 ## 274 Regular 13.0d2e1 ## 275 Regular 14.0d1e1 ## 276 Regular 14.0d1e1 ## 277 Regular 14.0d1e1 ## 278 Regular 14.0d1e2 ## 279 Regular 13.0d1e54 ## 280 Regular 15.0d1e1 ## 281 Black 17.0d2e3 ## 282 Regular Version 1.1.0 ## 283 Bold Version 1.1.0 ## 284 Bold Italic Version 1.1.0 ## 285 Italic Version 1.1.0 ## 286 Bold Version 1.1.0 ## 287 Regular Version 1.1.0 ## 288 Bold Version 1.1.0 ## 289 Regular Version 1.1.0 ## 290 Bold Version 1.1.0 ## 291 Bold Version 1.1.0 ## 292 Regular Version 1.1.0 ## 293 Regular Version 1.1.0 ## 294 Bold Version 1.1.0 ## 295 Regular Version 1.1.0 ## 296 Regular Version 1.1.0 ## 297 Bold Version 1.1.0 ## 298 Bold Italic Version 1.1.0 ## 299 Italic Version 1.1.0 ## 300 Regular Version 1.1.0 ## 301 Bold Version 1.1.0 ## 302 Regular Version 1.1.0 ## 303 Bold Version 1.1.0 ## 304 Regular Version 1.1.0 ## 305 Bold Version 1.1.0 ## 306 Regular Version 1.1.0 ## 307 Bold Version 1.1.0 ## 308 Regular Version 1.1.0 ## 309 Regular Version 1.1.0 ## 310 Bold Version 1.1.0 ## 311 Thin 17.0d1e2 ## 312 Regular 13.0d1e4 ## 313 Bold Version 5.01.1x ## 314 Regular Version 5.01.2x ## 315 Regular 14.0d1e7 ## 316 Regular 15.0d1e37 ## 317 Regular 14.0d1e2 ## 318 Regular 14.0d1e4 ## 319 Bold Italic Version 5.00.3x ## 320 Bold Version 5.01.3x ## 321 Italic Version 5.00.3x ## 322 Regular Version 5.01.3x ## 323 Regular 13.0d2e2 ## 324 Bold Italic Version 5.00x ## 325 Bold Version 5.00x ## 326 Italic Version 5.00x ## 327 Regular Version 5.00x ## 328 Bold Italic Version 5.01x ## 329 Bold Version 5.01x ## 330 Italic Version 5.01x ## 331 Regular Version 5.01x ## 332 Regular 13.0d1e2 ## 333 Regular Version 5.00x ## 334 Regular Version 1.55x ## 335 Regular Version 1.55x ## 336 Regular Version 5.00x ## 337 Regular 13.0d1e2 ## 338 Regular 13.0d2e2 ## 339 Regular 13.0d1e1 ## 340 Regular 17.0d1e1 ## 341 Regular 13.0d1e2 ## 342 Regular 17.0d1e2 ## 343 Regular 17.0d1e2 ## 344 Regular 17.0d1e30 ## 345 Regular 17.0d1e31 ## 346 Regular 17.0d1e32 ## 347 Regular 17.0d1e33 ## 348 Regular 17.0d1e34 ## 349 Regular 17.0d1e35 ## 350 Regular 17.0d1e36 ## 351 Regular 17.0d1e37 ## 352 Regular 17.0d1e38 ## 353 Regular 17.0d1e39 ## ps_name ## 1 ArialUnicodeMS ## 2 AppleBraille-Outline6Dot ## 3 AppleBraille-Outline8Dot ## 4 AppleBraille-Pinpoint6Dot ## 5 AppleBraille-Pinpoint8Dot ## 6 AppleBraille ## 7 AppleColorEmoji ## 8 AppleSymbols ## 9 AppleSDGothicNeo-Regular ## 10 AquaKana ## 11 ArialHebrew ## 12 AvenirNextCondensed-Bold ## 13 AvenirNext-Bold ## 14 Avenir-Book ## 15 Courier ## 16 GeezaPro ## 17 Geneva ## 18 Helvetica ## 19 HelveticaNeue ## 20 HiraginoSansGB-W3 ## 21 .Keyboard ## 22 KohinoorDevanagari-Regular ## 23 KohinoorBangla-Regular ## 24 KohinoorGujarati-Bold ## 25 KohinoorTelugu-Regular ## 26 LastResort ## 27 LucidaGrande ## 28 MarkerFelt-Thin ## 29 Menlo-Regular ## 30 Monaco ## 31 MuktaMahee-Regular ## 32 .NewYork-Regular ## 33 .NewYork-RegularItalic ## 34 Noteworthy-Light ## 35 NotoNastaliqUrdu ## 36 NotoSansArmenian-Black ## 37 NotoSansKannada-Black ## 38 NotoSansMyanmar-Black ## 39 NotoSansOriya ## 40 NotoSerifMyanmar-Black ## 41 Optima-Regular ## 42 Palatino-Roman ## 43 PingFangHK-Regular ## 44 .SFArabic-Regular ## 45 .SFCompact-Black ## 46 .SFCompact-BlackItalic ## 47 ..SFCompactRounded-Regular ## 48 .SFNS-Regular ## 49 .SFNS-RegularItalic ## 50 .SFNSMono-Light ## 51 .SFNSMono-LightItalic ## 52 .SFNSRounded-Regular ## 53 STHeitiTC-Light ## 54 STHeitiTC-Medium ## 55 AcademyEngravedLetPlain ## 56 AlNile ## 57 AlTarikh ## 58 AlBayan ## 59 AmericanTypewriter ## 60 AndaleMono ## 61 Apple-Chancery ## 62 AppleGothic ## 63 AppleMyungjo ## 64 Arial-Black ## 65 Arial-BoldItalicMT ## 66 Arial-BoldMT ## 67 Arial-ItalicMT ## 68 ArialNarrow-BoldItalic ## 69 ArialNarrow-Bold ## 70 ArialNarrow-Italic ## 71 ArialNarrow ## 72 ArialRoundedMTBold ## 73 ArialUnicodeMS ## 74 ArialMT ## 75 Athelas-Regular ## 76 Ayuthaya ## 77 Baghdad ## 78 BanglaMN ## 79 BanglaSangamMN ## 80 Baskerville ## 81 Beirut ## 82 BigCaslon-Medium ## 83 BodoniSvtyTwoOSITCTT-Book ## 84 BodoniSvtyTwoSCITCTT-Book ## 85 BodoniSvtyTwoITCTT-Book ## 86 BodoniOrnamentsITCTT ## 87 BradleyHandITCTT-Bold ## 88 BrushScriptMT ## 89 Chalkboard ## 90 ChalkboardSE-Light ## 91 Chalkduster ## 92 Charter-Roman ## 93 Cochin ## 94 ComicSansMS-Bold ## 95 ComicSansMS ## 96 Copperplate ## 97 CorsivaHebrew ## 98 CourierNewPS-BoldItalicMT ## 99 CourierNewPS-BoldMT ## 100 CourierNewPS-ItalicMT ## 101 CourierNewPSMT ## 102 Damascus ## 103 DecoTypeNaskh ## 104 DevanagariSangamMN ## 105 DevanagariMT ## 106 Didot ## 107 DINAlternate-Bold ## 108 DINCondensed-Bold ## 109 DiwanKufi ## 110 DiwanThuluth ## 111 EuphemiaUCAS ## 112 Farah ## 113 Farisi ## 114 Futura-Medium ## 115 Galvji ## 116 Georgia-BoldItalic ## 117 Georgia-Bold ## 118 Georgia-Italic ## 119 Georgia ## 120 GillSans ## 121 GujaratiSangamMN ## 122 GujaratiMT ## 123 GurmukhiMN ## 124 GurmukhiSangamMN ## 125 MonotypeGurmukhi ## 126 Herculanum ## 127 HoeflerText-Ornaments ## 128 HoeflerText-Regular ## 129 Impact ## 130 InaiMathi ## 131 IowanOldStyle-Roman ## 132 ITFDevanagari-Book ## 133 Kailasa ## 134 KannadaMN ## 135 KannadaSangamMN ## 136 Kefa-Regular ## 137 KhmerMN ## 138 KhmerSangamMN ## 139 Kokonor ## 140 Krungthep ## 141 KufiStandardGK ## 142 LaoMN ## 143 LaoSangamMN ## 144 Luminari-Regular ## 145 MalayalamMN ## 146 MalayalamSangamMN ## 147 Marion-Regular ## 148 MicrosoftSansSerif ## 149 DiwanMishafiGold ## 150 DiwanMishafi ## 151 Mshtakan ## 152 Muna ## 153 MyanmarMN ## 154 MyanmarSangamMN ## 155 Nadeem ## 156 NewPeninimMT ## 157 GB18030Bitmap ## 158 NotoSansAdlam-Regular ## 159 NotoSansAvestan-Regular ## 160 NotoSansBamum-Regular ## 161 NotoSansBassaVah-Regular ## 162 NotoSansBatak-Regular ## 163 NotoSansBhaiksuki-Regular ## 164 NotoSansBrahmi-Regular ## 165 NotoSansBuginese-Regular ## 166 NotoSansBuhid-Regular ## 167 NotoSansCarian-Regular ## 168 NotoSansCaucasianAlbanian-Regular ## 169 NotoSansChakma-Regular ## 170 NotoSansCham-Regular ## 171 NotoSansCoptic-Regular ## 172 NotoSansCuneiform-Regular ## 173 NotoSansCypriot-Regular ## 174 NotoSansDuployan-Regular ## 175 NotoSansEgyptianHieroglyphs-Regular ## 176 NotoSansElbasan-Regular ## 177 NotoSansGlagolitic-Regular ## 178 NotoSansGothic-Regular ## 179 NotoSansGunjalaGondi-Regular ## 180 NotoSansHanifiRohingya-Regular ## 181 NotoSansHanunoo-Regular ## 182 NotoSansHatran-Regular ## 183 NotoSansImperialAramaic-Regular ## 184 NotoSansInscriptionalPahlavi-Regular ## 185 NotoSansInscriptionalParthian-Regular ## 186 NotoSansJavanese-Regular ## 187 NotoSansKaithi-Regular ## 188 NotoSansKayahLi-Regular ## 189 NotoSansKharoshthi-Regular ## 190 NotoSansKhojki-Regular ## 191 NotoSansKhudawadi-Regular ## 192 NotoSansLepcha-Regular ## 193 NotoSansLimbu-Regular ## 194 NotoSansLinearA-Regular ## 195 NotoSansLinearB-Regular ## 196 NotoSansLisu-Regular ## 197 NotoSansLycian-Regular ## 198 NotoSansLydian-Regular ## 199 NotoSansMahajani-Regular ## 200 NotoSansMandaic-Regular ## 201 NotoSansManichaean-Regular ## 202 NotoSansMarchen-Regular ## 203 NotoSansMasaramGondi-Regular ## 204 NotoSansMeeteiMayek-Regular ## 205 NotoSansMendeKikakui-Regular ## 206 NotoSansMeroitic-Regular ## 207 NotoSansMiao-Regular ## 208 NotoSansModi-Regular ## 209 NotoSansMongolian ## 210 NotoSansMro-Regular ## 211 NotoSansMultani-Regular ## 212 NotoSansNabataean-Regular ## 213 NotoSansNewa-Regular ## 214 NotoSansNewTaiLue-Regular ## 215 NotoSansNKo-Regular ## 216 NotoSansOlChiki-Regular ## 217 NotoSansOldHungarian-Regular ## 218 NotoSansOldItalic-Regular ## 219 NotoSansOldNorthArabian-Regular ## 220 NotoSansOldPermic-Regular ## 221 NotoSansOldPersian-Regular ## 222 NotoSansOldSouthArabian-Regular ## 223 NotoSansOldTurkic-Regular ## 224 NotoSansOsage-Regular ## 225 NotoSansOsmanya-Regular ## 226 NotoSansPahawhHmong-Regular ## 227 NotoSansPalmyrene-Regular ## 228 NotoSansPauCinHau-Regular ## 229 NotoSansPhagsPa-Regular ## 230 NotoSansPhoenician-Regular ## 231 NotoSansPsalterPahlavi-Regular ## 232 NotoSansRejang-Regular ## 233 NotoSansSamaritan-Regular ## 234 NotoSansSaurashtra-Regular ## 235 NotoSansSharada-Regular ## 236 NotoSansSiddham-Regular ## 237 NotoSansSoraSompeng-Regular ## 238 NotoSansSundanese-Regular ## 239 NotoSansSylotiNagri-Regular ## 240 NotoSansSyriac-Regular ## 241 NotoSansTagalog-Regular ## 242 NotoSansTagbanwa-Regular ## 243 NotoSansTaiLe-Regular ## 244 NotoSansTaiTham ## 245 NotoSansTaiViet-Regular ## 246 NotoSansTakri-Regular ## 247 NotoSansThaana-Regular ## 248 NotoSansTifinagh-Regular ## 249 NotoSansTirhuta-Regular ## 250 NotoSansUgaritic-Regular ## 251 NotoSansVai-Regular ## 252 NotoSansWancho-Regular ## 253 NotoSansWarangCiti-Regular ## 254 NotoSansYi-Regular ## 255 NotoSerifAhom-Regular ## 256 NotoSerifBalinese-Regular ## 257 NotoSerifYezidi-Regular ## 258 OriyaMN ## 259 OriyaSangamMN ## 260 Papyrus-Condensed ## 261 PartyLetPlain ## 262 Phosphate-Inline ## 263 PlantagenetCherokee ## 264 PTMono-Bold ## 265 PTSans-Regular ## 266 PTSerif-Regular ## 267 PTSerif-Caption ## 268 Raanana ## 269 Rockwell-Regular ## 270 Sana ## 271 Sathu ## 272 SavoyeLetPlain ## 273 Seravek ## 274 ShreeDev0714 ## 275 SignPainter-HouseScript ## 276 Silom ## 277 SinhalaMN ## 278 SinhalaSangamMN ## 279 Skia-Regular ## 280 SnellRoundhand ## 281 STSongti-SC-Black ## 282 STIXGeneral-Regular ## 283 STIXGeneral-Bold ## 284 STIXGeneral-BoldItalic ## 285 STIXGeneral-Italic ## 286 STIXIntegralsD-Bold ## 287 STIXIntegralsD-Regular ## 288 STIXIntegralsSm-Bold ## 289 STIXIntegralsSm-Regular ## 290 STIXIntegralsUp-Bold ## 291 STIXIntegralsUpD-Bold ## 292 STIXIntegralsUpD-Regular ## 293 STIXIntegralsUp-Regular ## 294 STIXIntegralsUpSm-Bold ## 295 STIXIntegralsUpSm-Regular ## 296 STIXNonUnicode-Regular ## 297 STIXNonUnicode-Bold ## 298 STIXNonUnicode-BoldItalic ## 299 STIXNonUnicode-Italic ## 300 STIXSizeFiveSym-Regular ## 301 STIXSizeFourSym-Bold ## 302 STIXSizeFourSym-Regular ## 303 STIXSizeOneSym-Bold ## 304 STIXSizeOneSym-Regular ## 305 STIXSizeThreeSym-Bold ## 306 STIXSizeThreeSym-Regular ## 307 STIXSizeTwoSym-Bold ## 308 STIXSizeTwoSym-Regular ## 309 STIXVariants-Regular ## 310 STIXVariants-Bold ## 311 SukhumvitSet-Thin ## 312 Superclarendon-Regular ## 313 Tahoma-Bold ## 314 Tahoma ## 315 TamilMN ## 316 TamilSangamMN ## 317 TeluguMN ## 318 TeluguSangamMN ## 319 TimesNewRomanPS-BoldItalicMT ## 320 TimesNewRomanPS-BoldMT ## 321 TimesNewRomanPS-ItalicMT ## 322 TimesNewRomanPSMT ## 323 Trattatello ## 324 Trebuchet-BoldItalic ## 325 TrebuchetMS-Bold ## 326 TrebuchetMS-Italic ## 327 TrebuchetMS ## 328 Verdana-BoldItalic ## 329 Verdana-Bold ## 330 Verdana-Italic ## 331 Verdana ## 332 Waseem ## 333 Webdings ## 334 Wingdings2 ## 335 Wingdings3 ## 336 Wingdings-Regular ## 337 Zapfino ## 338 Symbol ## 339 Thonburi ## 340 Times-Roman ## 341 ZapfDingbatsITC ## 342 HiraMaruPro-W4 ## 343 HiraMinProN-W3 ## 344 HiraginoSans-W0 ## 345 HiraginoSans-W1 ## 346 HiraginoSans-W2 ## 347 HiraginoSans-W3 ## 348 HiraginoSans-W4 ## 349 HiraginoSans-W5 ## 350 HiraginoSans-W6 ## 351 HiraginoSans-W7 ## 352 HiraginoSans-W8 ## 353 HiraginoSans-W9 ## Loading Google fonts (https://fonts.google.com/) sysfonts::font_add_google(&quot;Dancing Script&quot;) # selección de fonts de google sysfonts::font_add_google(&quot;Bebas Neue&quot;) sysfonts::font_add_google(&quot;Fuggles&quot;) sysfonts::font_add_google(&quot;Roboto&quot;) sysfonts::font_add_google(&quot;Lobster&quot;) sysfonts::font_add_google(&quot;Raleway&quot;) cat_img=image_read(&#39;cat.jpg&#39;) analitica_img=image_read(&#39;Analitica3.png&#39;) sticker( subplot= analitica_img, package=&quot;Meow&quot;, s_width =.75, s_height = .75, s_x=1, s_y=.75, p_size=19, p_x = 1.0, p_y = 1.5, p_color= &#39;purple&#39;, p_family= &quot;Raleway&quot;, h_fill =&#39;gold&#39;, h_color=&#39;hotpink&#39;, h_size = 2, url=&quot;www.cat.foundation.com&quot;, u_size=4, u_color = &quot;violetred&quot;, spotlight=T ) %&gt;% print "],["math-sci.html", "Capítulo23 Ecuaciones Matemáticas 23.1 Ecuaciones matemática 23.2 Símbolos de LATEX 23.3 Química 101: Símbolos 23.4 Símbolos comunes 23.5 Física 23.6 Biología", " Capítulo23 Ecuaciones Matemáticas ## [1] &quot;2024-11-07&quot; 23.1 Ecuaciones matemática TeX es la mejor manera de escribir funciones matemáticas en R. Donald Knuth diseñó el paquete  cuando se sintió frustrado por el tiempo que les tomaba a los tipógrafos y terminar su libro, que contenía mucha funciones matemática. Una característica interesante de R Markdown es su capacidad para leer código LaTeX directamente. Si está haciendo una tesis, artículo cientíco, presentaciones o quiere aclarar en su documento las funciones que estas usando, típicamente esto involucrará muchas ecuaciones matemáticas. Por consecuencia querrá leer la siguiente sección que ha sido comentada. 23.1.1 Matemática y Física \\[ \\sum_{j=1}^n (\\delta\\theta_j)^2 \\leq {{\\beta_i^2}\\over{\\delta_i^2 + \\rho_i^2}} \\left[ 2\\rho_i^2 + {\\delta_i^2\\beta_i^2\\over{\\delta_i^2 + \\rho_i^2}} \\right] \\equiv \\omega_i^2 \\] De Informational Dynamics, tenemos lo siguiente (Dave Braden): Después de n tales encuentros, la densidad posterior de \\(\\theta\\) es \\[ \\pi(\\theta|X_1&lt; y_1,\\dots,X_n&lt;y_n) \\varpropto \\pi(\\theta) \\prod_{i=1}^n\\int_{-\\infty}^{y_i} \\exp\\left(-{(x-\\theta)^2\\over{2\\sigma^2}}\\right)\\ dx \\] Otra Ecuaciones \\[ \\det\\left|\\,\\begin{matrix}% c_0&amp;c_1\\hfill&amp;c_2\\hfill&amp;\\ldots&amp;c_n\\hfill\\cr c_1&amp;c_2\\hfill&amp;c_3\\hfill&amp;\\ldots&amp;c_{n+1}\\hfill\\cr c_2&amp;c_3\\hfill&amp;c_4\\hfill&amp;\\ldots&amp;c_{n+2}\\hfill\\cr \\,\\vdots\\hfill&amp;\\,\\vdots\\hfill&amp; \\,\\vdots\\hfill&amp;&amp;\\,\\vdots\\hfill\\cr c_n&amp;c_{n+1}\\hfill&amp;c_{n+2}\\hfill&amp;\\ldots&amp;c_{2n}\\hfill\\cr \\end{matrix}\\right|&gt;0 \\] Lapidus y Píndaro, Solución numérica de ecuaciones diferenciales parciales en ciencia y Ingeniería. Página 54 \\[ \\int_t\\left\\{\\sum_{j=1}^3 T_j \\left({d\\phi_j\\over dt}+k\\phi_j\\right)-kT_e\\right\\}w_i(t)\\ dt=0, \\qquad\\quad i=1,2,3. \\] Funciones de ponderación del método L&amp;P Galerkin. Página 55 \\[ \\sum_{j=1}^3 T_j\\int_0^1\\left\\{{d\\phi_j\\over dt} + k\\phi_j\\right\\} \\phi_i\\ dt = \\int_{0}^1k\\,T_e\\phi_idt, \\qquad i=1,2,3 \\] Otra de L&amp;P (p145) \\[ \\int_{-1}^1\\!\\int_{-1}^1\\!\\int_{-1}^1 f\\big(\\xi,\\eta,\\zeta\\big) = \\sum_{k=1}^n\\sum_{j=1}^n\\sum_{i=1}^n w_i w_j w_k f\\big( \\xi,\\eta,\\zeta\\big). \\] Otra de L&amp;P (p126) \\[ \\int_{A_e} (\\,\\cdot\\,) dx dy = \\int_{-1}^1\\!\\int_{-1}^1 (\\,\\cdot\\,) \\det[J] d\\xi d\\eta. \\] 23.2 Símbolos de LATEX Pueden encontrar los símbolos de Latex matemáticos en la siguiente pagina web: https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols –&gt; 23.3 Química 101: Símbolos Las fórmulas químicas se verán mejor si no están en cursiva. Evite la cursiva automática del modo matemático en LaTeX usando el argumento $\\mathrm{fórmula aquí}$, con su fórmula dentro de las llaves. (Observe el uso de comillas invertidas aquí que encierran texto y que actúa como código para ver el código original). Entonces, \\(\\mathrm{Fe_2^{2+}Cr_2O_4}\\) es escrito como $\\mathrm{Fe_2^{2+}Cr_2O_4}$. Esta fomula es parte de la frase \\[\\mathrm{Fe_2^{2+}Cr_2O_2}\\] Exponente or Sobrescrito: \\(\\mathrm{O^-}\\) y se escribe como $\\mathrm{O^-}$ Subíndice: \\(\\mathrm{CH_4}\\) y se escribe como $\\mathrm{CH_4}$ Para apilar números o letras como en \\(\\mathrm{Fe_2^{2+}}\\), primero se define el subíndice y luego el superíndice y se escribe como $\\mathrm{Fe_2^{2+}}$. punto se usa la palabra bullet: \\(\\mathrm{CuCl}\\) \\(\\bullet\\) \\(\\mathrm{7H_{2}O}\\) donde se escribe como CuCl $\\bullet$ $\\mathrm{7H_{2}O}$ 23.4 Símbolos comunes Delta: \\(\\Delta\\) y se escribe como `$ Gamma mayúscula \\(\\Gamma\\) Gamma minúscula \\(\\gamma\\) Aquí esta mi súper formula de \\(\\phi\\) que voy a usar en el examen de matemáticas. Flecha de Reacción: \\(\\longrightarrow\\) or \\(\\xrightarrow{fabilous}\\) y se escribe como $\\longrightarrow$ or $\\xrightarrow{solution}$ Flecha de Resonancia: \\(\\leftrightarrow\\) y se escribe como $\\leftrightarrow$ Flechas de reacción reversibles: \\(\\rightleftharpoons\\) y se escribe como $\\rightleftharpoons$ 23.4.1 Típografica de reaciones Es posible que desees poner tu reacción en un entorno de ecuaciones, lo que significa que LaTeX colocará la reacción donde encaje y numerará las ecuaciones por ti. \\[\\begin{equation} \\mathrm{C_6H_{12}O_6 + 6O_2} \\longrightarrow \\mathrm{6CO_2 + 6H_2O} \\tag{23.1} \\end{equation}\\] y se escribe como \\begin{equation} \\mathrm{C_6H_{12}O_6 + 6O_2} \\longrightarrow \\mathrm{6CO_2 + 6H_2O} (\\#eq:reaction) \\end{equation} Podemos hacer referencia a esta reacción de combustión de glucosa mediante la ecuación (23.1). 23.4.2 Otros ejemplos de reacciones \\(\\mathrm{NH_4Cl_{(s)}}\\) \\(\\rightleftharpoons\\) \\(\\mathrm{NH_{3(g)}+HCl_{(g)}}\\) y se esscribe como $\\mathrm{NH_4Cl_{(s)}}$ $\\rightleftharpoons$ $\\mathrm{NH_{3(g)}+HCl_{(g)}}$ \\(\\mathrm{MeCH_2Br + Mg}\\) \\(\\xrightarrow[abajo]{ariba}\\) \\(\\mathrm{MeCH_2\\bullet Mg \\bullet Br}\\) y se escribe como $\\mathrm{MeCH_2Br + Mg}$ $\\xrightarrow[abajo]{ariba}$ $\\mathrm{MeCH_2\\bullet Mg \\bullet Br}$ 23.5 Física Muchos de los símbolos que necesitará se pueden encontrar en la página de matemáticas. https://web.reed.edu/cis/help/latex/math.html y la guía completa de símbolos LaTeX (https://mirror.utexas.edu/ctan/info/symbols/comprehensive/symbols-letter.pdf). 23.6 Biología Probablemente encontrará los recursos en https://www.lecb.ncifcrf.gov/~toms/latex.html útil, particularmente los enlaces a bsts de varias revistas. Quizás también le interese TeXShade para composición tipográfica de nucleótidos (https://homepages.uni-tuebingen.de/beitz/txe.html). Asegúrese de leer el capítulo anterior sobre gráficos y tablas. La formula del promedio \\(\\mu=\\frac{\\sum{x}_{i}}{n}\\) se escribe asi $\\mu=\\frac{\\sum{x}_{i}}{n}$ NOTE la diferencia en tipo de letra………entre las dos formulas Nota aqui que la formaula se escribe en la oración \\(\\mathrm{\\mu=\\frac{\\sum{x}_{i}}{n}}\\) se escribe asi $\\mathrm{\\mu=\\frac{\\sum{x}_{i}}{n}}$ Pero si quiere que la formula este en una linea aparte lo escribe así dentro de \\begin{equation}, la formula aquí y termina con \\end{equation} \\[\\begin{equation} \\mathrm{\\mu=\\frac{\\sum{x}_{i}}{n}} \\tag{23.2} \\end{equation}\\] \\(s^{2}=\\frac{\\sum (x_{i}-\\bar{x})^2}{n-1}\\) Sitios en el web para preparar las ecuaciones Latex https://latex.codecogs.com/eqneditor/editor.php https://latexeditor.lagrida.com https://www.hostmath.com https://www.overleaf.com/learn/latex/Mathematical_expressions "],["fechas-horas-y-minutas.html", "Capítulo24 Fechas, horas y minutas 24.1 Temas: 24.2 Creando fechas/horas 24.3 El paquete lubridate 24.4 Intervalos y duraciones 24.5 El operador %--% simplifica el cálculo del intervalo 24.6 Ejercicio 24.7 Serie de funciones para calcular la duración de un intervalo de tiempo. 24.8 as.duration 24.9 Crear una fecha desde columnas individuales 24.10 %/%: integer division 24.11 The %% operator returns the modulus (remainder) of a division operation. 24.12 Extrayendo parte de las fecha-hora 24.13 Lapso de tiempo 24.14 duraciones 24.15 Puede agregar periodos de tiempo 24.16 períodos 24.17 Períodos 24.18 Intervalos 24.19 Resumen 24.20 Time zones", " Capítulo24 Fechas, horas y minutas Fecha de la ultima revisión ## [1] &quot;2024-11-07&quot; El tema proviene de los siguientes sitios. English: https://r4ds.had.co.nz/dates-and-times.html Español: https://es.r4ds.hadley.nz/16-datetimes.html 24.1 Temas: library(lubridate) library(datos) library(tidyverse) 24.2 Creando fechas/horas date, time, date-time, https://github.com/edgararuiz/guias-rapidas/blob/master/fechas.pdf library(tidyverse) library(lubridate) # paquete para convertir fechas tidyverse_packages() # lista completa de los paquetes activado con **tidyverse** ## [1] &quot;broom&quot; &quot;conflicted&quot; &quot;cli&quot; &quot;dbplyr&quot; ## [5] &quot;dplyr&quot; &quot;dtplyr&quot; &quot;forcats&quot; &quot;ggplot2&quot; ## [9] &quot;googledrive&quot; &quot;googlesheets4&quot; &quot;haven&quot; &quot;hms&quot; ## [13] &quot;httr&quot; &quot;jsonlite&quot; &quot;lubridate&quot; &quot;magrittr&quot; ## [17] &quot;modelr&quot; &quot;pillar&quot; &quot;purrr&quot; &quot;ragg&quot; ## [21] &quot;readr&quot; &quot;readxl&quot; &quot;reprex&quot; &quot;rlang&quot; ## [25] &quot;rstudioapi&quot; &quot;rvest&quot; &quot;stringr&quot; &quot;tibble&quot; ## [29] &quot;tidyr&quot; &quot;xml2&quot; &quot;tidyverse&quot; 24.3 El paquete lubridate La función today() regresa la fecha de hoy, similar a Sys.date() today() ## [1] &quot;2024-11-07&quot; Use la función de tribble(), del paquete tibble, para crear una tabla manualmente fechas &lt;- tribble( ~ codigo, ~ fecha, &quot;001&quot;, &quot;01/01/2019 00:00:00&quot;, &quot;002&quot;, &quot;31/03/2019 01:05:00&quot;, &quot;003&quot;, &quot;14/06/2019 20:00:00&quot;, &quot;004&quot;, &quot;01/12/1859 11:32:13&quot;, &quot;005&quot;, &quot;01/01/0501 05:04:33&quot; ) fechas ## # A tibble: 5 × 2 ## codigo fecha ## &lt;chr&gt; &lt;chr&gt; ## 1 001 01/01/2019 00:00:00 ## 2 002 31/03/2019 01:05:00 ## 3 003 14/06/2019 20:00:00 ## 4 004 01/12/1859 11:32:13 ## 5 005 01/01/0501 05:04:33 Hay varias opciones para convertir texto a fechas, el más usado es mdy_hms(), pero en este caso el formato utilizado no funciona bien. 24.3.1 Un error tipico fechas %&gt;% mutate(fecha = mdy_hms(fecha)) ## # A tibble: 5 × 2 ## codigo fecha ## &lt;chr&gt; &lt;dttm&gt; ## 1 001 2019-01-01 00:00:00 ## 2 002 NA ## 3 003 NA ## 4 004 1859-01-12 11:32:13 ## 5 005 0501-01-01 05:04:33 Ya que el día es el primero, y no el mes, usamos dmy_hms() nueva_fechas &lt;- fechas %&gt;% mutate(fecha = dmy_hms(fecha)) nueva_fechas ## # A tibble: 5 × 2 ## codigo fecha ## &lt;chr&gt; &lt;dttm&gt; ## 1 001 2019-01-01 00:00:00 ## 2 002 2019-03-31 01:05:00 ## 3 003 2019-06-14 20:00:00 ## 4 004 1859-12-01 11:32:13 ## 5 005 0501-01-01 05:04:33 lubridate tiene varias funciones para extraer partes de la fecha, por ejemplo: año, mes, día, hora, minuto, y quatrimestre. nueva_fechas %&gt;% mutate(a = year(fecha), m = month(fecha), d = day(fecha), h = hour(fecha), mn = minute(fecha), q = quarter(fecha) ) ## # A tibble: 5 × 8 ## codigo fecha a m d h mn q ## &lt;chr&gt; &lt;dttm&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; ## 1 001 2019-01-01 00:00:00 2019 1 1 0 0 1 ## 2 002 2019-03-31 01:05:00 2019 3 31 1 5 1 ## 3 003 2019-06-14 20:00:00 2019 6 14 20 0 2 ## 4 004 1859-12-01 11:32:13 1859 12 1 11 32 4 ## 5 005 0501-01-01 05:04:33 501 1 1 5 4 1 Las funciones round_date(), ceiling_date() y floor_date() permiten redondear la fecha al número más cercano de la unidad especificada nueva_fechas %&gt;% mutate( redondear = round_date(fecha, unit = &quot; month&quot;), # redondea al mes más cercano techo = ceiling_date(fecha, unit = &quot;day&quot;), # redondea al día más cercano suelo = floor_date(fecha, unit = &quot;month&quot;), # redondea al mes más cercano suelo_hour= floor_date(fecha, unit = &quot;hour&quot;) # redondea a la hora más cercana ) ## # A tibble: 5 × 6 ## codigo fecha redondear techo ## &lt;chr&gt; &lt;dttm&gt; &lt;dttm&gt; &lt;dttm&gt; ## 1 001 2019-01-01 00:00:00 2019-01-01 00:00:00 2019-01-01 00:00:00 ## 2 002 2019-03-31 01:05:00 2019-04-01 00:00:00 2019-04-01 00:00:00 ## 3 003 2019-06-14 20:00:00 2019-06-01 00:00:00 2019-06-15 00:00:00 ## 4 004 1859-12-01 11:32:13 1859-12-01 00:00:00 1859-12-02 00:00:00 ## 5 005 0501-01-01 05:04:33 0501-01-01 00:00:00 0501-01-02 00:00:00 ## # ℹ 2 more variables: suelo &lt;dttm&gt;, suelo_hour &lt;dttm&gt; 24.4 Intervalos y duraciones La función interval() crea un objeto R de intervalo de tiempo. En este caso, el intervalo entro la fecha en la tabla, y el día de hoy. Nota que esto puede ser muy util si quiere calcular la cantidad de tiempo entre dos fechas. nueva_fechas %&gt;% mutate(intervalo = interval(fecha, today())) # intervalo entre la fecha y hoy ## # A tibble: 5 × 3 ## codigo fecha intervalo ## &lt;chr&gt; &lt;dttm&gt; &lt;Interval&gt; ## 1 001 2019-01-01 00:00:00 2019-01-01 00:00:00 UTC--2024-11-07 UTC ## 2 002 2019-03-31 01:05:00 2019-03-31 01:05:00 UTC--2024-11-07 UTC ## 3 003 2019-06-14 20:00:00 2019-06-14 20:00:00 UTC--2024-11-07 UTC ## 4 004 1859-12-01 11:32:13 1859-12-01 11:32:13 UTC--2024-11-07 UTC ## 5 005 0501-01-01 05:04:33 0501-01-01 05:04:33 UTC--2024-11-07 UTC int_length() regresa el número de segundos dentro del intervalo nueva_fechas %&gt;% mutate( intervalo = interval(fecha, today()), # segundos = int_length(intervalo) # número de segundos en el intervalo ) ## # A tibble: 5 × 4 ## codigo fecha intervalo segundos ## &lt;chr&gt; &lt;dttm&gt; &lt;Interval&gt; &lt;dbl&gt; ## 1 001 2019-01-01 00:00:00 2019-01-01 00:00:00 UTC--2024-11-07 UTC 184636800 ## 2 002 2019-03-31 01:05:00 2019-03-31 01:05:00 UTC--2024-11-07 UTC 176943300 ## 3 003 2019-06-14 20:00:00 2019-06-14 20:00:00 UTC--2024-11-07 UTC 170395200 ## 4 004 1859-12-01 11:32:13 1859-12-01 11:32:13 UTC--2024-11-07 UTC 5204867267 ## 5 005 0501-01-01 05:04:33 0501-01-01 05:04:33 UTC--2024-11-07 UTC 48088061727 24.5 El operador %--% simplifica el cálculo del intervalo Compara con el script anterior nueva_fechas %&gt;% mutate(intervalo = fecha %--% today()) ## # A tibble: 5 × 3 ## codigo fecha intervalo ## &lt;chr&gt; &lt;dttm&gt; &lt;Interval&gt; ## 1 001 2019-01-01 00:00:00 2019-01-01 00:00:00 UTC--2024-11-07 UTC ## 2 002 2019-03-31 01:05:00 2019-03-31 01:05:00 UTC--2024-11-07 UTC ## 3 003 2019-06-14 20:00:00 2019-06-14 20:00:00 UTC--2024-11-07 UTC ## 4 004 1859-12-01 11:32:13 1859-12-01 11:32:13 UTC--2024-11-07 UTC ## 5 005 0501-01-01 05:04:33 0501-01-01 05:04:33 UTC--2024-11-07 UTC Para saber el número del días en el intervalo, divida el intervalo por la función que corresponde a días, days() nueva_fechas %&gt;% mutate(dias = fecha %--% today() / days(), anio= fecha %--% today() / years()) # número de días en el intervalo ## # A tibble: 5 × 4 ## codigo fecha dias anio ## &lt;chr&gt; &lt;dttm&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 001 2019-01-01 00:00:00 2137 5.85 ## 2 002 2019-03-31 01:05:00 2048. 5.61 ## 3 003 2019-06-14 20:00:00 1972. 5.40 ## 4 004 1859-12-01 11:32:13 60242. 165. ## 5 005 0501-01-01 05:04:33 556575. 1524. #Cuantos años de diferencia en el intervalo? Intervalo entre una lista de fecha y otra fecha y hora nueva_fechas %&gt;% mutate(dias = fecha %--% &quot;2020-01-01 00:00:00&quot; / days()) ## # A tibble: 5 × 3 ## codigo fecha dias ## &lt;chr&gt; &lt;dttm&gt; &lt;dbl&gt; ## 1 001 2019-01-01 00:00:00 365 ## 2 002 2019-03-31 01:05:00 276. ## 3 003 2019-06-14 20:00:00 200. ## 4 004 1859-12-01 11:32:13 58470. ## 5 005 0501-01-01 05:04:33 554803. 24.6 Ejercicio Usa esta función y calcula el número de día que ha transcurido entre el día de su nacimiento y el dia de hoy dias = &quot;2018-08-14 00:00:00&quot; %--% today() / days() dias ## [1] 2277 millisecond = &quot;2018-08-14 00:00:00&quot; %--% today() / milliseconds() millisecond ## [1] 196732800000 Los resultados se pueden visualizar usando ggplot2 nueva_fechas %&gt;% mutate(dias = fecha %--% today() / years()) %&gt;% ggplot() + geom_col(aes(codigo, dias)) + coord_flip() 24.7 Serie de funciones para calcular la duración de un intervalo de tiempo. dyears() # años dmonths() # meses dweeks() # semanas ddays() # días dhours() # horas dminutes() # minutos dseconds() # segundos dmilliseconds() # milisegundos dmicroseconds() # microsegundos dnanoseconds() # nanosegundos dpicoseconds() # picosegundos 24.8 as.duration as.duration() crea un objecto en R que contiene la duración del intervalo de tiempo. nueva_fechas %&gt;% mutate(desde_hoy = as.duration(fecha %--% today())) # duración desde la fecha hasta hoy ## # A tibble: 5 × 3 ## codigo fecha desde_hoy ## &lt;chr&gt; &lt;dttm&gt; &lt;Duration&gt; ## 1 001 2019-01-01 00:00:00 184636800s (~5.85 years) ## 2 002 2019-03-31 01:05:00 176943300s (~5.61 years) ## 3 003 2019-06-14 20:00:00 170395200s (~5.4 years) ## 4 004 1859-12-01 11:32:13 5204867267s (~164.93 years) ## 5 005 0501-01-01 05:04:33 48088061727s (~1523.82 years) El objeto de duración de tiempo se puede filtrar fácilmente basado en una variedad de tipo de tiempos. En este caso, semanas dweeks() crea un objeto de duración de la largura especificada nueva_fechas %&gt;% mutate(desde_hoy = as.duration(fecha %--% today())) %&gt;% filter(desde_hoy &lt; ddays(2000)) ## # A tibble: 1 × 3 ## codigo fecha desde_hoy ## &lt;chr&gt; &lt;dttm&gt; &lt;Duration&gt; ## 1 003 2019-06-14 20:00:00 170395200s (~5.4 years) 5*365 ## [1] 1825 Otra opción es ddays(). nueva_fechas %&gt;% mutate(desde_hoy = as.duration(fecha %--% today())) %&gt;% filter(desde_hoy &lt; ddays(2500)) # Nota que se puede filtrar por el número de días que han acumulado ## # A tibble: 3 × 3 ## codigo fecha desde_hoy ## &lt;chr&gt; &lt;dttm&gt; &lt;Duration&gt; ## 1 001 2019-01-01 00:00:00 184636800s (~5.85 years) ## 2 002 2019-03-31 01:05:00 176943300s (~5.61 years) ## 3 003 2019-06-14 20:00:00 170395200s (~5.4 years) 24.8.1 Funciones today() now() today() ## [1] &quot;2024-11-07&quot; now() ## [1] &quot;2024-11-07 13:40:05 AST&quot; 24.8.2 Fechas con años, meses y días ymd() ydm() mdy() myd() dmy() dym() 24.8.3 Fechas con horas, minutos y segundos ymd_hms() ymd_hm() ymd_h() ydm_hms() ydm_hm() etc 24.8.4 Fechas yq() Year quarter (quaters are 1, 2, 3, 4, Jan-March, April-Jun, Jul-Sept, Oct-Dec) x =c(&quot;2012.1&quot;, &quot;1970.4&quot;) yq(x) ## [1] &quot;2012-01-01&quot; &quot;1970-10-01&quot; yq(&quot;2012.1&quot;) ## [1] &quot;2012-01-01&quot; Cuidado con el paquete hms que tiene funciones igual como lubridate (hms, hm, y ms) , pero no necesaramente hace lo mismo. 24.9 Crear una fecha desde columnas individuales make_date() make_datetime() Unir el año, mes, día, hora y minutos que estén en diferentes columnas en uno sumamente practico cuando se tiene una base de datos con las fechas en diferentes columnas library(datos) head(vuelos) ## # A tibble: 6 × 19 ## anio mes dia horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2 ## 2 2013 1 1 533 529 4 ## 3 2013 1 1 542 540 2 ## 4 2013 1 1 544 545 -1 ## 5 2013 1 1 554 600 -6 ## 6 2013 1 1 554 558 -4 ## # ℹ 13 more variables: horario_llegada &lt;int&gt;, llegada_programada &lt;int&gt;, ## # atraso_llegada &lt;dbl&gt;, aerolinea &lt;chr&gt;, vuelo &lt;int&gt;, codigo_cola &lt;chr&gt;, ## # origen &lt;chr&gt;, destino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, distancia &lt;dbl&gt;, ## # hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt; vuelos %&gt;% dplyr::select(anio, mes, dia, hora, minuto) %&gt;% mutate(salida_dia=make_date(anio, mes, dia), salida_dia_minutos = make_datetime(anio, mes, dia, hora, minuto)) ## # A tibble: 336,776 × 7 ## anio mes dia hora minuto salida_dia salida_dia_minutos ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;date&gt; &lt;dttm&gt; ## 1 2013 1 1 5 15 2013-01-01 2013-01-01 05:15:00 ## 2 2013 1 1 5 29 2013-01-01 2013-01-01 05:29:00 ## 3 2013 1 1 5 40 2013-01-01 2013-01-01 05:40:00 ## 4 2013 1 1 5 45 2013-01-01 2013-01-01 05:45:00 ## 5 2013 1 1 6 0 2013-01-01 2013-01-01 06:00:00 ## 6 2013 1 1 5 58 2013-01-01 2013-01-01 05:58:00 ## 7 2013 1 1 6 0 2013-01-01 2013-01-01 06:00:00 ## 8 2013 1 1 6 0 2013-01-01 2013-01-01 06:00:00 ## 9 2013 1 1 6 0 2013-01-01 2013-01-01 06:00:00 ## 10 2013 1 1 6 0 2013-01-01 2013-01-01 06:00:00 ## # ℹ 336,766 more rows Unir el año, mes, día, hora que estén en diferentes columnas en uno vuelos %&gt;% dplyr::select(anio, mes, dia, hora, minuto) %&gt;% mutate(salida2 = make_date(anio, mes, dia)) ## # A tibble: 336,776 × 6 ## anio mes dia hora minuto salida2 ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;date&gt; ## 1 2013 1 1 5 15 2013-01-01 ## 2 2013 1 1 5 29 2013-01-01 ## 3 2013 1 1 5 40 2013-01-01 ## 4 2013 1 1 5 45 2013-01-01 ## 5 2013 1 1 6 0 2013-01-01 ## 6 2013 1 1 5 58 2013-01-01 ## 7 2013 1 1 6 0 2013-01-01 ## 8 2013 1 1 6 0 2013-01-01 ## 9 2013 1 1 6 0 2013-01-01 ## 10 2013 1 1 6 0 2013-01-01 ## # ℹ 336,766 more rows ## Conversión de fechas que no son estándar Datos_raros=tribble(~Ind, ~fechas, 1, &quot;1/1/30&quot;, 2, &quot;1/30/01&quot;, 3, &quot;1/30/09&quot;) Datos_raros ## # A tibble: 3 × 2 ## Ind fechas ## &lt;dbl&gt; &lt;chr&gt; ## 1 1 1/1/30 ## 2 2 1/30/01 ## 3 3 1/30/09 Datos_raros %&gt;% mutate(nueva_fecha = mdy(fechas)) ## # A tibble: 3 × 3 ## Ind fechas nueva_fecha ## &lt;dbl&gt; &lt;chr&gt; &lt;date&gt; ## 1 1 1/1/30 2030-01-01 ## 2 2 1/30/01 2001-01-30 ## 3 3 1/30/09 2009-01-30 Datos_raros$fecha2=as.Date(as.Date(format(as.Date(Datos_raros$fechas, format=&quot;%m/%d/%Y&quot;), &quot;19%y%m%d&quot;), &quot;%Y%m%d&quot;)) Datos_raros ## # A tibble: 3 × 3 ## Ind fechas fecha2 ## &lt;dbl&gt; &lt;chr&gt; &lt;date&gt; ## 1 1 1/1/30 1930-01-01 ## 2 2 1/30/01 1901-01-30 ## 3 3 1/30/09 1909-01-30 24.10 %/%: integer division vuelos |&gt; dplyr::select(tiempo_vuelo) |&gt; mutate(t=tiempo_vuelo %/% 100) |&gt; # Division mutate(m= tiempo_vuelo %% 100) # modulus... Cambia el 100 para 1, 10, 1000... y mira cual es el resultado ## # A tibble: 336,776 × 3 ## tiempo_vuelo t m ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 227 2 27 ## 2 227 2 27 ## 3 160 1 60 ## 4 183 1 83 ## 5 116 1 16 ## 6 150 1 50 ## 7 158 1 58 ## 8 53 0 53 ## 9 140 1 40 ## 10 138 1 38 ## # ℹ 336,766 more rows 24.11 The %% operator returns the modulus (remainder) of a division operation. For instance, 5 %% 2 would return 1, as the remainder of 5 divided by 2 is 1. names(vuelos) ## [1] &quot;anio&quot; &quot;mes&quot; &quot;dia&quot; ## [4] &quot;horario_salida&quot; &quot;salida_programada&quot; &quot;atraso_salida&quot; ## [7] &quot;horario_llegada&quot; &quot;llegada_programada&quot; &quot;atraso_llegada&quot; ## [10] &quot;aerolinea&quot; &quot;vuelo&quot; &quot;codigo_cola&quot; ## [13] &quot;origen&quot; &quot;destino&quot; &quot;tiempo_vuelo&quot; ## [16] &quot;distancia&quot; &quot;hora&quot; &quot;minuto&quot; ## [19] &quot;fecha_hora&quot; hacer_fechahora_100 &lt;- function(anio, mes, dia, tiempo) { make_datetime(anio, mes, dia, tiempo %/% 100, tiempo %% 100) } vuelos_dt &lt;- vuelos %&gt;% filter(!is.na(horario_salida), !is.na(horario_llegada)) %&gt;% mutate( horario_salida = hacer_fechahora_100(anio, mes, dia, horario_salida), horario_llegada = hacer_fechahora_100(anio, mes, dia, horario_llegada), salida_programada = hacer_fechahora_100(anio, mes, dia, salida_programada), llegada_programada = hacer_fechahora_100(anio, mes, dia, llegada_programada) ) %&gt;% dplyr::select(origen, destino, starts_with(&quot;atraso&quot;), starts_with(&quot;horario&quot;), ends_with(&quot;programada&quot;), tiempo_vuelo) head(vuelos_dt) ## # A tibble: 6 × 9 ## origen destino atraso_salida atraso_llegada horario_salida ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dttm&gt; ## 1 EWR IAH 2 11 2013-01-01 05:17:00 ## 2 LGA IAH 4 20 2013-01-01 05:33:00 ## 3 JFK MIA 2 33 2013-01-01 05:42:00 ## 4 JFK BQN -1 -18 2013-01-01 05:44:00 ## 5 LGA ATL -6 -25 2013-01-01 05:54:00 ## 6 EWR ORD -4 12 2013-01-01 05:54:00 ## # ℹ 4 more variables: horario_llegada &lt;dttm&gt;, salida_programada &lt;dttm&gt;, ## # llegada_programada &lt;dttm&gt;, tiempo_vuelo &lt;dbl&gt; 24.11.0.1 Cuantos segundos hay en un dia? vuelos_dt %&gt;% ggplot(aes(horario_salida)) + geom_freqpoly(binwidth = 86400) # 86400 segundos = 1 día vuelos_dt %&gt;% filter(horario_salida &lt; ymd(20130102)) %&gt;% ggplot(aes(horario_salida)) + geom_freqpoly(binwidth = 600) # 600 segundos = 10 minutos Nota variables que no funciona ymd(c(&quot;2010-10-10&quot;, &quot;bananas&quot;)) ## [1] &quot;2010-10-10&quot; NA d1 &lt;- &quot;Jan 1, 2010&quot; mdy(d1) ## [1] &quot;2010-01-01&quot; d2 &lt;- &quot;2015-Mar-07&quot; ymd(d2) ## [1] &quot;2015-03-07&quot; d3 &lt;- &quot;06-Jun-2017&quot; dmy(d3) ## [1] &quot;2017-06-06&quot; d4 &lt;- c(&quot;Aug 19 (2015)&quot;, &quot;Jul 1 (2015)&quot;) mdy(d4) ## [1] &quot;2015-08-19&quot; &quot;2015-07-01&quot; d5 &lt;- &quot;12/30/14&quot; # Diciembre 30, 2014 mdy(d5) ## [1] &quot;2014-12-30&quot; d6 &lt;- &quot;ene 1, 2010&quot; mdy(d6) ## [1] NA d7 &lt;- c(&quot;Agosto 19 (2015)&quot;, &quot;Julio 1 (2015)&quot;) mdy(d7) ## [1] NA NA d1 ## [1] &quot;Jan 1, 2010&quot; d2 ## [1] &quot;2015-Mar-07&quot; d3 ## [1] &quot;06-Jun-2017&quot; d4 ## [1] &quot;Aug 19 (2015)&quot; &quot;Jul 1 (2015)&quot; d5 ## [1] &quot;12/30/14&quot; d6 ## [1] &quot;ene 1, 2010&quot; d7 ## [1] &quot;Agosto 19 (2015)&quot; &quot;Julio 1 (2015)&quot; mdy(d1) ## [1] &quot;2010-01-01&quot; ymd(d2) ## [1] &quot;2015-03-07&quot; dmy(d3) ## [1] &quot;2017-06-06&quot; mdy(d4) ## [1] &quot;2015-08-19&quot; &quot;2015-07-01&quot; mdy(d5) ## [1] &quot;2014-12-30&quot; mdy(d6) ## [1] NA mdy(d7) ## [1] NA NA Ejercicios: Hacer los ejercicios en la sección 16.2.4 del libro en español 24.12 Extrayendo parte de las fecha-hora year() month() mday() yday() wday() ceiling_date() floor_date() round_date() Ejercicios: Hacer estos ejercicios en la sección 16.3.4 del libro en español. Entregar por MSTeams. ¿Cómo cambia la demora promedio durante el curso de un día? ¿Deberías usar horario_salida o salida_programada? ¿Por qué? ¿En qué día de la semana deberías salir si quieres minimizar las posibilidades de una demora? Confirma nuestra hipótesis de que las salidas programadas en los minutos 20-30 y 50-60 están casuadas por los vuelos programados que salen más temprano. Pista: crea una variable binaria que te diga si un vuelo tuvo o no demora. 24.13 Lapso de tiempo 24.14 duraciones # ¿Qué edad tiene Charles Darwin? fecha de naciemiento February 12, 1809 edad_h &lt;- today() - ymd(&quot;1809-02-12&quot;) edad_h &lt;- today() - ymd(18090212) edad_h ## Time difference of 78796 days as.duration(edad_h) ## [1] &quot;6807974400s (~215.73 years)&quot; x=as.duration(edad_h) Otras funciones de duración dseconds(15) ## [1] &quot;15s&quot; dminutes(10) ## [1] &quot;600s (~10 minutes)&quot; dhours(c(12, 24)) ## [1] &quot;43200s (~12 hours)&quot; &quot;86400s (~1 days)&quot; ddays(0:5) ## [1] &quot;0s&quot; &quot;86400s (~1 days)&quot; &quot;172800s (~2 days)&quot; ## [4] &quot;259200s (~3 days)&quot; &quot;345600s (~4 days)&quot; &quot;432000s (~5 days)&quot; dweeks(3) ## [1] &quot;1814400s (~3 weeks)&quot; dyears(1) ## [1] &quot;31557600s (~1 years)&quot; 24.15 Puede agregar periodos de tiempo 2 * dyears(1) ## [1] &quot;63115200s (~2 years)&quot; dyears(1) + dweeks(12) + dhours(15) ## [1] &quot;38869200s (~1.23 years)&quot; ayer &lt;- today() - ddays(1) anio_pasado &lt;- today() - dyears(1) ayer ## [1] &quot;2024-11-06&quot; anio_pasado ## [1] &quot;2023-11-07 18:00:00 UTC&quot; 24.16 períodos una_pm &lt;- ymd_hms(&quot;2016-03-12 13:00:00&quot;, tz = &quot;America/New_York&quot;) una_pm ## [1] &quot;2016-03-12 13:00:00 EST&quot; #&gt; [1] &quot;2016-03-12 13:00:00 EST&quot; una_pm + ddays(1) ## [1] &quot;2016-03-13 14:00:00 EDT&quot; #&gt; [1] &quot;2016-03-13 14:00:00 EDT&quot; seconds(15) ## [1] &quot;15S&quot; #&gt; [1] &quot;15S&quot; minutes(10) ## [1] &quot;10M 0S&quot; #&gt; [1] &quot;10M 0S&quot; hours(c(12, 24)) ## [1] &quot;12H 0M 0S&quot; &quot;24H 0M 0S&quot; #&gt; [1] &quot;12H 0M 0S&quot; &quot;24H 0M 0S&quot; days(7) ## [1] &quot;7d 0H 0M 0S&quot; #&gt; [1] &quot;7d 0H 0M 0S&quot; months(1:6) ## [1] &quot;1m 0d 0H 0M 0S&quot; &quot;2m 0d 0H 0M 0S&quot; &quot;3m 0d 0H 0M 0S&quot; &quot;4m 0d 0H 0M 0S&quot; ## [5] &quot;5m 0d 0H 0M 0S&quot; &quot;6m 0d 0H 0M 0S&quot; #&gt; [1] &quot;1m 0d 0H 0M 0S&quot; &quot;2m 0d 0H 0M 0S&quot; &quot;3m 0d 0H 0M 0S&quot; &quot;4m 0d 0H 0M 0S&quot; #&gt; [5] &quot;5m 0d 0H 0M 0S&quot; &quot;6m 0d 0H 0M 0S&quot; weeks(3) ## [1] &quot;21d 0H 0M 0S&quot; #&gt; [1] &quot;21d 0H 0M 0S&quot; years(1) ## [1] &quot;1y 0m 0d 0H 0M 0S&quot; #&gt; [1] &quot;1y 0m 0d 0H 0M 0S&quot; 10 * (months(6) + days(1)) ## [1] &quot;60m 10d 0H 0M 0S&quot; #&gt; [1] &quot;60m 10d 0H 0M 0S&quot; days(50) + hours(25) + minutes(2) ## [1] &quot;50d 25H 2M 0S&quot; #&gt; [1] &quot;50d 25H 2M 0S&quot; # Un año bisiesto ymd(&quot;2016-01-01&quot;) + dyears(1) ## [1] &quot;2016-12-31 06:00:00 UTC&quot; #&gt; [1] &quot;2016-12-31 06:00:00 UTC&quot; ymd(&quot;2016-01-01&quot;) + years(1) ## [1] &quot;2017-01-01&quot; #&gt; [1] &quot;2017-01-01&quot; # Horarios de verano una_pm + ddays(1) ## [1] &quot;2016-03-13 14:00:00 EDT&quot; #&gt; [1] &quot;2016-03-13 14:00:00 EDT&quot; una_pm + days(1) ## [1] &quot;2016-03-13 13:00:00 EDT&quot; #&gt; [1] &quot;2016-03-13 13:00:00 EDT&quot; 10 * (months(6) + days(1)) ## [1] &quot;60m 10d 0H 0M 0S&quot; #&gt; [1] &quot;60m 10d 0H 0M 0S&quot; days(50) + hours(25) + minutes(2) ## [1] &quot;50d 25H 2M 0S&quot; #&gt; [1] &quot;50d 25H 2M 0S&quot; intervalos 24.16.1 Multiplicaciones y sumas de fechas 24.17 Períodos seconds() minutes() hours() days() months() weeks() years() 24.17.1 Multiplicaciones y sumas de periodos 24.18 Intervalos %–% start end 24.19 Resumen Ejercicios: Hacer los ejercicios en la sección 16.4.5 del libro en español 24.20 Time zones Sys.timezone() head(OlsonNames()) tz= “” Ejercicios: Seleccionar 3 archivos de los vuelos que salen o llegan a PR, (el codigo del aeropuerto es “SJU”) de la base de datos de https://www.transtats.bts.gov/DL_SelectFields.asp?Table_ID=236 Pueden ser el mismo mes en 3 diferente años o 3 diferentes mese en el mismo año. Repite la mayoría de los análisis enseñado arriba (como practica). Evaluar el tiempo de retrazo de los vuelos que salen de SJU en cada periodo seleccionado, y haz una gráfica para visualizar el patrón Cual es el día preferible para no tener retraso Cual es la mejor hora de salida para no tener retraso Compara por lo menos 3 diferentes lineas saliendo de SJU y el periodo de retrazo. "],["opciones-de-knitr.html", "Capítulo25 Opciones de Knitr 25.1 Tablas de opciones principales 25.2 Emoji or Symbols", " Capítulo25 Opciones de Knitr ## [1] &quot;2024-11-07&quot; La mayoria de los ejemplos y ideas de esta seccieon proviene de yihui en el siguiente website &lt;https://yihui.org/knitr/&gt; el paquete knitr fue desiñado para ser transparente para generar reporte de R, añadiendo componente de animación y Latex (Ecuaciones) y otras funciones. Hay muchas opciones para determinar lo que have un chunk Code evaluation: evaluación de código Text output: Formateo de texto Code decoration: Decoración del código Cache: Cache Plots: Gráficos Animation: Animaciones Code chunk: Código del chunk Child Document: Documento asociados Language engines: Asociación de lenguaje Option Temnplate: Extracting source code: Other chunk options: Package Options: Global R Options: Este chunk es para que la información de los chunk and la parte de knitr se vea. library(knitr) hook_chunk = knit_hooks$get(&#39;chunk&#39;) knit_hooks$set(chunk = function(x, options) { if (!is.null(options$echo_opts)) { return(paste0(&quot;```` ```{r &quot;, options$params.src, &quot;} ````&quot;, x, &quot;```` ``` ````&quot;)) } else { return(hook_chunk(x, options)) # pass to default hook } }) opts_knit$set(eval.after = &#39;fig.cap&#39;) Los ejemplos aquí serán limitado a las alternativas para los documentos .Rmd Las opciones están escrita de forma de tag=selección de la alternativa. Opciones de bloques Se personaliza los bloques con “opeciones” options de los chunks. En la rueda de a la derecha de cada chunk hay opciones para seleccionar opciones. 25.1 Tablas de opciones principales Opción Ejecuta Muestra Output Gráficos Mensajes Advertencias eval=FASLE - - - - - include=FALSE - - - - - echo=FALSE - results=“hide” - fig.show =“hide” - message=FALSE - warning=FALSE - Comenzando con dandole un nombre al chunk “mi-chunk” library(tidyverse) algun_nombre, echo=TRUE Eso es lo que va a ver cuando hace el knit Nota aqui tengo include=FALSE, por consecuencia cuando se hace un knit, no se ve lo que hay en el chunk. - Ahora cambialo a TRUE ```{r include_true, include=TRUE, echo_opts=TRUE} head(cars) ## speed dist ## 1 4 2 ## 2 4 10 ## 3 7 4 ## 4 7 22 ## 5 8 16 ## 6 9 10 ``` Añade una figura ```{r cars, echo=TRUE, echo_opts=TRUE} plot(cars) ``` ```{r position_caption, fig.cap='El nombre de mi figure.', fig.topcaption=TRUE, echo_opts=TRUE} plot(cars) (#fig:position_caption)El nombre de mi figure. ``` ```{r fig.cap= \"An incredible figure\", echo_opts=TRUE} library(ggplot2) df &lt;- data.frame(letters = letters[1:5], value = 1) ggplot(df, aes(letters, value, fill = letters)) + geom_bar(stat = &quot;identity&quot;) Figure 25.1: An incredible figure ``` ```{r ggplot, fig.cap= \"An incredible figure\", fig.width = 3, fig.height = 3, echo_opts=TRUE, echo=FALSE} Figure 25.2: An incredible figure ``` Figure aligment: default, left, right, and center fig.align ```{r fig.cap= \"caption\", fig.width = 3, fig.height = 3, fig.align='right', echo_opts=TRUE} library(ggplot2) df &lt;- data.frame(letters = letters[1:5], value = 1) ggplot(df, aes(letters, value, fill = letters)) + geom_bar(stat = &quot;identity&quot;) Figure 25.3: caption ``` Wrap text around figure Use ese código para que el texto “wraps” alrededor de las figura (ese código es de otro idioma de computadora de se llama css) AQUI el CHUNK 25.1.0.0.1 R Markdown wrapping df &lt;- data.frame(letters = letters[1:5], value = 1) ggplot(df, aes(letters, value, fill = letters)) + geom_bar(stat = &quot;identity&quot;) Figure 25.4: caption This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com. When you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this: Note that the echo = TRUE parameter was added to the code chunk to have printing of the R code that generated the plot. 25.1.1 OTRAS funciones de knitr eval= to evaluate the code FALSE or TRUE echo = TO show the code FALSE or TRUE message = FALSE or TRUE warning = FALSE or TRUE error =FALSE or TRUE results = ‘asis’ To show text exactly as printed/written ## [1] 1 2 3 4 5 6 7 8 9 10 library(MASS) library(dplyr) library(MASS) cat(&quot;I&#39;m raw **Markdown** content.\\n&quot;, &quot;My poetry of Puerto Rico\\n&quot;) I’m raw Markdown content. My poetry of Puerto Rico 25.2 Emoji or Symbols 25.2.1 Select Under the Edit ➡ Emoji &amp; Symbols. 25.2.1.0.1 Remember you can add emoji’s to your document Sometimes you want to 🙈 around a bit and add some ⭐️⭐️ to your 🎈🎈 Well we have a gift for you if you add interesting emoji’s to your document. "],["nubes-de-palabra-en-r.html", "Capítulo26 Nubes de palabra en R 26.1 Ejemplo #1 26.2 Usando los datos en el paquete wordcloud2 que se llama demoFreq 26.3 Paso 1 26.4 Subir el texto en formato Corpus 26.5 Mirar el documento, para evaluar su contenido 26.6 Transformar el texto para reemplazar algunos caracteres especiales, y remplazarlos por espacio en blanco 26.7 el paquete tm es para text mining 26.8 Crear una matriz de las palabras de mi documento 26.9 Ejemplo 2 26.10 Como remover palabras de otra idioma 26.11 En español 26.12 Un documento para hacer un word cloud “La intelegencia artifical” 26.13 Convertir su documento en Corpus y identificar que es en español 26.14 Limpieza del documento 26.15 Transformar el texto en un documento de texto sencillo (Plain Text) 26.16 Transformar el texto para reemplazar algunos caracteres especiales 26.17 Crear una matriz de las palabras 26.18 Calcular la frecuencia de de cada palabra", " Capítulo26 Nubes de palabra en R ## [1] &quot;2024-11-07&quot; 26.1 Ejemplo #1 Para generar nubes de palabras con R. Se necesita los paquetes wordcloud, RColorBrewer y wordcloud2 Ese ejemplo es una copia de la siguiente pagina de web http://www.sthda.com/english/wiki/word-cloud-generator-in-r-one-killer-function-to-do-everything-you-need if (!require(&quot;pacman&quot;)) install.packages(&quot;pacman&quot;) pacman::p_load(tm, SnowballC, wordcloud, RColorBrewer, wordcloud2) library(wordcloud) # Un paquete para hacer word cloud library(wordcloud2) # paquete más sencillo para hacer word cloud2 library(RColorBrewer) # paquete para cambiar los colores library(tm) # paquete de text mining library(SnowballC) # paquete para trabajar en otro idioma aparte de ingles 26.2 Usando los datos en el paquete wordcloud2 que se llama demoFreq demoFreq ## word freq ## oil oil 85 ## said said 73 ## prices prices 48 ## opec opec 42 ## mln mln 31 ## the the 26 ## last last 24 ## bpd bpd 23 ## dlrs dlrs 23 ## crude crude 21 ## market market 20 ## reuter reuter 20 ## saudi saudi 18 ## will will 18 ## one one 17 ## barrel barrel 15 ## kuwait kuwait 14 ## new new 14 ## official official 14 ## pct pct 14 ## price price 13 ## barrels barrels 11 ## government government 11 ## production production 11 ## sheikh sheikh 11 ## industry industry 10 ## meeting meeting 10 ## minister minister 10 ## world world 10 ## also also 9 ## billion billion 9 ## futures futures 9 ## month month 9 ## output output 9 ## petroleum petroleum 9 ## quota quota 9 ## sources sources 9 ## accord accord 8 ## analysts analysts 8 ## but but 8 ## group group 8 ## gulf gulf 8 ## january january 8 ## markets markets 8 ## report report 8 ## today today 8 ## december december 7 ## demand demand 7 ## economic economic 7 ## economy economy 7 ## energy energy 7 ## help help 7 ## international international 7 ## may may 7 ## nazer nazer 7 ## nymex nymex 7 ## posted posted 7 ## present present 7 ## they they 7 ## traders traders 7 ## 158 158 6 ## ability ability 6 ## agreement agreement 6 ## ali ali 6 ## april april 6 ## arabia arabia 6 ## budget budget 6 ## emergency emergency 6 ## exchange exchange 6 ## hold hold 6 ## imports imports 6 ## members members 6 ## recent recent 6 ## riyals riyals 6 ## says says 6 ## sell sell 6 ## years years 6 ## abdulaziz abdulaziz 5 ## agency agency 5 ## arab arab 5 ## ceiling ceiling 5 ## company company 5 ## contract contract 5 ## daily daily 5 ## emirates emirates 5 ## expected expected 5 ## expenditure expenditure 5 ## exports exports 5 ## growth growth 5 ## now now 5 ## opecs opecs 5 ## plans plans 5 ## qatar qatar 5 ## quoted quoted 5 ## research research 5 ## reserve reserve 5 ## reserves reserves 5 ## states states 5 ## study study 5 ## united united 5 ## way way 5 ## week week 5 ## west west 5 ## year year 5 ## 150 150 4 ## according according 4 ## added added 4 ## among among 4 ## asked asked 4 ## brings brings 4 ## buyers buyers 4 ## can can 4 ## change change 4 ## corp corp 4 ## cut cut 4 ## day day 4 ## development development 4 ## effective effective 4 ## exploration exploration 4 ## fall fall 4 ## february february 4 ## fell fell 4 ## free free 4 ## higher higher 4 ## increase increase 4 ## levels levels 4 ## meet meet 4 ## must must 4 ## never never 4 ## per per 4 ## policy policy 4 ## power power 4 ## problem problem 4 ## producing producing 4 ## protect protect 4 ## pumping pumping 4 ## reduced reduced 4 ## revenue revenue 4 ## revenues revenues 4 ## rise rise 4 ## saying saying 4 ## set set 4 ## since since 4 ## spa spa 4 ## strategic strategic 4 ## texas texas 4 ## this this 4 ## total total 4 ## transaction transaction 4 ## weak weak 4 ## yesterday yesterday 4 ## 13nation 13nation 3 ## 1985 1985 3 ## 198586 198586 3 ## 1986 1986 3 ## 1987 1987 3 ## 198788 198788 3 ## address address 3 ## agreed agreed 3 ## alkhalifa alkhalifa 3 ## alqabas alqabas 3 ## alsabah alsabah 3 ## announced announced 3 ## appears appears 3 ## arabian arabian 3 ## arabias arabias 3 ## around around 3 ## average average 3 ## back back 3 ## bank bank 3 ## bbl bbl 3 ## boost boost 3 ## called called 3 ## commitment commitment 3 ## companies companies 3 ## compared compared 3 ## countrys countrys 3 ## current current 3 ## decrease decrease 3 ## denied denied 3 ## dollars dollars 3 ## domestic domestic 3 ## due due 3 ## efp efp 3 ## estimate estimate 3 ## estimates estimates 3 ## export export 3 ## fixed fixed 3 ## foreign foreign 3 ## four four 3 ## future future 3 ## grade grade 3 ## guard guard 3 ## high high 3 ## hisham hisham 3 ## however however 3 ## inc inc 3 ## indonesia indonesia 3 ## indonesias indonesias 3 ## intermediate intermediate 3 ## kingdoms kingdoms 3 ## kuwaits kuwaits 3 ## local local 3 ## low low 3 ## lower lower 3 ## lowered lowered 3 ## made made 3 ## main main 3 ## march march 3 ## mckiernan mckiernan 3 ## measures measures 3 ## mizrahi mizrahi 3 ## moves moves 3 ## much much 3 ## named named 3 ## next next 3 ## officials officials 3 ## plant plant 3 ## position position 3 ## president president 3 ## pressure pressure 3 ## producer producer 3 ## projected projected 3 ## published published 3 ## real real 3 ## refinery refinery 3 ## reiterated reiterated 3 ## remain remain 3 ## rule rule 3 ## say say 3 ## sector sector 3 ## several several 3 ## sharp sharp 3 ## ship ship 3 ## six six 3 ## slightly slightly 3 ## smaller smaller 3 ## spokeswoman spokeswoman 3 ## state state 3 ## sweet sweet 3 ## texaco texaco 3 ## three three 3 ## trading trading 3 ## two two 3 ## weeks weeks 3 ## york york 3 ## 1518 1518 2 ## 198687 198687 2 ## 20s 20s 2 ## 285000 285000 2 ## 500 500 2 ## 725 725 2 ## 750 750 2 ## 948000 948000 2 ## activity activity 2 ## adhering adhering 2 ## agriculture agriculture 2 ## along along 2 ## apparently apparently 2 ## appeared appeared 2 ## approved approved 2 ## architect architect 2 ## areas areas 2 ## aspen aspen 2 ## bankers bankers 2 ## based based 2 ## benchmark benchmark 2 ## benefits benefits 2 ## canada canada 2 ## canadian canadian 2 ## cash cash 2 ## changed changed 2 ## changes changes 2 ## circumstance circumstance 2 ## clearly clearly 2 ## closed closed 2 ## coast coast 2 ## come come 2 ## committee committee 2 ## commodity commodity 2 ## consumption consumption 2 ## countries countries 2 ## country country 2 ## crossroads crossroads 2 ## crucial crucial 2 ## cubic cubic 2 ## currently currently 2 ## customers customers 2 ## deal deal 2 ## decembers decembers 2 ## decline decline 2 ## deficit deficit 2 ## deposits deposits 2 ## deputy deputy 2 ## diamond diamond 2 ## differentials differentials 2 ## difficulties difficulties 2 ## direction direction 2 ## discounted discounted 2 ## dlr dlr 2 ## early early 2 ## ecuador ecuador 2 ## effect effect 2 ## embargo embargo 2 ## embassy embassy 2 ## entering entering 2 ## even even 2 ## falling falling 2 ## feb feb 2 ## first first 2 ## fiscal fiscal 2 ## fiscales fiscales 2 ## forced forced 2 ## fully fully 2 ## gcc gcc 2 ## general general 2 ## given given 2 ## grades grades 2 ## halt halt 2 ## hit hit 2 ## hope hope 2 ## humanistic humanistic 2 ## impact impact 2 ## import import 2 ## increased increased 2 ## increasing increasing 2 ## instead instead 2 ## institute institute 2 ## interview interview 2 ## investment investment 2 ## jersey jersey 2 ## june june 2 ## keep keep 2 ## late late 2 ## light light 2 ## limit limit 2 ## limits limits 2 ## line line 2 ## lost lost 2 ## louisiana louisiana 2 ## lowest lowest 2 ## major major 2 ## marketing marketing 2 ## member member 2 ## mid mid 2 ## million million 2 ## ministers ministers 2 ## mitigate mitigate 2 ## months months 2 ## nearing nearing 2 ## net net 2 ## neutral neutral 2 ## none none 2 ## nuclear nuclear 2 ## organisation organisation 2 ## organization organization 2 ## outlook outlook 2 ## overseas overseas 2 ## pact pact 2 ## pay pay 2 ## petroliferos petroliferos 2 ## planned planned 2 ## port port 2 ## positive positive 2 ## postings postings 2 ## predicted predicted 2 ## press press 2 ## pricing pricing 2 ## private private 2 ## probably probably 2 ## problems problems 2 ## pronounced pronounced 2 ## protected protected 2 ## public public 2 ## put put 2 ## quotes quotes 2 ## raise raise 2 ## rate rate 2 ## reduction reduction 2 ## referring referring 2 ## remarks remarks 2 ## reports reports 2 ## return return 2 ## review review 2 ## risks risks 2 ## riyal riyal 2 ## selfimposed selfimposed 2 ## selling selling 2 ## share share 2 ## shortfall shortfall 2 ## spot spot 2 ## steady steady 2 ## stick stick 2 ## strongly strongly 2 ## studies studies 2 ## support support 2 ## take take 2 ## taken taken 2 ## techniques techniques 2 ## throughput throughput 2 ## trade trade 2 ## trust trust 2 ## trying trying 2 ## uncertainty uncertainty 2 ## union union 2 ## value value 2 ## wam wam 2 ## wanted wanted 2 ## weakness weakness 2 ## winter winter 2 ## yacimientos yacimientos 2 ## yanbu yanbu 2 ## zero zero 2 ## zone zone 2 ## 100000 100000 1 ## 108 108 1 ## 111 111 1 ## 115 115 1 ## 12217 12217 1 ## 1232 1232 1 ## 1381 1381 1 ## 13member 13member 1 ## 156 156 1 ## 1600 1600 1 ## 1635 1635 1 ## 1650 1650 1 ## 1667 1667 1 ## 168 168 1 ## 1685 1685 1 ## 1752 1752 1 ## 180000 180000 1 ## 200000 200000 1 ## 200foot 200foot 1 ## 2226 2226 1 ## 24hour 24hour 1 ## 2766 2766 1 ## 300 300 1 ## 3749598 3749598 1 ## 3750003 3750003 1 ## 4133 4133 1 ## 534 534 1 ## 5472 5472 1 ## 614 614 1 ## 658 658 1 ## 6745 6745 1 ## 678 678 1 ## 718 718 1 ## 738 738 1 ## able able 1 ## abroad abroad 1 ## accept accept 1 ## across across 1 ## add add 1 ## addressed addressed 1 ## adherence adherence 1 ## advantage advantage 1 ## advisers advisers 1 ## after after 1 ## agricultural agricultural 1 ## aground aground 1 ## allocated allocated 1 ## allocations allocations 1 ## allow allow 1 ## almost almost 1 ## already already 1 ## althani althani 1 ## although although 1 ## alvite alvite 1 ## amidst amidst 1 ## analysis analysis 1 ## analyst analyst 1 ## annual annual 1 ## anything anything 1 ## apparent apparent 1 ## aramco aramco 1 ## argentine argentine 1 ## arrangement arrangement 1 ## asia asia 1 ## asian asian 1 ## assesses assesses 1 ## assign assign 1 ## assigned assigned 1 ## associates associates 1 ## attract attract 1 ## available available 1 ## averaging averaging 1 ## aware aware 1 ## bahrain bahrain 1 ## bahrains bahrains 1 ## balance balance 1 ## baseless baseless 1 ## basic basic 1 ## basis basis 1 ## because because 1 ## beginning beginning 1 ## bijan bijan 1 ## bin bin 1 ## bit bit 1 ## bodys bodys 1 ## briefly briefly 1 ## broadened broadened 1 ## brothers brothers 1 ## buildings buildings 1 ## burden burden 1 ## buy buy 1 ## buyer buyer 1 ## calendar calendar 1 ## cambridge cambridge 1 ## capacity capacity 1 ## capozza capozza 1 ## carrying carrying 1 ## center center 1 ## century century 1 ## cera cera 1 ## certain certain 1 ## cftc cftc 1 ## chairman chairman 1 ## challenge challenge 1 ## characterized characterized 1 ## charging charging 1 ## cheap cheap 1 ## cheating cheating 1 ## chevron chevron 1 ## chv chv 1 ## cited cited 1 ## citing citing 1 ## clever clever 1 ## close close 1 ## closer closer 1 ## closes closes 1 ## coming coming 1 ## commission commission 1 ## communications communications 1 ## companys companys 1 ## completed completed 1 ## complex complex 1 ## condition condition 1 ## conditions conditions 1 ## considered considered 1 ## construction construction 1 ## contacts contacts 1 ## continuation continuation 1 ## continue continue 1 ## continued continued 1 ## continues continues 1 ## contracted contracted 1 ## contributed contributed 1 ## control control 1 ## cooperation cooperation 1 ## coordination coordination 1 ## copany copany 1 ## corps corps 1 ## council council 1 ## counter counter 1 ## coupled coupled 1 ## covered covered 1 ## creek creek 1 ## critical critical 1 ## cts cts 1 ## currency currency 1 ## custom custom 1 ## cuts cuts 1 ## cutting cutting 1 ## cypriot cypriot 1 ## daniel daniel 1 ## david david 1 ## days days 1 ## debtburdened debtburdened 1 ## debut debut 1 ## decided decided 1 ## declared declared 1 ## declines declines 1 ## deemed deemed 1 ## defence defence 1 ## delaware delaware 1 ## delivered delivered 1 ## delivering delivering 1 ## departments departments 1 ## deregulate deregulate 1 ## deregulation deregulation 1 ## determination determination 1 ## devalue devalue 1 ## device device 1 ## differential differential 1 ## difficulty difficulty 1 ## dillard dillard 1 ## director director 1 ## discuss discuss 1 ## discussing discussing 1 ## distribution distribution 1 ## distributions distributions 1 ## divided divided 1 ## doha doha 1 ## dollar dollar 1 ## drawbacks drawbacks 1 ## drop drop 1 ## dropped dropped 1 ## earlier earlier 1 ## earnings earnings 1 ## eastern eastern 1 ## easy easy 1 ## ecuadors ecuadors 1 ## editor editor 1 ## edmontonswann edmontonswann 1 ## education education 1 ## eight eight 1 ## either either 1 ## elaborate elaborate 1 ## elections elections 1 ## electricity electricity 1 ## end end 1 ## engineers engineers 1 ## entitlements entitlements 1 ## environment environment 1 ## equally equally 1 ## estimated estimated 1 ## european european 1 ## exceed exceed 1 ## exceeding exceeding 1 ## excess excess 1 ## excesses excesses 1 ## excessive excessive 1 ## exerted exerted 1 ## exist exist 1 ## expanded expanded 1 ## expansion expansion 1 ## expartners expartners 1 ## expectations expectations 1 ## expects expects 1 ## explained explained 1 ## exporting exporting 1 ## exxon exxon 1 ## face face 1 ## faced faced 1 ## faces faces 1 ## facilities facilities 1 ## facing facing 1 ## failed failed 1 ## fallen fallen 1 ## favours favours 1 ## fee fee 1 ## fernando fernando 1 ## figure figure 1 ## figures figures 1 ## finance finance 1 ## firmer firmer 1 ## floating floating 1 ## followed followed 1 ## for for 1 ## forces forces 1 ## foremost foremost 1 ## fourth fourth 1 ## frank frank 1 ## full full 1 ## fundamentals fundamentals 1 ## gas gas 1 ## generally generally 1 ## geneva geneva 1 ## get get 1 ## globalization globalization 1 ## glut glut 1 ## guaranteed guaranteed 1 ## halting halting 1 ## harvard harvard 1 ## heads heads 1 ## health health 1 ## hedge hedge 1 ## hedged hedged 1 ## helped helped 1 ## hemisphere hemisphere 1 ## highly highly 1 ## hills hills 1 ## hitting hitting 1 ## hoped hoped 1 ## housing housing 1 ## houston houston 1 ## immediately immediately 1 ## implementation implementation 1 ## improve improve 1 ## improvement improvement 1 ## include include 1 ## including including 1 ## independent independent 1 ## indications indications 1 ## initiate initiate 1 ## initiative initiative 1 ## institutions institutions 1 ## interbank interbank 1 ## interest interest 1 ## investments investments 1 ## issue issue 1 ## jamaica jamaica 1 ## jan jan 1 ## juaymah juaymah 1 ## jubail jubail 1 ## jump jump 1 ## just just 1 ## khalifa khalifa 1 ## lack lack 1 ## largest largest 1 ## later later 1 ## latest latest 1 ## launched launched 1 ## lead lead 1 ## leading leading 1 ## learn learn 1 ## least least 1 ## lending lending 1 ## less less 1 ## lesson lesson 1 ## level level 1 ## liberalised liberalised 1 ## lift lift 1 ## liftings liftings 1 ## like like 1 ## lines lines 1 ## liquidity liquidity 1 ## little little 1 ## loan loan 1 ## lodged lodged 1 ## longterm longterm 1 ## ltd ltd 1 ## lukman lukman 1 ## lull lull 1 ## maintain maintain 1 ## make make 1 ## manager manager 1 ## manipulate manipulate 1 ## many many 1 ## marathon marathon 1 ## marathons marathons 1 ## marker marker 1 ## mcfadden mcfadden 1 ## means means 1 ## mercantile mercantile 1 ## metrers metrers 1 ## metres metres 1 ## mid1960s mid1960s 1 ## mid1986 mid1986 1 ## mideast mideast 1 ## minus minus 1 ## mlotok mlotok 1 ## mob mob 1 ## mobil mobil 1 ## momentum momentum 1 ## money money 1 ## monopolies monopolies 1 ## monthend monthend 1 ## moussavarrahmani moussavarrahmani 1 ## movement movement 1 ## nation nation 1 ## natural natural 1 ## need need 1 ## needs needs 1 ## negative negative 1 ## negotiate negotiate 1 ## neither neither 1 ## network network 1 ## news news 1 ## newspaper newspaper 1 ## nigerian nigerian 1 ## nine nine 1 ## nonoil nonoil 1 ## northern northern 1 ## notes notes 1 ## offset offset 1 ## onetwelfth onetwelfth 1 ## oneweek oneweek 1 ## open open 1 ## opens opens 1 ## operations operations 1 ## opposite opposite 1 ## optimism optimism 1 ## optimistic optimistic 1 ## option option 1 ## order order 1 ## organiaation organiaation 1 ## our our 1 ## outlining outlining 1 ## outside outside 1 ## overproducing overproducing 1 ## part part 1 ## parties parties 1 ## partly partly 1 ## party party 1 ## past past 1 ## paths paths 1 ## paul paul 1 ## paulsboro paulsboro 1 ## payments payments 1 ## pegged pegged 1 ## performance performance 1 ## period period 1 ## pertains pertains 1 ## pessimistic pessimistic 1 ## philadelphia philadelphia 1 ## physical physical 1 ## placed placed 1 ## plastics plastics 1 ## platinum platinum 1 ## point point 1 ## policies policies 1 ## political political 1 ## population population 1 ## positions positions 1 ## postponed postponed 1 ## pressures pressures 1 ## previous previous 1 ## primarily primarily 1 ## primary primary 1 ## principal principal 1 ## procedure procedure 1 ## produce produce 1 ## produced produced 1 ## producers producers 1 ## product product 1 ## products products 1 ## program program 1 ## projection projection 1 ## projects projects 1 ## prompted prompted 1 ## proposed proposed 1 ## proved proved 1 ## providing providing 1 ## provision provision 1 ## publish publish 1 ## purposes purposes 1 ## quarter quarter 1 ## quiet quiet 1 ## quietly quietly 1 ## quotas quotas 1 ## rallied rallied 1 ## ran ran 1 ## ranging ranging 1 ## ras ras 1 ## rates rates 1 ## rationalise rationalise 1 ## readdress readdress 1 ## reaffirmed reaffirmed 1 ## reasonable reasonable 1 ## recommending recommending 1 ## recovering recovering 1 ## recurrent recurrent 1 ## reference reference 1 ## refineries refineries 1 ## refining refining 1 ## reflect reflect 1 ## refloat refloat 1 ## reform reform 1 ## reforms reforms 1 ## regain regain 1 ## regard regard 1 ## regarding regarding 1 ## region region 1 ## regional regional 1 ## reiterate reiterate 1 ## relaxation relaxation 1 ## relieve relieve 1 ## reluctant reluctant 1 ## remainder remainder 1 ## remained remained 1 ## reported reported 1 ## request request 1 ## resistance resistance 1 ## resisting resisting 1 ## resources resources 1 ## respectively respectively 1 ## responsibilites responsibilites 1 ## restored restored 1 ## restraint restraint 1 ## restrictions restrictions 1 ## result result 1 ## reuters reuters 1 ## revealed revealed 1 ## reviews reviews 1 ## right right 1 ## rilwanu rilwanu 1 ## rising rising 1 ## river river 1 ## rocks rocks 1 ## rosemary rosemary 1 ## rumour rumour 1 ## rushing rushing 1 ## sales sales 1 ## salomon salomon 1 ## santos santos 1 ## satisfied satisfied 1 ## saw saw 1 ## scheduled scheduled 1 ## scheme scheme 1 ## seapride seapride 1 ## season season 1 ## secretary secretary 1 ## security security 1 ## seeing seeing 1 ## seek seek 1 ## september september 1 ## series series 1 ## serve serve 1 ## services services 1 ## session session 1 ## sets sets 1 ## seven seven 1 ## severely severely 1 ## shamrock shamrock 1 ## sharply sharply 1 ## shoulder shoulder 1 ## show show 1 ## showed showed 1 ## shown shown 1 ## signed signed 1 ## signs signs 1 ## situation situation 1 ## sixmonth sixmonth 1 ## slackens slackens 1 ## slide slide 1 ## slump slump 1 ## social social 1 ## sold sold 1 ## soon soon 1 ## sort sort 1 ## sour sour 1 ## south south 1 ## southeast southeast 1 ## spend spend 1 ## spill spill 1 ## spoke spoke 1 ## spokesman spokesman 1 ## spotnext spotnext 1 ## spriggs spriggs 1 ## stabilise stabilise 1 ## stabilize stabilize 1 ## stable stable 1 ## start start 1 ## statement statement 1 ## steel steel 1 ## steering steering 1 ## steps steps 1 ## stiff stiff 1 ## storage storage 1 ## strong strong 1 ## subsequently subsequently 1 ## substitution substitution 1 ## succeed succeed 1 ## suffer suffer 1 ## suffering suffering 1 ## suhartos suhartos 1 ## sunday sunday 1 ## sundays sundays 1 ## supply supply 1 ## supporting supporting 1 ## suppose suppose 1 ## surrounding surrounding 1 ## swift swift 1 ## talks talks 1 ## tanker tanker 1 ## tanurah tanurah 1 ## tapers tapers 1 ## teach teach 1 ## telephone telephone 1 ## terminals terminals 1 ## test test 1 ## there there 1 ## third third 1 ## thomas thomas 1 ## though though 1 ## thought thought 1 ## threemonth threemonth 1 ## tide tide 1 ## together together 1 ## told told 1 ## totalled totalled 1 ## tower tower 1 ## trader trader 1 ## trades trades 1 ## traditional traditional 1 ## traditionally traditionally 1 ## transacted transacted 1 ## transmission transmission 1 ## transport transport 1 ## trends trends 1 ## trusts trusts 1 ## try try 1 ## turmoil turmoil 1 ## twofold twofold 1 ## uae uae 1 ## uncertain uncertain 1 ## unchanged unchanged 1 ## under under 1 ## unions unions 1 ## unitholders unitholders 1 ## universitys universitys 1 ## unlikely unlikely 1 ## unocal unocal 1 ## unusually unusually 1 ## urged urged 1 ## use use 1 ## virtual virtual 1 ## wants wants 1 ## water water 1 ## wealth wealth 1 ## wednesday wednesday 1 ## weekend weekend 1 ## welcomed welcomed 1 ## when when 1 ## whether whether 1 ## wishes wishes 1 ## worldwide worldwide 1 ## xon xon 1 ## yergin yergin 1 ## yesterdays yesterdays 1 library(wordcloud2) head(demoFreq, n=10) ## word freq ## oil oil 85 ## said said 73 ## prices prices 48 ## opec opec 42 ## mln mln 31 ## the the 26 ## last last 24 ## bpd bpd 23 ## dlrs dlrs 23 ## crude crude 21 wordcloud2(data = demoFreq) 26.3 Paso 1 Importar los datos de la web filePath &lt;- &quot;http://www.sthda.com/sthda/RDoc/example-files/martin-luther-king-i-have-a-dream-speech.txt&quot; text &lt;- readLines(filePath) text ## [1] &quot;&quot; ## [2] &quot;And so even though we face the difficulties of today and tomorrow, I still have a dream. It is a dream deeply rooted in the American dream.&quot; ## [3] &quot; &quot; ## [4] &quot;I have a dream that one day this nation will rise up and live out the true meaning of its creed:&quot; ## [5] &quot; &quot; ## [6] &quot;We hold these truths to be self-evident, that all men are created equal.&quot; ## [7] &quot; &quot; ## [8] &quot;I have a dream that one day on the red hills of Georgia, the sons of former slaves and the sons of former slave owners will be able to sit down together at the table of brotherhood.&quot; ## [9] &quot; &quot; ## [10] &quot;I have a dream that one day even the state of Mississippi, a state sweltering with the heat of injustice, sweltering with the heat of oppression, will be transformed into an oasis of freedom and justice.&quot; ## [11] &quot; &quot; ## [12] &quot;I have a dream that my four little children will one day live in a nation where they will not be judged by the color of their skin but by the content of their character.&quot; ## [13] &quot; &quot; ## [14] &quot;I have a dream today!&quot; ## [15] &quot; &quot; ## [16] &quot;I have a dream that one day, down in Alabama, with its vicious racists, with its governor having his lips dripping with the words of interposition and nullification, one day right there in Alabama little black boys and black girls will be able to join hands with little white boys and white girls as sisters and brothers.&quot; ## [17] &quot; &quot; ## [18] &quot;I have a dream today!&quot; ## [19] &quot; &quot; ## [20] &quot;I have a dream that one day every valley shall be exalted, and every hill and mountain shall be made low, the rough places will be made plain, and the crooked places will be made straight; and the glory of the Lord shall be revealed and all flesh shall see it together.&quot; ## [21] &quot; &quot; ## [22] &quot;This is our hope, and this is the faith that I go back to the South with.&quot; ## [23] &quot; &quot; ## [24] &quot;With this faith, we will be able to hew out of the mountain of despair a stone of hope. With this faith, we will be able to transform the jangling discords of our nation into a beautiful symphony of brotherhood. With this faith, we will be able to work together, to pray together, to struggle together, to go to jail together, to stand up for freedom together, knowing that we will be free one day.&quot; ## [25] &quot; &quot; ## [26] &quot;And this will be the day, this will be the day when all of God s children will be able to sing with new meaning:&quot; ## [27] &quot; &quot; ## [28] &quot;My country tis of thee, sweet land of liberty, of thee I sing.&quot; ## [29] &quot;Land where my fathers died, land of the Pilgrim s pride,&quot; ## [30] &quot;From every mountainside, let freedom ring!&quot; ## [31] &quot;And if America is to be a great nation, this must become true.&quot; ## [32] &quot;And so let freedom ring from the prodigious hilltops of New Hampshire.&quot; ## [33] &quot;Let freedom ring from the mighty mountains of New York.&quot; ## [34] &quot;Let freedom ring from the heightening Alleghenies of Pennsylvania.&quot; ## [35] &quot;Let freedom ring from the snow-capped Rockies of Colorado.&quot; ## [36] &quot;Let freedom ring from the curvaceous slopes of California.&quot; ## [37] &quot; &quot; ## [38] &quot;But not only that:&quot; ## [39] &quot;Let freedom ring from Stone Mountain of Georgia.&quot; ## [40] &quot;Let freedom ring from Lookout Mountain of Tennessee.&quot; ## [41] &quot;Let freedom ring from every hill and molehill of Mississippi.&quot; ## [42] &quot;From every mountainside, let freedom ring.&quot; ## [43] &quot;And when this happens, when we allow freedom ring, when we let it ring from every village and every hamlet, from every state and every city, we will be able to speed up that day when all of God s children, black men and white men, Jews and Gentiles, Protestants and Catholics, will be able to join hands and sing in the words of the old Negro spiritual:&quot; ## [44] &quot;Free at last! Free at last!&quot; ## [45] &quot; &quot; ## [46] &quot;Thank God Almighty, we are free at last!&quot; Importar un texto de su computadora en formato .txt No va a funcionar el formato .doc de MSWord. #mi_texto &lt;- readLines(file.choose()) 26.4 Subir el texto en formato Corpus mi_texto=iconv(text,&quot;WINDOWS-1252&quot;,&quot;UTF-8&quot;) # Use this for removing accents and non - english characters # Load the data as a corpus docs &lt;- Corpus(VectorSource(mi_texto)) docs ## &lt;&lt;SimpleCorpus&gt;&gt; ## Metadata: corpus specific: 1, document level (indexed): 0 ## Content: documents: 46 26.5 Mirar el documento, para evaluar su contenido # inspect(docs) # quita el hashtag para ver el documento 26.6 Transformar el texto para reemplazar algunos caracteres especiales, y remplazarlos por espacio en blanco toSpace &lt;- content_transformer(function (x , pattern ) gsub(pattern, &quot; &quot;, x)) docs &lt;- tm_map(docs, toSpace, &quot;-&quot;) docs &lt;- tm_map(docs, toSpace, &quot;@&quot;) docs &lt;- tm_map(docs, toSpace, &quot;\\\\|&quot;) 26.7 el paquete tm es para text mining # Convert the text to lower case docs &lt;- tm_map(docs, content_transformer(tolower)) # Remove numbers docs &lt;- tm_map(docs, removeNumbers) # Remove english common stopwords stopwords(&quot;english&quot;) # list of common english stopwords that are often removed ## [1] &quot;i&quot; &quot;me&quot; &quot;my&quot; &quot;myself&quot; &quot;we&quot; ## [6] &quot;our&quot; &quot;ours&quot; &quot;ourselves&quot; &quot;you&quot; &quot;your&quot; ## [11] &quot;yours&quot; &quot;yourself&quot; &quot;yourselves&quot; &quot;he&quot; &quot;him&quot; ## [16] &quot;his&quot; &quot;himself&quot; &quot;she&quot; &quot;her&quot; &quot;hers&quot; ## [21] &quot;herself&quot; &quot;it&quot; &quot;its&quot; &quot;itself&quot; &quot;they&quot; ## [26] &quot;them&quot; &quot;their&quot; &quot;theirs&quot; &quot;themselves&quot; &quot;what&quot; ## [31] &quot;which&quot; &quot;who&quot; &quot;whom&quot; &quot;this&quot; &quot;that&quot; ## [36] &quot;these&quot; &quot;those&quot; &quot;am&quot; &quot;is&quot; &quot;are&quot; ## [41] &quot;was&quot; &quot;were&quot; &quot;be&quot; &quot;been&quot; &quot;being&quot; ## [46] &quot;have&quot; &quot;has&quot; &quot;had&quot; &quot;having&quot; &quot;do&quot; ## [51] &quot;does&quot; &quot;did&quot; &quot;doing&quot; &quot;would&quot; &quot;should&quot; ## [56] &quot;could&quot; &quot;ought&quot; &quot;i&#39;m&quot; &quot;you&#39;re&quot; &quot;he&#39;s&quot; ## [61] &quot;she&#39;s&quot; &quot;it&#39;s&quot; &quot;we&#39;re&quot; &quot;they&#39;re&quot; &quot;i&#39;ve&quot; ## [66] &quot;you&#39;ve&quot; &quot;we&#39;ve&quot; &quot;they&#39;ve&quot; &quot;i&#39;d&quot; &quot;you&#39;d&quot; ## [71] &quot;he&#39;d&quot; &quot;she&#39;d&quot; &quot;we&#39;d&quot; &quot;they&#39;d&quot; &quot;i&#39;ll&quot; ## [76] &quot;you&#39;ll&quot; &quot;he&#39;ll&quot; &quot;she&#39;ll&quot; &quot;we&#39;ll&quot; &quot;they&#39;ll&quot; ## [81] &quot;isn&#39;t&quot; &quot;aren&#39;t&quot; &quot;wasn&#39;t&quot; &quot;weren&#39;t&quot; &quot;hasn&#39;t&quot; ## [86] &quot;haven&#39;t&quot; &quot;hadn&#39;t&quot; &quot;doesn&#39;t&quot; &quot;don&#39;t&quot; &quot;didn&#39;t&quot; ## [91] &quot;won&#39;t&quot; &quot;wouldn&#39;t&quot; &quot;shan&#39;t&quot; &quot;shouldn&#39;t&quot; &quot;can&#39;t&quot; ## [96] &quot;cannot&quot; &quot;couldn&#39;t&quot; &quot;mustn&#39;t&quot; &quot;let&#39;s&quot; &quot;that&#39;s&quot; ## [101] &quot;who&#39;s&quot; &quot;what&#39;s&quot; &quot;here&#39;s&quot; &quot;there&#39;s&quot; &quot;when&#39;s&quot; ## [106] &quot;where&#39;s&quot; &quot;why&#39;s&quot; &quot;how&#39;s&quot; &quot;a&quot; &quot;an&quot; ## [111] &quot;the&quot; &quot;and&quot; &quot;but&quot; &quot;if&quot; &quot;or&quot; ## [116] &quot;because&quot; &quot;as&quot; &quot;until&quot; &quot;while&quot; &quot;of&quot; ## [121] &quot;at&quot; &quot;by&quot; &quot;for&quot; &quot;with&quot; &quot;about&quot; ## [126] &quot;against&quot; &quot;between&quot; &quot;into&quot; &quot;through&quot; &quot;during&quot; ## [131] &quot;before&quot; &quot;after&quot; &quot;above&quot; &quot;below&quot; &quot;to&quot; ## [136] &quot;from&quot; &quot;up&quot; &quot;down&quot; &quot;in&quot; &quot;out&quot; ## [141] &quot;on&quot; &quot;off&quot; &quot;over&quot; &quot;under&quot; &quot;again&quot; ## [146] &quot;further&quot; &quot;then&quot; &quot;once&quot; &quot;here&quot; &quot;there&quot; ## [151] &quot;when&quot; &quot;where&quot; &quot;why&quot; &quot;how&quot; &quot;all&quot; ## [156] &quot;any&quot; &quot;both&quot; &quot;each&quot; &quot;few&quot; &quot;more&quot; ## [161] &quot;most&quot; &quot;other&quot; &quot;some&quot; &quot;such&quot; &quot;no&quot; ## [166] &quot;nor&quot; &quot;not&quot; &quot;only&quot; &quot;own&quot; &quot;same&quot; ## [171] &quot;so&quot; &quot;than&quot; &quot;too&quot; &quot;very&quot; docs &lt;- tm_map(docs, removeWords, stopwords(&quot;english&quot;)) # Remove your own stop word # specify your stopwords as a character vector docs &lt;- tm_map(docs, removeWords, c(&quot;blabla1&quot;, &quot;blabla2&quot;)) # Remove punctuations docs &lt;- tm_map(docs, removePunctuation) # Eliminate extra white spaces docs &lt;- tm_map(docs, stripWhitespace) # Text stemming # docs &lt;- tm_map(docs, stemDocument) #stopwords() # Here are all the stopwords in the function **stopwords** 26.8 Crear una matriz de las palabras de mi documento dtm &lt;- TermDocumentMatrix(docs) # convirtir el texto en una lista de palabras m &lt;- as.matrix(dtm) # convertir en una matriz v &lt;- sort(rowSums(m),decreasing=TRUE) # ordenar las palabras por frecuencia d &lt;- data.frame(word = names(v),freq=v) # crea un nuevo data frame de las palabras y su frecuencia head(d, n=10) # las primeras 10 palabras más comunes ## word freq ## will will 17 ## freedom freedom 13 ## ring ring 12 ## dream dream 11 ## day day 11 ## let let 11 ## every every 9 ## one one 8 ## able able 8 ## together together 7 26.8.1 Check your words and remove unwanted words individually “òó” òorchid pollinators 26.8.2 How would you remove from the data frame all words that have less or equal to 3 counts Del paquete wordcloud #head(d) wordcloud(words = d$word, # las palabras freq = d$freq, # la frecuencia min.freq = 10, # la frecuencia mínima max.words=200, # el número máximo de palabras random.order=TRUE, # orden aleatorio rot.per=0.35, # rotación de las palabras colors=brewer.pal(8, &quot;Dark2&quot;)) # colores 26.9 Ejemplo 2 Del paquete wordcloud2 wordcloud2(data = d) 26.10 Como remover palabras de otra idioma 26.10.1 Vea este enlace para los “stopwords” de muchos idiomas https://cran.r-project.org/web/packages/stopwords/readme/README.html 26.11 En español # from CRAN install.packages(&quot;stopwords&quot;) # Or get the development version from GitHub: # install.packages(&quot;devtools&quot;) # devtools::install_github(&quot;quanteda/stopwords&quot;) 26.11.1 Las 30 primeras palabras en la lista de stopword del paquete “stopwords” en español head(stopwords::stopwords(&quot;es&quot;, source = &quot;snowball&quot;), 30) ## [1] &quot;de&quot; &quot;la&quot; &quot;que&quot; &quot;el&quot; &quot;en&quot; &quot;y&quot; &quot;a&quot; &quot;los&quot; ## [9] &quot;del&quot; &quot;se&quot; &quot;las&quot; &quot;por&quot; &quot;un&quot; &quot;para&quot; &quot;con&quot; &quot;no&quot; ## [17] &quot;una&quot; &quot;su&quot; &quot;al&quot; &quot;lo&quot; &quot;como&quot; &quot;más&quot; &quot;pero&quot; &quot;sus&quot; ## [25] &quot;le&quot; &quot;ya&quot; &quot;o&quot; &quot;este&quot; &quot;sí&quot; &quot;porque&quot; Ejemplos #3 Aqui un tercer ejemplo # install.packages(&quot;pacman&quot;) # Si no tiene instalada la Biblioteca Pacman ejecutar esta línea de código library(&quot;pacman&quot;) p_load(&quot;tm&quot;) # Biblioteca para realizar el preprocesado del texto, p_load(&quot;tidyverse&quot;) # Biblioteca con funciones para manipular datos. p_load(&quot;wordcloud&quot;) # Biblioteca para graficar nuestra nube de palabras. p_load(&quot;RColorBrewer&quot;) # Biblioteca para seleccionar una paleta de colores de nuestra nube de palabras. 26.12 Un documento para hacer un word cloud “La intelegencia artifical” library(readr) articulo_IA &lt;- &quot;https://gist.github.com/EverVino/7bdbbe7ebdff5987970036f52f0e384f/raw/3a1997b6f9e3471555a941f8812ada0cef84977d/gistfile1.txt&quot; texto &lt;- read_file(articulo_IA) #texto 26.13 Convertir su documento en Corpus y identificar que es en español texto2 &lt;- VCorpus(VectorSource(texto), readerControl = list(reader = readPlain, language = &quot;es&quot;, load=TRUE)) texto2 ## &lt;&lt;VCorpus&gt;&gt; ## Metadata: corpus specific: 0, document level (indexed): 0 ## Content: documents: 1 #inspect(texto2) 26.14 Limpieza del documento remover los números remover las puntuaciones cambiar a letras minúsculas remover las palabras comunes en español usar solamente la base de las palabres (“stem”) por ejemplo remover las conjugaciones espero, esparas, espera, esperamos… se convierte en “esper” remover espacios blancos texto2 &lt;- tm_map(texto2, removeNumbers) texto2 &lt;- tm_map(texto2, removePunctuation) texto2 &lt;- tm_map(texto2, tolower) texto2 &lt;- tm_map(texto2, removeWords, stopwords::stopwords(&quot;es&quot;, source = &quot;snowball&quot;)) #texto2 &lt;- tm_map(texto2, stemDocument, language=&quot;spanish&quot;) texto2 &lt;- tm_map(texto2, stripWhitespace) 26.15 Transformar el texto en un documento de texto sencillo (Plain Text) texto2 &lt;- tm_map(texto2, PlainTextDocument) 26.16 Transformar el texto para reemplazar algunos caracteres especiales toSpace &lt;- content_transformer(function (x , pattern ) gsub(pattern, &quot; &quot;, x)) #texto2 &lt;- tm_map(texto2, toSpace, &quot;-&quot;) texto2 &lt;- tm_map(texto2, toSpace, &quot;@&quot;) texto2 &lt;- tm_map(texto2, toSpace, &quot;\\\\|&quot;) 26.17 Crear una matriz de las palabras tabla_frecuencia &lt;- DocumentTermMatrix(texto2) 26.18 Calcular la frecuencia de de cada palabra tabla_frecuencia &lt;- cbind(palabras = tabla_frecuencia$dimnames$Terms, frecuencia = tabla_frecuencia$v) # Convertimos los valores enlazados con cbind a un objeto dataframe. tabla_frecuencia&lt;-as.data.frame(tabla_frecuencia) # Forzamos a que la columna de frecuencia contenga valores numéricos. tabla_frecuencia$frecuencia&lt;-as.numeric(tabla_frecuencia$frecuencia) # Ordenamos muestra tabla de frecuencias de acuerdo a sus valores numéricos. tabla_frecuencia&lt;-tabla_frecuencia[order(tabla_frecuencia$frecuencia, decreasing=TRUE),] head(tabla_frecuencia) # aqui vemos las 6 palabras más comunes en el texto ## palabras frecuencia ## 809 inteligencia 79 ## 126 artificial 67 ## 1378 sistemas 32 ## 1347 ser 22 ## 737 humano 19 ## 1172 problemas 18 wordcloud(words = tabla_frecuencia$palabras, freq = tabla_frecuencia$frecuencia, min.freq = 5, max.words = 100, random.order = FALSE, colors = brewer.pal(8,&quot;Paired&quot;)) Como ver la figuras en la pestaña “Plots” De esa forma puede bajar los WordClouds como .pdf o otro formato. &lt;https://stackoverflow.com/questions/40570621/rstudio-how-to-show-plot-output-in-bottom-right-pane&gt; "],["appendix-a.html", "A Appendix A A.1 Ejercicio de Transformación Capitulo de Transformación de Datos Ejercicios con destrezar de aplicar algunas funciones de transformaciones de datos 1. Busca el bateador que tuvo más carreras en cualquier año 2. ¿Cual es el nombre del bateador (id_jugador) que estuvo más veces “al_bate”? Prepara una lista del bateador más frecuente al bate al menos 3. ¿Cuales son las “ligas” de baseball (pelota) que estan incluida en este archivo? 4. Selecciona los años (1900, 1950, 2000 y 2020) y jonrones y hacer una tabla por año que demuestra el máximo de jonrones para cada año 5. Haz una tabla de la los jugadores que juraron más años 6. Selecciona solamente la liga “AL”, los años desde de 2000 en adelande, y determina cual es la suma de “carreras” anotadas por cada equipo.", " A Appendix A A.1 Ejercicio de Transformación Capitulo de Transformación de Datos Ejercicios con destrezar de aplicar algunas funciones de transformaciones de datos Para tener los puntos tiene que enseñar TODOS los scripts, los resultados y explicar en palabra los que encontró dentro de un documento bien organizado. library(datos) attach(bateadores) library(tidyverse) library(gt) Use el data frame de “bateadores” en el paquete “datos”. gt(head(bateadores, n=3)) #mzgllawzch table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #mzgllawzch thead, #mzgllawzch tbody, #mzgllawzch tfoot, #mzgllawzch tr, #mzgllawzch td, #mzgllawzch th { border-style: none; } #mzgllawzch p { margin: 0; padding: 0; } #mzgllawzch .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #mzgllawzch .gt_caption { padding-top: 4px; padding-bottom: 4px; } #mzgllawzch .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #mzgllawzch .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #mzgllawzch .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #mzgllawzch .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #mzgllawzch .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #mzgllawzch .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #mzgllawzch .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #mzgllawzch .gt_column_spanner_outer:first-child { padding-left: 0; } #mzgllawzch .gt_column_spanner_outer:last-child { padding-right: 0; } #mzgllawzch .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #mzgllawzch .gt_spanner_row { border-bottom-style: hidden; } #mzgllawzch .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #mzgllawzch .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #mzgllawzch .gt_from_md > :first-child { margin-top: 0; } #mzgllawzch .gt_from_md > :last-child { margin-bottom: 0; } #mzgllawzch .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #mzgllawzch .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #mzgllawzch .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #mzgllawzch .gt_row_group_first td { border-top-width: 2px; } #mzgllawzch .gt_row_group_first th { border-top-width: 2px; } #mzgllawzch .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #mzgllawzch .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #mzgllawzch .gt_first_summary_row.thick { border-top-width: 2px; } #mzgllawzch .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #mzgllawzch .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #mzgllawzch .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #mzgllawzch .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #mzgllawzch .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #mzgllawzch .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #mzgllawzch .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #mzgllawzch .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #mzgllawzch .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #mzgllawzch .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #mzgllawzch .gt_left { text-align: left; } #mzgllawzch .gt_center { text-align: center; } #mzgllawzch .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #mzgllawzch .gt_font_normal { font-weight: normal; } #mzgllawzch .gt_font_bold { font-weight: bold; } #mzgllawzch .gt_font_italic { font-style: italic; } #mzgllawzch .gt_super { font-size: 65%; } #mzgllawzch .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #mzgllawzch .gt_asterisk { font-size: 100%; vertical-align: 0; } #mzgllawzch .gt_indent_1 { text-indent: 5px; } #mzgllawzch .gt_indent_2 { text-indent: 10px; } #mzgllawzch .gt_indent_3 { text-indent: 15px; } #mzgllawzch .gt_indent_4 { text-indent: 20px; } #mzgllawzch .gt_indent_5 { text-indent: 25px; } #mzgllawzch .katex-display { display: inline-flex !important; margin-bottom: 0.75em !important; } #mzgllawzch div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after { height: 0px !important; } id_jugador id_anio orden_equipos id_equipo id_liga juegos al_bate carreras golpes dobles triples cuadrangulares carreras_empujadas bases_robadas atrapado_robando base_bolas ponches base_intencional golpeado toque_sacrificio elavado_sacrificio doble_matanza aardsda01 2004 1 SFN NL 11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 aardsda01 2006 1 CHN NL 45 2 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 aardsda01 2007 1 CHA AL 25 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1. Busca el bateador que tuvo más carreras en cualquier año 2. ¿Cual es el nombre del bateador (id_jugador) que estuvo más veces “al_bate”? Prepara una lista del bateador más frecuente al bate al menos 3. ¿Cuales son las “ligas” de baseball (pelota) que estan incluida en este archivo? 4. Selecciona los años (1900, 1950, 2000 y 2020) y jonrones y hacer una tabla por año que demuestra el máximo de jonrones para cada año ¿Cual fue el máximo de jonrones por año para los años selecionado? Haga una lista. 5. Haz una tabla de la los jugadores que juraron más años ¿Cual es el jugador que ha jugado más años? 6. Selecciona solamente la liga “AL”, los años desde de 2000 en adelande, y determina cual es la suma de “carreras” anotadas por cada equipo. ¿Cual es el equipo que tiene mayor carreras? ¿Cual es el equipo que tiene menor carreras? Como explica que ese equipo tiene tan poca carreras. Piensa en un tipo de “Data wrangling”, que podria explicar esto (BONO), si lo resuelve tendrá un bono "],["appendix-c.html", "B Appendix C Calculate the age of individuals when they were diagnosed with HIV Calculate the time between the date of diagnosis of HIV and the date of death. Calculate the difference in life between the date of diagnosis and death", " B Appendix C ## [1] &quot;2024-11-07&quot; library(readr) HIV &lt;- read_csv(&quot;HIV.csv&quot;) HIV ## # A tibble: 824 × 10 ## gender dob hiv_risk_factor_f Poverty_numeric hh_size ins_type_f ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 Hombre 8/21/34 Heterosexual 0.5 2 Medicaid ## 2 Mujer 1/25/31 Heterosexual 0.5 3 Medicaid ## 3 Hombre 11/18/36 Heterosexual 0.5 1 Medicaid ## 4 Mujer 6/29/37 Heterosexual 0.5 1 Medicaid ## 5 Hombre 12/26/42 Heterosexual 0.5 2 Medicaid ## 6 Mujer 3/21/40 Heterosexual 0.5 2 Medicaid ## 7 Hombre 8/17/36 Heterosexual 0.5 1 Medicaid ## 8 Mujer 10/17/42 Heterosexual 0.5 1 Medicaid ## 9 Mujer 10/17/42 Heterosexual 0.5 1 Medicaid ## 10 Hombre 7/17/47 Heterosexual 0.5 2 Medicaid ## # ℹ 814 more rows ## # ℹ 4 more variables: vital_status &lt;chr&gt;, date_of_death &lt;chr&gt;, hiv_date &lt;chr&gt;, ## # lifespan &lt;dbl&gt; library(tidyverse) https://www.stat.berkeley.edu/~s133/dates.html HIV$dob=as.Date(format(as.Date(HIV$dob,format=&quot;%m/%d/%y&quot;), &quot;19%y%m%d&quot;), &quot;%Y%m%d&quot;) HIV ## # A tibble: 824 × 10 ## gender dob hiv_risk_factor_f Poverty_numeric hh_size ins_type_f ## &lt;chr&gt; &lt;date&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 Hombre 1934-08-21 Heterosexual 0.5 2 Medicaid ## 2 Mujer 1931-01-25 Heterosexual 0.5 3 Medicaid ## 3 Hombre 1936-11-18 Heterosexual 0.5 1 Medicaid ## 4 Mujer 1937-06-29 Heterosexual 0.5 1 Medicaid ## 5 Hombre 1942-12-26 Heterosexual 0.5 2 Medicaid ## 6 Mujer 1940-03-21 Heterosexual 0.5 2 Medicaid ## 7 Hombre 1936-08-17 Heterosexual 0.5 1 Medicaid ## 8 Mujer 1942-10-17 Heterosexual 0.5 1 Medicaid ## 9 Mujer 1942-10-17 Heterosexual 0.5 1 Medicaid ## 10 Hombre 1947-07-17 Heterosexual 0.5 2 Medicaid ## # ℹ 814 more rows ## # ℹ 4 more variables: vital_status &lt;chr&gt;, date_of_death &lt;chr&gt;, hiv_date &lt;chr&gt;, ## # lifespan &lt;dbl&gt; Calculate the age of individuals when they were diagnosed with HIV Calculate the time between the date of diagnosis of HIV and the date of death. HIV= HIV |&gt; mutate(date_d=mdy(date_of_death), hiv_d = mdy(hiv_date)) HIV ## # A tibble: 824 × 12 ## gender dob hiv_risk_factor_f Poverty_numeric hh_size ins_type_f ## &lt;chr&gt; &lt;date&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 Hombre 1934-08-21 Heterosexual 0.5 2 Medicaid ## 2 Mujer 1931-01-25 Heterosexual 0.5 3 Medicaid ## 3 Hombre 1936-11-18 Heterosexual 0.5 1 Medicaid ## 4 Mujer 1937-06-29 Heterosexual 0.5 1 Medicaid ## 5 Hombre 1942-12-26 Heterosexual 0.5 2 Medicaid ## 6 Mujer 1940-03-21 Heterosexual 0.5 2 Medicaid ## 7 Hombre 1936-08-17 Heterosexual 0.5 1 Medicaid ## 8 Mujer 1942-10-17 Heterosexual 0.5 1 Medicaid ## 9 Mujer 1942-10-17 Heterosexual 0.5 1 Medicaid ## 10 Hombre 1947-07-17 Heterosexual 0.5 2 Medicaid ## # ℹ 814 more rows ## # ℹ 6 more variables: vital_status &lt;chr&gt;, date_of_death &lt;chr&gt;, hiv_date &lt;chr&gt;, ## # lifespan &lt;dbl&gt;, date_d &lt;date&gt;, hiv_d &lt;date&gt; HIV1 &lt;- HIV %&gt;% mutate(hiv_date = mdy(hiv_date)) HIV1 ## # A tibble: 824 × 12 ## gender dob hiv_risk_factor_f Poverty_numeric hh_size ins_type_f ## &lt;chr&gt; &lt;date&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 Hombre 1934-08-21 Heterosexual 0.5 2 Medicaid ## 2 Mujer 1931-01-25 Heterosexual 0.5 3 Medicaid ## 3 Hombre 1936-11-18 Heterosexual 0.5 1 Medicaid ## 4 Mujer 1937-06-29 Heterosexual 0.5 1 Medicaid ## 5 Hombre 1942-12-26 Heterosexual 0.5 2 Medicaid ## 6 Mujer 1940-03-21 Heterosexual 0.5 2 Medicaid ## 7 Hombre 1936-08-17 Heterosexual 0.5 1 Medicaid ## 8 Mujer 1942-10-17 Heterosexual 0.5 1 Medicaid ## 9 Mujer 1942-10-17 Heterosexual 0.5 1 Medicaid ## 10 Hombre 1947-07-17 Heterosexual 0.5 2 Medicaid ## # ℹ 814 more rows ## # ℹ 6 more variables: vital_status &lt;chr&gt;, date_of_death &lt;chr&gt;, hiv_date &lt;date&gt;, ## # lifespan &lt;dbl&gt;, date_d &lt;date&gt;, hiv_d &lt;date&gt; HIV2 &lt;- HIV1 %&gt;% mutate(edad = dob %--% hiv_date / years()) HIV2 ## # A tibble: 824 × 13 ## gender dob hiv_risk_factor_f Poverty_numeric hh_size ins_type_f ## &lt;chr&gt; &lt;date&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 Hombre 1934-08-21 Heterosexual 0.5 2 Medicaid ## 2 Mujer 1931-01-25 Heterosexual 0.5 3 Medicaid ## 3 Hombre 1936-11-18 Heterosexual 0.5 1 Medicaid ## 4 Mujer 1937-06-29 Heterosexual 0.5 1 Medicaid ## 5 Hombre 1942-12-26 Heterosexual 0.5 2 Medicaid ## 6 Mujer 1940-03-21 Heterosexual 0.5 2 Medicaid ## 7 Hombre 1936-08-17 Heterosexual 0.5 1 Medicaid ## 8 Mujer 1942-10-17 Heterosexual 0.5 1 Medicaid ## 9 Mujer 1942-10-17 Heterosexual 0.5 1 Medicaid ## 10 Hombre 1947-07-17 Heterosexual 0.5 2 Medicaid ## # ℹ 814 more rows ## # ℹ 7 more variables: vital_status &lt;chr&gt;, date_of_death &lt;chr&gt;, hiv_date &lt;date&gt;, ## # lifespan &lt;dbl&gt;, date_d &lt;date&gt;, hiv_d &lt;date&gt;, edad &lt;dbl&gt; HIV3 &lt;- HIV2 %&gt;% mutate(date_of_death = mdy(date_of_death)) HIV3 ## # A tibble: 824 × 13 ## gender dob hiv_risk_factor_f Poverty_numeric hh_size ins_type_f ## &lt;chr&gt; &lt;date&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 Hombre 1934-08-21 Heterosexual 0.5 2 Medicaid ## 2 Mujer 1931-01-25 Heterosexual 0.5 3 Medicaid ## 3 Hombre 1936-11-18 Heterosexual 0.5 1 Medicaid ## 4 Mujer 1937-06-29 Heterosexual 0.5 1 Medicaid ## 5 Hombre 1942-12-26 Heterosexual 0.5 2 Medicaid ## 6 Mujer 1940-03-21 Heterosexual 0.5 2 Medicaid ## 7 Hombre 1936-08-17 Heterosexual 0.5 1 Medicaid ## 8 Mujer 1942-10-17 Heterosexual 0.5 1 Medicaid ## 9 Mujer 1942-10-17 Heterosexual 0.5 1 Medicaid ## 10 Hombre 1947-07-17 Heterosexual 0.5 2 Medicaid ## # ℹ 814 more rows ## # ℹ 7 more variables: vital_status &lt;chr&gt;, date_of_death &lt;date&gt;, ## # hiv_date &lt;date&gt;, lifespan &lt;dbl&gt;, date_d &lt;date&gt;, hiv_d &lt;date&gt;, edad &lt;dbl&gt; HIV4 &lt;- HIV3 %&gt;% mutate(diagnosed_death = hiv_date %--% date_of_death / years()) HIV4 ## # A tibble: 824 × 14 ## gender dob hiv_risk_factor_f Poverty_numeric hh_size ins_type_f ## &lt;chr&gt; &lt;date&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 Hombre 1934-08-21 Heterosexual 0.5 2 Medicaid ## 2 Mujer 1931-01-25 Heterosexual 0.5 3 Medicaid ## 3 Hombre 1936-11-18 Heterosexual 0.5 1 Medicaid ## 4 Mujer 1937-06-29 Heterosexual 0.5 1 Medicaid ## 5 Hombre 1942-12-26 Heterosexual 0.5 2 Medicaid ## 6 Mujer 1940-03-21 Heterosexual 0.5 2 Medicaid ## 7 Hombre 1936-08-17 Heterosexual 0.5 1 Medicaid ## 8 Mujer 1942-10-17 Heterosexual 0.5 1 Medicaid ## 9 Mujer 1942-10-17 Heterosexual 0.5 1 Medicaid ## 10 Hombre 1947-07-17 Heterosexual 0.5 2 Medicaid ## # ℹ 814 more rows ## # ℹ 8 more variables: vital_status &lt;chr&gt;, date_of_death &lt;date&gt;, ## # hiv_date &lt;date&gt;, lifespan &lt;dbl&gt;, date_d &lt;date&gt;, hiv_d &lt;date&gt;, edad &lt;dbl&gt;, ## # diagnosed_death &lt;dbl&gt; Calculate the difference in life between the date of diagnosis and death HIV$months= floor(time_length(difftime(HIV$date_d, HIV$hiv_d), &quot;months&quot;)) HIV$months ## [1] 182 17 3 11 159 46 143 190 188 265 196 272 97 332 307 282 179 368 ## [19] 363 363 228 192 195 80 55 299 299 17 1 273 216 86 201 201 154 110 ## [37] 55 32 182 123 74 324 223 213 127 72 264 116 100 95 57 4 220 204 ## [55] 102 10 4 339 306 294 208 205 167 102 86 1 320 320 240 181 176 115 ## [73] 33 2 314 197 203 181 183 137 47 47 46 27 373 239 239 239 231 223 ## [91] 201 195 200 174 160 158 81 27 17 326 332 312 312 280 226 226 211 171 ## [109] 163 129 105 80 76 58 11 10 309 275 243 234 117 56 329 302 271 266 ## [127] 196 161 124 118 72 71 313 209 198 157 158 155 44 267 273 254 188 134 ## [145] 110 77 48 6 261 218 110 90 25 252 154 65 18 14 276 227 157 161 ## [163] 29 273 243 118 79 51 42 1 262 229 87 246 158 3 256 144 143 61 ## [181] 31 19 2 141 173 23 15 5 102 102 179 67 36 177 132 0 5 197 ## [199] 121 2 225 225 164 166 2 132 132 106 66 87 67 295 236 346 211 204 ## [217] 286 334 150 166 90 215 24 69 4 132 2 230 222 169 112 27 233 65 ## [235] 2 279 271 238 232 21 228 223 191 207 164 151 162 65 65 67 17 286 ## [253] 97 212 19 324 86 110 68 208 203 183 284 62 52 30 137 10 193 22 ## [271] 101 101 97 96 90 0 0 266 298 227 97 128 10 312 323 4 0 4 ## [289] 274 241 209 168 168 316 207 84 287 100 461 237 237 235 139 214 98 355 ## [307] 323 280 283 315 298 298 231 180 212 224 221 221 221 337 174 142 423 371 ## [325] 166 282 265 165 164 391 394 348 352 352 338 242 196 162 128 291 263 235 ## [343] 235 269 204 214 201 175 160 146 154 81 339 291 277 259 219 213 207 213 ## [361] 180 132 140 119 111 102 392 283 281 229 189 38 274 168 168 170 164 157 ## [379] 150 150 135 87 79 322 322 322 274 259 216 167 138 317 289 275 237 186 ## [397] 150 144 125 80 72 49 56 315 292 233 221 219 195 195 198 177 152 144 ## [415] 103 67 384 381 379 345 332 210 170 159 143 142 132 99 90 95 95 87 ## [433] 33 33 33 26 377 340 307 301 225 179 166 115 97 93 54 416 335 249 ## [451] 222 213 201 189 141 52 42 318 300 300 300 244 238 218 186 176 136 142 ## [469] 131 131 127 124 109 76 54 264 214 185 181 151 154 154 73 70 403 336 ## [487] 281 228 216 187 190 179 144 131 100 47 43 347 289 277 259 259 259 218 ## [505] 218 211 157 141 53 4 281 257 229 224 217 218 134 134 90 95 56 34 ## [523] 35 21 22 386 284 248 235 235 207 199 146 144 122 110 66 273 197 153 ## [541] 107 100 67 254 209 173 122 122 114 56 2 247 127 106 85 76 67 3 ## [559] 193 198 199 164 108 65 127 112 103 179 34 14 212 191 150 144 80 171 ## [577] 133 66 121 95 182 166 21 6 1 31 23 6 388 388 62 20 26 158 ## [595] 332 370 274 242 228 98 15 277 222 306 52 187 186 269 295 195 172 214 ## [613] 184 123 6 55 3 142 148 93 139 316 270 271 262 179 182 240 189 73 ## [631] 32 106 134 83 281 236 137 137 144 249 304 192 34 259 197 3 155 223 ## [649] 165 152 184 329 329 253 107 135 50 134 141 227 142 124 57 223 175 171 ## [667] 241 215 71 1 269 230 292 252 25 248 63 248 261 188 91 190 175 69 ## [685] 25 192 162 211 248 261 278 199 233 456 455 229 156 111 124 22 233 323 ## [703] 344 340 114 193 118 246 267 254 195 168 229 236 219 280 332 313 244 244 ## [721] 295 187 137 138 182 86 125 17 57 361 384 128 358 212 374 310 157 99 ## [739] 99 84 126 214 125 321 129 111 58 69 190 190 52 24 226 226 321 296 ## [757] 211 118 101 276 258 222 115 182 137 251 208 32 8 2 0 206 210 186 ## [775] 112 475 57 316 231 351 143 252 159 327 336 65 143 254 254 3 15 90 ## [793] 209 183 183 271 81 235 163 283 248 190 59 119 230 288 410 216 24 120 ## [811] 54 1 290 279 268 293 260 81 269 272 309 361 336 315 HIV %&gt;% mutate(Period_HIV_death = as.duration(hiv_d %--% date_d)) |&gt; summarise(mean_time=mean(Period_HIV_death)) ## # A tibble: 1 × 1 ## mean_time ## &lt;dbl&gt; ## 1 462043713. "],["appendix-b.html", "C Appendix B Ejercicios para las funciones de transformaciones 2 Seleccione los siguientes datos sobre COVID en PR 1. Calcular el promedio de Muertes por dia de nuevos muertos desde el comienzo hasta el ultimo dia del archivo 2. ¿Cual es la máximo de nuevos casos en un día 3. ¿Calcular la cantidad cumulativa de numero de camas CamasICU 4. Haz una grafica de la varianza y como cambia atravez del tiempo.", " C Appendix B ## [1] &quot;2024-11-07&quot; Ejercicios para las funciones de transformaciones 2 Seleccione los siguientes datos sobre COVID en PR LEEN bien lo que estoy pidiendo. El nombre de las columnas pueden engañar!!! library(tidyverse) library(data.table) url_COVID_PR=fread(&quot;https://raw.githubusercontent.com/rafalab/pr-covid/master/dashboard/data/DatosMortalidad.csv&quot;) library(gt) Covid=url_COVID_PR gt(tail(Covid, n=2)) #lgthcseqtv table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #lgthcseqtv thead, #lgthcseqtv tbody, #lgthcseqtv tfoot, #lgthcseqtv tr, #lgthcseqtv td, #lgthcseqtv th { border-style: none; } #lgthcseqtv p { margin: 0; padding: 0; } #lgthcseqtv .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #lgthcseqtv .gt_caption { padding-top: 4px; padding-bottom: 4px; } #lgthcseqtv .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #lgthcseqtv .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #lgthcseqtv .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #lgthcseqtv .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #lgthcseqtv .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #lgthcseqtv .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #lgthcseqtv .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #lgthcseqtv .gt_column_spanner_outer:first-child { padding-left: 0; } #lgthcseqtv .gt_column_spanner_outer:last-child { padding-right: 0; } #lgthcseqtv .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #lgthcseqtv .gt_spanner_row { border-bottom-style: hidden; } #lgthcseqtv .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #lgthcseqtv .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #lgthcseqtv .gt_from_md > :first-child { margin-top: 0; } #lgthcseqtv .gt_from_md > :last-child { margin-bottom: 0; } #lgthcseqtv .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #lgthcseqtv .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #lgthcseqtv .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #lgthcseqtv .gt_row_group_first td { border-top-width: 2px; } #lgthcseqtv .gt_row_group_first th { border-top-width: 2px; } #lgthcseqtv .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #lgthcseqtv .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #lgthcseqtv .gt_first_summary_row.thick { border-top-width: 2px; } #lgthcseqtv .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #lgthcseqtv .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #lgthcseqtv .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #lgthcseqtv .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #lgthcseqtv .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #lgthcseqtv .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #lgthcseqtv .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #lgthcseqtv .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #lgthcseqtv .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #lgthcseqtv .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #lgthcseqtv .gt_left { text-align: left; } #lgthcseqtv .gt_center { text-align: center; } #lgthcseqtv .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #lgthcseqtv .gt_font_normal { font-weight: normal; } #lgthcseqtv .gt_font_bold { font-weight: bold; } #lgthcseqtv .gt_font_italic { font-style: italic; } #lgthcseqtv .gt_super { font-size: 65%; } #lgthcseqtv .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #lgthcseqtv .gt_asterisk { font-size: 100%; vertical-align: 0; } #lgthcseqtv .gt_indent_1 { text-indent: 5px; } #lgthcseqtv .gt_indent_2 { text-indent: 10px; } #lgthcseqtv .gt_indent_3 { text-indent: 15px; } #lgthcseqtv .gt_indent_4 { text-indent: 20px; } #lgthcseqtv .gt_indent_5 { text-indent: 25px; } #lgthcseqtv .katex-display { display: inline-flex !important; margin-bottom: 0.75em !important; } #lgthcseqtv div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after { height: 0px !important; } Fecha Muertes IncrementoMuertes CasosPCR_Salud IncCasosPCR_Salud CasosSaludNuevo IncCasosSaludNuevo HospitCOV19 CamasICU CamasICU_disp Ventiladores MuertesSalud IncMueSalud VacDoses VacAdm N1MoreDoses N2Doses 10/18/21 3209 2 151033 6 151089 11 78 28 189 17 3212 2 4972170 4848929 2578407 2306058 10/19/21 3213 4 151089 56 NA NA 82 22 193 16 3213 1 NA NA NA NA 1. Calcular el promedio de Muertes por dia de nuevos muertos desde el comienzo hasta el ultimo dia del archivo 2. ¿Cual es la máximo de nuevos casos en un día 3. ¿Calcular la cantidad cumulativa de numero de camas CamasICU Enseñe solamente las ultimas 4 filas 4. Haz una grafica de la varianza y como cambia atravez del tiempo. usa puntos para cada fecha añade una regresión LOESS cambia los nombres de los ejes para algo más claro los colores de los puntos cambia el color de la linea "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
